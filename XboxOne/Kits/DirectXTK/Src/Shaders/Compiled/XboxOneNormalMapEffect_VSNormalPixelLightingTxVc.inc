#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[168]
// Embedded Data:
//  0x000000a8 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a3 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 o1.x, v0.xyzw, cb0[15].xyzw
dp4 o1.y, v0.xyzw, cb0[16].xyzw
dp4 o1.z, v0.xyzw, cb0[17].xyzw
dp4_sat o1.w, v0.xyzw, cb0[14].xyzw
dp3 r0.x, v1.xyzx, cb0[19].xyzx
dp3 r0.y, v1.xyzx, cb0[20].xyzx
dp3 r0.z, v1.xyzx, cb0[21].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mul o3.w, v3.w, cb0[0].w
mov o3.xyz, v3.xyzx
dp4 o4.x, v0.xyzw, cb0[22].xyzw
dp4 o4.y, v0.xyzw, cb0[23].xyzw
dp4 o4.z, v0.xyzw, cb0[24].xyzw
dp4 o4.w, v0.xyzw, cb0[25].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[168], bundle is:[199] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 296 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 21;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x54           // 00000000000C: C2820154
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x50          // 000000000010: C2840150
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x4c         // 000000000014: C286014C
  s_buffer_load_dwordx16  s[16:31], s[0:3], 0x38        // 000000000018: C3080138
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 00000000001C: C3100158
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000024: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 000000000028: 0E02140A
  v_mac_f32     v0, s5, v9                              // 00000000002C: 3E001205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000030: C2000103
  v_mul_legacy_f32  v2, s14, v10                        // 000000000034: 0E04140E
  v_mac_f32     v1, s9, v9                              // 000000000038: 3E021209
  v_mac_f32     v0, s4, v8                              // 00000000003C: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000040: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000044: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 000000000048: 0E060100
  v_mul_legacy_f32  v9, s23, v7                         // 00000000004C: 0E120E17
  v_mul_legacy_f32  v10, s27, v7                        // 000000000050: 0E140E1B
  v_mul_legacy_f32  v11, s31, v7                        // 000000000054: 0E160E1F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000058: 0E1C0E13
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s35, v7                         // 000000000064: 0E100E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000068: 0E1E0E27
  v_mul_legacy_f32  v20, s43, v7                        // 00000000006C: 0E280E2B
  v_mul_legacy_f32  v7, s47, v7                         // 000000000070: 0E0E0E2F
  v_mac_f32     v9, s22, v6                             // 000000000074: 3E120C16
  v_mac_f32     v10, s26, v6                            // 000000000078: 3E140C1A
  v_mac_f32     v11, s30, v6                            // 00000000007C: 3E160C1E
  v_mac_f32     v14, s18, v6                            // 000000000080: 3E1C0C12
  v_mac_f32     v3, v2, v2                              // 000000000084: 3E060502
  v_mac_legacy_f32  v8, s34, v6                         // 000000000088: 0C100C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v20, s42, v6                        // 000000000090: 0C280C2A
  v_mac_legacy_f32  v7, s46, v6                         // 000000000094: 0C0E0C2E
  v_mac_f32     v9, s21, v5                             // 000000000098: 3E120A15
  v_mac_f32     v10, s25, v5                            // 00000000009C: 3E140A19
  v_mac_f32     v11, s29, v5                            // 0000000000A0: 3E160A1D
  v_mac_f32     v14, s17, v5                            // 0000000000A4: 3E1C0A11
  v_rsq_f32     v3, v3                                  // 0000000000A8: 7E065D03
  v_mac_legacy_f32  v8, s33, v5                         // 0000000000AC: 0C100A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000B0: 0C1E0A25
  v_mac_legacy_f32  v20, s41, v5                        // 0000000000B4: 0C280A29
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000B8: 0C0E0A2D
  v_mac_f32     v9, s20, v4                             // 0000000000BC: 3E120814
  v_mac_f32     v10, s24, v4                            // 0000000000C0: 3E140818
  v_mac_f32     v11, s28, v4                            // 0000000000C4: 3E16081C
  v_mad_legacy_f32  v14, v4, s16, v14 clamp             // 0000000000C8: D280080E 04382104
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000D0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000D4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000D8: 0E000700
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  v_mul_legacy_f32  v3, s0, v19                         // 0000000000E0: 0E062600
  v_mac_legacy_f32  v8, s32, v4                         // 0000000000E4: 0C100820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000E8: 0C1E0824
  v_mac_legacy_f32  v20, s40, v4                        // 0000000000EC: 0C280828
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000F0: 0C0E082C
  v_mov_b32     v4, 0                                   // 0000000000F4: 7E080280
  v_mov_b32     v5, 1.0                                 // 0000000000F8: 7E0A02F2
  exp           pos0, v8, v15, v20, v7 done             // 0000000000FC: F80008CF 07140F08
  exp           param0, v12, v13, v4, v5                // 000000000104: F800020F 05040D0C
  exp           param1, v9, v10, v11, v14               // 00000000010C: F800021F 0E0B0A09
  exp           param2, v2, v1, v0, v5                  // 000000000114: F800022F 05000102
  exp           param3, v16, v17, v18, v3               // 00000000011C: F800023F 03121110
  s_endpgm                                              // 000000000124: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  296
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 6
//  num_alu                           : 51
//  num_fc                            : 12
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 296
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 6
// num_alu                           : 51
// num_fc                            : 12
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[369], bundle is:[212] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 392 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 58;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x58       // 00000000000C: C3060958
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx16  s[28:43], s[8:11], 0x38       // 000000000018: C30E0938
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x54        // 00000000001C: C2960954
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x50        // 00000000002C: C2980950
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[52:55], s[8:11], 0x4c        // 00000000003C: C29A094C
  v_mac_legacy_f32  v0, s12, v4                         // 000000000040: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000044: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 000000000048: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 00000000004C: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000050: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000054: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 000000000058: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 00000000005C: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000060: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v11, s35, v7                        // 000000000068: 0E160E23
  v_mul_legacy_f32  v14, s46, v10                       // 00000000006C: 0E1C142E
  v_mac_legacy_f32  v3, s24, v4                         // 000000000070: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000074: E0704040 04400000
  v_mac_legacy_f32  v11, s34, v6                        // 00000000007C: 0C160C22
  v_mul_legacy_f32  v0, s39, v7                         // 000000000080: 0E000E27
  v_mul_legacy_f32  v15, s50, v10                       // 000000000084: 0E1E1432
  v_mac_legacy_f32  v14, s45, v9                        // 000000000088: 0C1C122D
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 00000000008C: E0704044 04400100
  v_mac_legacy_f32  v11, s33, v5                        // 000000000094: 0C160A21
  v_mac_legacy_f32  v0, s38, v6                         // 000000000098: 0C000C26
  v_mul_legacy_f32  v1, s43, v7                         // 00000000009C: 0E020E2B
  v_mul_legacy_f32  v10, s54, v10                       // 0000000000A0: 0E141436
  v_mac_legacy_f32  v15, s49, v9                        // 0000000000A4: 0C1E1231
  v_mac_legacy_f32  v14, s44, v8                        // 0000000000A8: 0C1C102C
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000AC: E0704048 04400200
  v_mac_legacy_f32  v11, s32, v4                        // 0000000000B4: 0C160820
  v_mac_legacy_f32  v0, s37, v5                         // 0000000000B8: 0C000A25
  v_mac_legacy_f32  v1, s42, v6                         // 0000000000BC: 0C020C2A
  v_mul_legacy_f32  v2, s31, v7                         // 0000000000C0: 0E040E1F
  v_mac_legacy_f32  v10, s53, v9                        // 0000000000C4: 0C141235
  v_mac_legacy_f32  v15, s48, v8                        // 0000000000C8: 0C1E1030
  v_mul_legacy_f32  v7, v14, v14                        // 0000000000CC: 0E0E1D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s36, v4                         // 0000000000D8: 0C000824
  v_mac_legacy_f32  v1, s41, v5                         // 0000000000DC: 0C020A29
  v_mac_legacy_f32  v2, s30, v6                         // 0000000000E0: 0C040C1E
  v_mac_legacy_f32  v10, s52, v8                        // 0000000000E4: 0C141034
  v_mac_legacy_f32  v7, v15, v15                        // 0000000000E8: 0C0E1F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000EC: E0704000 04400C00
  v_mac_legacy_f32  v1, s40, v4                         // 0000000000F4: 0C020828
  v_mac_legacy_f32  v2, s29, v5                         // 0000000000F8: 0C040A1D
  v_mac_legacy_f32  v7, v10, v10                        // 0000000000FC: 0C0E150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000100: E0704004 04400D00
  v_mad_legacy_f32  v2, v4, s28, v2 clamp               // 000000000108: D2800802 04083904
  v_rsq_f32     v3, v7                                  // 000000000110: 7E065D07
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04400B00
  v_mul_legacy_f32  v4, v10, v3                         // 00000000011C: 0E08070A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000120: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000128: C2028903
  v_mul_legacy_f32  v0, v15, v3                         // 00000000012C: 0E00070F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000130: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v3                         // 000000000138: 0E02070E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:28 glc slc // 00000000013C: E070401C 04400200
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000144: E0704020 04400400
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 00000000014C: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000154: E0704028 04400100
  s_waitcnt     lgkmcnt(0)                              // 00000000015C: BF8C007F
  v_mul_legacy_f32  v0, s5, v19                         // 000000000160: 0E002605
  buffer_store_dword  v16, v0, s[0:3], s4 offset:48 glc slc // 000000000164: E0704030 04401000
  buffer_store_dword  v17, v0, s[0:3], s4 offset:52 glc slc // 00000000016C: E0704034 04401100
  buffer_store_dword  v18, v0, s[0:3], s4 offset:56 glc slc // 000000000174: E0704038 04401200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 00000000017C: E070403C 04400000
  s_endpgm                                              // 000000000184: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   58
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   88
//  CycleSimNWaves:             88
//  Code Size:                  392
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 18
//  num_alu                           : 49
//  num_fc                            : 14
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 11
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 58
// m_uSCCodeSize                     : 392
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 88
// m_uCycleSimNWaves                 : 88

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 18
// num_alu                           : 49
// num_fc                            : 14
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 11
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[583], bundle is:[208] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneNormalMapEffect_VSNormalPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 348 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 21;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x38         // 00000000000C: C3020138
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x4c         // 000000000010: C28A014C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x50         // 000000000014: C28C0150
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x54         // 000000000018: C28E0154
  s_waitcnt     lgkmcnt(0)                              // 00000000001C: BF8C007F
  s_buffer_load_dword  s23, s[0:3], 0x03                // 000000000020: C20B8103
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 000000000024: C3100158
  s_mov_b32     m0, 0x00010000                          // 000000000028: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000030: BF8C0F70
  v_mul_legacy_f32  v0, s11, v7                         // 000000000034: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000038: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 00000000003C: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000040: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 000000000044: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000048: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000054: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000058: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 00000000005C: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mul_legacy_f32  v11, s7, v7                         // 000000000064: 0E160E07
  v_mac_legacy_f32  v11, s6, v6                         // 000000000068: 0C160C06
  v_mac_legacy_f32  v11, s5, v5                         // 00000000006C: 0C160A05
  v_mad_legacy_f32  v11, v4, s4, v11 clamp              // 000000000070: D280080B 042C0904
  v_mul_legacy_f32  v14, s22, v10                       // 000000000078: 0E1C1416
  v_mac_legacy_f32  v14, s21, v9                        // 00000000007C: 0C1C1215
  v_mac_legacy_f32  v14, s20, v8                        // 000000000080: 0C1C1014
  v_mul_legacy_f32  v15, s26, v10                       // 000000000084: 0E1E141A
  v_mac_legacy_f32  v15, s25, v9                        // 000000000088: 0C1E1219
  v_mac_legacy_f32  v15, s24, v8                        // 00000000008C: 0C1E1018
  v_mul_legacy_f32  v10, s30, v10                       // 000000000090: 0E14141E
  v_mac_legacy_f32  v10, s29, v9                        // 000000000094: 0C14121D
  v_mac_legacy_f32  v10, s28, v8                        // 000000000098: 0C14101C
  v_mul_legacy_f32  v8, v10, v10                        // 00000000009C: 0E10150A
  v_mac_legacy_f32  v8, v15, v15                        // 0000000000A0: 0C101F0F
  v_mac_legacy_f32  v8, v14, v14                        // 0000000000A4: 0C101D0E
  v_rsq_f32     v8, v8                                  // 0000000000A8: 7E105D08
  v_mul_legacy_f32  v9, v14, v8                         // 0000000000AC: 0E12110E
  v_mul_legacy_f32  v14, v15, v8                        // 0000000000B0: 0E1C110F
  v_mul_legacy_f32  v8, v10, v8                         // 0000000000B4: 0E10110A
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  v_mul_legacy_f32  v10, s23, v19                       // 0000000000BC: 0E142617
  v_mul_legacy_f32  v15, s35, v7                        // 0000000000C0: 0E1E0E23
  v_mac_legacy_f32  v15, s34, v6                        // 0000000000C4: 0C1E0C22
  v_mac_legacy_f32  v15, s33, v5                        // 0000000000C8: 0C1E0A21
  v_mac_legacy_f32  v15, s32, v4                        // 0000000000CC: 0C1E0820
  v_mul_legacy_f32  v19, s39, v7                        // 0000000000D0: 0E260E27
  v_mac_legacy_f32  v19, s38, v6                        // 0000000000D4: 0C260C26
  v_mac_legacy_f32  v19, s37, v5                        // 0000000000D8: 0C260A25
  v_mac_legacy_f32  v19, s36, v4                        // 0000000000DC: 0C260824
  v_mul_legacy_f32  v20, s43, v7                        // 0000000000E0: 0E280E2B
  v_mac_legacy_f32  v20, s42, v6                        // 0000000000E4: 0C280C2A
  v_mac_legacy_f32  v20, s41, v5                        // 0000000000E8: 0C280A29
  v_mac_legacy_f32  v20, s40, v4                        // 0000000000EC: 0C280828
  v_mul_legacy_f32  v7, s47, v7                         // 0000000000F0: 0E0E0E2F
  v_mac_legacy_f32  v7, s46, v6                         // 0000000000F4: 0C0E0C2E
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000F8: 0C0E0A2D
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000FC: 0C0E082C
  s_movk_i32    s0, 0x0050                              // 000000000100: B0000050
  s_nop         0x0000                                  // 000000000104: BF800000
  v_mul_lo_i32  v1, v1, s0                              // 000000000108: D2D60001 00000101
  ds_write2_b32  v1, v15, v19 offset0:16 offset1:17     // 000000000110: D8381110 00130F01
  ds_write2_b32  v1, v20, v7 offset0:18 offset1:19      // 000000000118: D8381312 00071401
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000120: D8380100 000D0C01
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000128: D8380504 00020001
  ds_write2_b32  v1, v3, v11 offset0:6 offset1:7        // 000000000130: D8380706 000B0301
  ds_write2_b32  v1, v9, v14 offset0:8 offset1:9        // 000000000138: D8380908 000E0901
  ds_write_b32  v1, v8 offset:40                        // 000000000140: D8340028 00000801
  ds_write2_b32  v1, v16, v17 offset0:12 offset1:13     // 000000000148: D8380D0C 00111001
  ds_write2_b32  v1, v18, v10 offset0:14 offset1:15     // 000000000150: D8380F0E 000A1201
  s_endpgm                                              // 000000000158: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   93
//  CycleSimNWaves:             93
//  Code Size:                  348
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 11
//  num_alu                           : 50
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 348
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 93
// m_uCycleSimNWaves                 : 93

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 11
// num_alu                           : 50
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 1
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE NormalMapEffect_VSNormalPixelLightingTxVc[] =
{
     68,  88,  66,  67, 213,  65, 
    138, 106, 169, 247, 165, 114, 
     32,   9,  27,   7, 192, 243, 
    107, 158,   1,   0,   0,   0, 
     98,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    200,   0,   0,   0, 108,   1, 
      0,   0, 216,  13,   0,   0, 
    232,  13,   0,   0,  73,  83, 
     71,  78, 140,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 123,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 132,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,  12,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   7,   8,   0,   0, 
    137,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  67,  79,  76, 
     79,  82,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 100,  12,   0,   0, 
     80,   0,   1,   0,  25,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 168,   0, 
      0,   0,  80,   0,   1,   0, 
    163,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 114,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   3,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   4,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     54,   0,   0,   5,  50,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   0,  17,  32,   0,   8, 
    130,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     14,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  19,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  20,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     21,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,  32,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  58,  16,  16,   0, 
      3,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 114,  32,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  24,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  25,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 201,   0, 
      0,   0,  23,   0,   1,   0, 
     32,  87,  23,   0, 120,   1, 
    237, 152, 205,  79,  19,  65, 
     20, 192, 103, 183, 219, 233, 
    118,  25,  94, 151, 101,  41, 
     95, 165,  20,  69, 172,  31, 
    124, 168,  23,  98, 200, 168, 
    160, 241,   0,   8, 145, 138, 
     28, 106,  76, 129,   2,  53, 
    133, 214, 182,  49,  36,  38, 
    136, 132, 232, 133,  63,  64, 
    141,  23,  19, 255,   8,  15, 
     70,  72, 185, 106,  76,  12, 
    250,  55, 120,  51, 241,  68, 
    188, 224, 123, 237, 110, 210, 
      0, 158,  53, 102, 127, 201, 
    111, 222, 206, 236, 236, 238, 
    155, 153,  61, 189, 187, 205, 
    172, 194, 143, 161, 175, 227, 
     20,  27,  15,  98,  15, 182, 
     84, 198, 252, 212,  65,  52, 
    106, 144, 188,  77,  45,  99, 
    223, 155, 168, 101, 172, 155, 
     26,   5, 197, 185,  52, 116, 
     17, 141,  99, 255,  42,  69, 
    148, 238,  83, 124, 245, 242, 
    225, 240, 167, 143, 143, 134, 
     39, 240, 122,   0,  13, 163, 
    119,  28,  37, 202, 209,  75, 
    168,  64, 221, 111, 214, 226, 
    126, 159,  62,  85, 139,  15, 
    237,  71, 107,   9,  80, 131, 
     28, 121,  79, 138, 154, 227, 
    185, 142,  58,  75,  58,  22, 
    202, 205, 133, 222,  75, 121, 
     18, 180, 222, 127,  13, 218, 
     35, 247, 156,   8,  58, 143, 
     90,   0, 165, 125,  35,  94, 
     56, 139, 118, 167, 236,  57, 
    125,  10, 180, 182,  29, 244, 
     79,  28,  32, 238, 185, 184, 
    184, 125, 138, 156,  77,  12, 
    112, 229, 121, 140, 171, 187, 
     38, 247, 133,  46, 112,  28, 
    228, 184, 121,  28,  15, 155, 
    227,  33, 113,  29,  13, 162, 
      6,  90, 135, 226, 166, 242, 
    122,  20,  19, 228,  33, 212, 
     68,  27,  80,  11, 109,  68, 
    113,  77,  28,  19, 227, 248, 
    243, 112, 252,  95, 121,  11, 
    218, 138, 182, 161, 237, 104, 
      4, 237,  64, 163, 104, 167, 
    155,  67,  21, 174,  84,  87, 
    200,  85, 252,  81,  17, 238, 
    115, 119, 224, 255, 134, 246, 
      0, 183, 185,   2, 237,   5, 
    245,  93, 106, 175,  61,  60, 
     60,  60,  60,  60,  60,  60, 
     60,  60,  60,  60,  60,  60, 
     60,  60, 254,  22, 106, 215, 
    198,   7, 230,  91, 223, 121, 
    194, 182, 182,  19, 202,  70, 
    121,  82, 217,  44, 143,  41, 
    207, 202, 131, 138, 190,  59, 
    163, 152, 187, 121,  28, 231, 
     54,   3, 195,  86, 193, 111, 
     49, 233,  83,  88,  25, 108, 
     13, 130, 150,  42,  53, 147, 
    201, 122,  75, 147, 186, 169, 
     74, 166, 112, 104,   6,  11, 
    218, 193, 134,  78,   8,  67, 
     35,  68,  64, 152, 154,  84, 
    124,  92, 158,   4,  19,  78, 
     67,  20, 206,  65,  28, 250, 
      1,  32,  44,  44, 217,  38, 
    108,  25,  21,  97, 105, 137, 
    136,  84, 253,  92, 158,  16, 
    166, 232,  17,  81, 113,  86, 
    196,  69, 159,   0, 209, 100, 
     88, 178, 213, 176, 101, 135, 
     17, 150,  13,  70,  68, 250, 
    238, 241, 181,  46, 195,  20, 
    167, 140, 168,  56,  99, 196, 
     69, 175,   1, 194, 214,  45, 
    217, 162, 219,  50, 162, 135, 
     37, 232, 235,  95, 180, 174, 
     65,  77,  13, 104, 160,   4, 
     84,  96,   1,   6, 180,  38, 
    214, 195,  33, 166, 155, 162, 
     91, 143, 138, 184,  30,  23, 
    231, 117,  16, 235, 170, 190, 
    246,  83,  53, 214,  62, 235, 
    108,  95,  15, 217, 129, 144, 
    202, 246,  69, 189, 230, 239, 
    196,  24,  52, 234, 160,  31, 
    163, 170,  48, 255,  21, 140, 
    102, 131, 229,  99, 236, 233, 
     54, 213, 235, 168,   6,  91, 
    173, 110,  85, 105, 165, 146, 
    215, 161,  49, 147, 154,  67, 
     99, 149, 107, 173,  90,  31, 
    115, 233, 166,   2,  45, 225, 
     68, 170, 227,   6,  81, 197, 
    169,  28, 182, 161, 154,  83, 
     93, 219, 203, 189, 249,  86, 
    126, 252, 238,  23,  93,  19, 
     73, 231, 153,  33,  39, 198, 
     80, 183,  94,  90, 101, 157, 
    154,  35, 108,  58, 243,  75, 
     78, 164,  92, 169,  70,   5, 
    110,  37, 151,  10, 151, 200, 
     91, 231, 254, 107,  39,  82, 
    125, 171,  14,  61, 156, 199, 
    123, 231, 126,  17, 165,  76, 
     71,  46,  39, 111, 167, 243, 
    185,  98, 114, 102,  54, 183, 
    218, 123,  45, 113, 179, 119, 
     42, 181, 156, 207, 166, 139, 
    201, 209,  76, 169, 152, 188, 
    158,  41, 164, 231,  74,  51, 
    137, 209, 100, 177,  48, 151, 
    156,  90,  74, 205, 167,  11, 
    197, 228,  72, 110,  57, 159, 
    201, 166, 231,  43,  15,  77, 
    172, 164, 111, 229,  10, 203, 
    169, 236, 120,  42, 127,  99, 
     97,   1, 167, 223, 159, 158, 
    170, 142,  76, 102,  86, 211, 
    217, 177, 204, 226,  82,  41, 
    179, 178, 152,  88, 157, 158, 
    235, 203, 207, 207, 178, 223, 
    231, 161, 133, 180,   0,   0, 
     53,  16,   0,   0, 214,   0, 
      0,   0,  23,   0,   1,   0, 
     16, 203,  23,   0, 120,   1, 
    237, 152, 205, 107,  19,  65, 
     24, 198,  39, 155, 113, 178, 
    137, 211, 201,  54, 221, 198, 
    180, 166, 105, 253, 174,  31, 
    213,  86, 170, 168, 136, 172, 
     95,  40,  88, 181, 216,  34, 
      5,  35,  26, 219, 168, 145, 
    214, 132, 166, 135, 162, 224, 
     23, 130, 138, 226,  81, 138, 
      7, 193, 255, 192, 147, 120, 
    210, 146,  30,  60, 120,  17, 
     17, 207,  30, 253,  19,  68, 
     16, 125, 158, 236,  70,  75, 
    212, 179,  34, 251,  35, 207, 
    188, 243, 185, 243, 204, 206, 
    230, 242, 190,  89,  38, 234, 
     92, 121,  50, 247, 149, 177, 
    237,  91, 207, 165,   7, 150, 
     16,  75, 216,   0, 168, 214, 
    169, 184,  44, 133, 200, 167, 
     89,  10, 209, 195,  34,   2, 
     97,   2, 135, 118,  65, 119, 
    209, 246,  16, 123,  33, 142, 
     51, 102,  95, 223, 223, 247, 
    252, 236, 195, 125, 167,  80, 
    223,   6, 113, 249,  88, 160, 
     61,  80,  10,  26, 128,  12, 
    212,  76,  43, 212, 240, 193, 
    173,  22, 195, 246,  22, 104, 
     49,  54,  11, 192, 117,  75, 
    161,  31,  20,  88, 252, 158, 
     97,  40,  56, 218, 111, 161, 
     55,  62, 175,  65, 195,  39, 
    207, 251, 175, 193, 119, 210, 
    184,  39, 194, 251,  88,  12, 
    189,  75, 136, 124, 110, 103, 
    233, 175,  33, 135, 131, 123, 
    229, 114, 158, 109,  30, 250, 
     19, 223,  64, 227,  57, 132, 
    245,  65, 136, 176, 174, 196, 
    241, 126,  21, 185, 211, 163, 
    172,   5,  71,  69, 147,   3, 
     10, 157,  10,  23, 169,  20, 
     20, 131, 112,  81,  42,  14, 
     37,  32,  92, 148, 210,  80, 
     11,   4, 131,  42,   9,  57, 
     16,  94, 186, 194, 199, 161, 
    218,  32, 152,  82, 240, 171, 
    224,  81, 225, 123,  85,  25, 
    168,   3, 234, 132, 150,  67, 
     89, 168,  11, 202,  65, 221, 
    193,  55,  35, 233,   4, 109, 
     22,  64,  69, 252, 147,  42, 
    203, 255, 162,  85,  52, 202, 
    240, 223, 194, 119, 208, 248, 
     63,  16, 255, 109, 248, 240, 
    142, 169, 144, 144, 144, 144, 
    144, 144, 144, 144, 144, 144, 
    144, 144, 144, 144, 144, 144, 
    191, 137, 181, 226, 214,  75, 
     17, 189,  61, 127,  93,  60, 
    120,  53,  22,  87,  11,  21, 
    196, 164,  17, 102,  71, 220, 
     44, 140, 198,  31, 213, 116, 
    244, 198, 188, 209,  66, 183, 
     25, 203,  12, 199, 231, 106, 
     45,   9, 161,  83, 218, 210, 
    203, 140,  52,  67, 241, 199, 
     53, 109,  11, 221, 154, 176, 
    116,  90,  75, 189, 220,  40, 
    227, 216, 150, 110,  79,  72, 
    221, 169, 149, 118, 109, 169, 
     59,  18,  74, 243, 217, 171, 
     76, 218, 108, 118, 179,  38, 
     99,  43, 237, 121, 149, 143, 
     66, 120, 114,  37,  86, 173, 
    195,  94,  91, 221, 156, 233, 
     75, 101, 245,   1, 246,  71, 
     60, 185,  34, 145, 214, 107, 
    177, 231,  70, 236, 185, 221, 
    117, 205,  64,  42, 167,  55, 
     57,  89, 125, 152, 227, 150, 
     39, 123, 236, 180,  94,   3, 
     31,  27, 224, 163,  27,  62, 
    182, 165,  92, 221, 239, 228, 
    180, 233,  50, 102, 136, 115, 
    162, 158,  92,  13,  95, 235, 
    225,  43,   7,  95, 131, 142, 
    171, 147, 221,  56,   5, 199, 
    180,  39, 123, 225, 177,  11, 
     30,  19, 237,  70,  75, 246, 
    181, 120, 210, 178, 111, 188, 
    147,  59, 109,  25,  59, 173, 
    174,  57, 236,  91, 234, 201, 
     68, 204,  54,  46, 235, 240, 
     26, 189, 103, 213, 146,  49, 
     97,  50, 108, 195, 163, 137, 
     89,  38, 203,  58, 253,  48, 
     74, 236, 201, 136, 185, 189, 
    140, 152, 195, 115,  47,  89, 
     43,  76,  63, 219, 142,  39, 
      7,  25,  91,  61, 185, 131, 
     49, 229, 201, 221, 140, 152, 
     47, 196, 205,  87, 245,  52, 
    161,  85, 255, 253, 160, 131, 
    169, 180, 166, 190,  12, 139, 
    166,  62, 135,  69,  83,  95, 
    189,  46, 253,  92,  92, 131, 
    185,  32, 247,  56,  19, 196, 
    213,  80,  28, 138,   8,  63, 
     71, 215,   9, 201,  32, 147, 
    247, 190, 252, 244,  67, 237, 
    234, 139,  47, 172, 147, 183, 
    193, 154, 103,  65, 100, 222, 
     89,  67,  63,  97,  70, 250, 
     87,  62,   7, 243,  63,   5, 
    145,  94, 153,  35,  51, 126, 
    246, 208,  79, 150, 130,  76, 
    144,  31, 119, 130, 200, 156, 
     26, 115, 203, 205,  62, 250, 
    131, 241,  42,  68, 167, 251, 
    119, 229,  79,  20,  43, 229, 
    106, 126, 236,  92, 121, 182, 
    111, 239, 232, 161, 190, 145, 
    194,  84, 101, 178,  88, 205, 
     31,  41, 205,  84, 243,   7, 
     74, 211, 197, 241, 153, 177, 
    209,  35, 249, 234, 244, 120, 
    126, 228,  98,  97, 162,  56, 
     93, 205, 239,  47,  79,  85, 
     74, 147, 197, 137, 250, 162, 
    227, 151, 139, 199, 202, 211, 
     83, 133, 201, 163, 133, 202, 
    193, 243, 231,  49, 253, 204, 
    201,  17, 191, 103, 184,  52, 
     91, 156,  28,  42,  93, 184, 
     56,  83, 186, 124,  97, 116, 
    246, 228, 248, 230, 202, 196, 
     57, 241,  29,  31, 161, 160, 
    158,   0,   0,   0,  53,  16, 
      0,   0, 210,   0,   0,   0, 
     23,   0,   1,   0,   0, 139, 
     23,   0, 120,   1, 237, 152, 
    203, 107,  19,  81,  20, 198, 
    239,  36, 211, 219, 201, 228, 
    244, 100, 146,  76, 163, 173, 
    233, 180, 245,  17, 163, 246, 
    165, 184,  16,  87,  62, 113, 
     81, 181, 197,  22, 233,  34, 
     34, 177,  77,  53, 210,  54, 
    161, 233, 162, 160, 104,  21, 
     68, 208,  34, 254,  11, 238, 
      4,  55,  46, 187, 106,  37, 
    221,  42,  72, 145, 210,  63, 
    195, 181,   8, 245,  59, 157, 
     73,  13,  69, 113, 169, 200, 
    252, 224,  59, 231, 222,  59, 
    119, 102, 206, 125, 172, 190, 
    151, 251, 212,  14,  39,  31, 
    190,  27, 146, 156, 222, 238, 
    185, 191,  28,  81, 170,  69, 
     58,  77,  84,  93, 137,  74, 
    101,  51,  18, 149,  58,  44, 
    193, 128,  48, 183,  29, 233, 
     20,  84,  64, 255,  28, 114, 
     30, 146, 231, 146,  63, 125, 
    124, 122,  97, 122, 250, 217, 
      5,  52,  85,  63,  36, 191, 
    187,  21,  72, 230, 198,  33, 
    121, 215, 129, 132, 152, 132, 
     38, 180,   4, 128, 223, 236, 
     34, 191,  21,  13,  66, 205, 
    180,  74,   0, 123, 191, 161, 
    138,  18, 126, 205,  48,  36, 
    245, 255,  14, 169,  77, 104, 
    124, 179,  81, 103,  99, 252, 
     95,  66, 246, 164, 113,  78, 
    130, 156,  71,  51,  12,  69, 
     33, 225,  99, 176, 232, 198, 
     20,  43,  56,  87,  25, 150, 
    181, 125, 128, 126, 199,  54, 
     48, 165, 209,  68, 163,  47, 
     89, 171, 145,  33, 109,  60, 
    239, 209, 145, 117,  71,  71, 
     19,  39,  53,   6,  53,  46, 
    148, 198,  97, 106,  28, 146, 
    182,  32, 108, 168, 182,  33, 
     92,   0,  77,  80,  27, 132, 
      2, 117,   2, 194,  38, 235, 
     36, 148, 130, 210,  16, 214, 
    164,  81, 152,  70, 141,  26, 
     23,  72, 239, 135,  58, 160, 
     78, 232,   0, 148, 133, 186, 
     32,  15, 234,  14, 238, 174, 
     41, 149, 160,  47,   1, 104, 
    195,  95, 169, 142, 248,  55, 
     73,  71,  27,  59, 241, 127, 
     34, 123, 128, 109, 222, 197, 
    223,  13, 255, 188,  27,  87, 
    100,  84,  66,  72,  72,  72, 
     72,  72,  72,  72,  72,  72, 
     72,  72,  72,  72,  72,  72, 
    200,  95,  34, 210, 251, 116, 
     85,  69, 151,  62,  60,  86, 
    203, 107, 103, 140, 200, 250, 
     85, 227,  69, 125, 212,  88, 
    174, 143,  27, 175, 234,  50, 
     22, 125,  18, 175,  79,  24, 
    206, 250, 118, 244, 251, 170, 
    184,  26, 213, 196, 242,  90, 
    156,  21, 219, 164,  40, 102, 
     43, 178,  44,  69,   9,  54, 
    153, 201, 164,  54, 219,  36, 
    178,  76,  74, 179, 230,  20, 
    105,  74, 218, 154,  28,  75, 
     83,  43, 103,  88,  83, 134, 
     90, 236,  12, 197, 173, 165, 
     13,  51, 214, 103, 102, 220, 
     44, 183, 167, 178, 228,  58, 
     89, 234, 116,  61, 238,  72, 
    121, 180, 223, 241, 200, 115, 
     93, 238,  74, 185, 148, 117, 
     92, 178, 219,  29,  78, 116, 
     59, 196,  93,  14,  89, 183, 
    156,  71, 156,  76, 113,  34, 
    153, 101,  59, 233, 176, 212, 
    182,  47, 231, 242,  33, 246, 
    248,  32, 121, 212, 107, 123, 
    212,  99, 121, 116, 148, 115, 
    156, 163,  28,  29, 177, 115, 
    116, 216, 202, 209,   9, 206, 
    243, 113, 202, 211,  49,  59, 
     79, 121,  43,  79, 131, 204, 
     60,  64,  76, 253,  54,  83, 
    159, 197,  52, 170, 212, 123, 
    165, 150, 214,  12, 181, 185, 
     33, 214, 149, 147,  60, 179, 
    101,  36, 210,  42, 149,  70, 
    118,  91, 177, 100, 100, 106, 
     83, 102,  11, 178, 138,  40, 
    221, 138,  28, 141,  43,  43, 
    134,  28,  99, 149,  87, 167, 
    183,  12,  75,  41, 106,  67, 
    223,  73,  42,  78,  32, 167, 
    108, 236, 236, 147,  53, 241, 
    248, 196,  80, 245, 157,  48, 
    159,  14,  49, 134, 246, 140, 
    237, 120, 157, 123, 198, 118, 
    218, 166,  76, 254, 201,  68, 
    224,  29, 158,  14, 178, 120, 
    191, 226, 151,  26, 129, 219, 
    216,   9, 153, 129,  19, 247, 
    165, 242, 102, 179, 254,  96, 
    229, 155, 180, 133, 215, 193, 
     59, 213,  32, 247,  64,   4, 
    253, 137, 149,  96, 254, 219, 
     32,  75, 173, 226, 113, 177, 
    239, 254, 249, 102,  39, 216, 
     10, 158, 127,  14, 178, 120, 
     98, 226,  57, 239, 173, 227, 
    107, 240, 188,   6,  73, 165, 
     23, 207,  22, 110, 148, 170, 
    149,  90,  97, 226,  78, 101, 
    177, 255, 252, 248, 149, 254, 
    177, 226, 108, 117, 166,  84, 
     43,  12, 151,  23, 106, 133, 
     75, 229, 249, 210, 228, 194, 
    196, 248, 112, 161,  54,  63, 
     89,  24, 187,  87, 156,  42, 
    205, 215,  10,  23,  43, 179, 
    213, 242,  76, 105, 106, 231, 
    165, 145, 185, 210, 245, 202, 
    252, 108, 113, 230,  90, 177, 
    122, 121, 122,  26, 211, 111, 
    223,  28, 243,  71,  70, 203, 
    139, 165, 153, 171, 229, 187, 
    247,  22, 202, 115, 119, 199, 
     23, 111,  78,  14,  84, 167, 
    238, 168,  31, 160,  20, 141, 
    176,   0,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    212, 111, 161, 214, 194, 123, 
    184, 250,  88,  80,  68,  80, 
    114,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  78, 111, 114, 109,  97, 
    108,  77,  97, 112,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  78, 111, 114, 109,  97, 
    108,  80, 105, 120, 101, 108, 
     76, 105, 103, 104, 116, 105, 
    110, 103,  84, 120,  86,  99, 
     46, 112, 100,  98
};
