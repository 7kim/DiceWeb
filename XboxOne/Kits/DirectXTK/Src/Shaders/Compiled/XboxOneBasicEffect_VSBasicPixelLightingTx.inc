#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[166]
// Embedded Data:
//  0x000000a6 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a1 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 o1.x, v0.xyzw, cb0[15].xyzw
dp4 o1.y, v0.xyzw, cb0[16].xyzw
dp4 o1.z, v0.xyzw, cb0[17].xyzw
dp4_sat o1.w, v0.xyzw, cb0[14].xyzw
dp3 r0.x, v1.xyzx, cb0[19].xyzx
dp3 r0.y, v1.xyzx, cb0[20].xyzx
dp3 r0.z, v1.xyzx, cb0[21].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mov o3.xyz, l(1.000000,1.000000,1.000000,0)
mov o3.w, cb0[0].w
dp4 o4.x, v0.xyzw, cb0[22].xyzw
dp4 o4.y, v0.xyzw, cb0[23].xyzw
dp4 o4.z, v0.xyzw, cb0[24].xyzw
dp4 o4.w, v0.xyzw, cb0[25].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[166], bundle is:[196] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 296 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 17;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x54           // 00000000000C: C2820154
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x50          // 000000000010: C2840150
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x4c         // 000000000014: C286014C
  s_buffer_load_dwordx16  s[16:31], s[0:3], 0x38        // 000000000018: C3080138
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 00000000001C: C3100158
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000024: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 000000000028: 0E02140A
  v_mac_f32     v0, s5, v9                              // 00000000002C: 3E001205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000030: C2000103
  v_mul_legacy_f32  v2, s14, v10                        // 000000000034: 0E04140E
  v_mac_f32     v1, s9, v9                              // 000000000038: 3E021209
  v_mac_f32     v0, s4, v8                              // 00000000003C: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000040: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000044: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 000000000048: 0E060100
  v_mul_legacy_f32  v9, s23, v7                         // 00000000004C: 0E120E17
  v_mul_legacy_f32  v10, s27, v7                        // 000000000050: 0E140E1B
  v_mul_legacy_f32  v11, s31, v7                        // 000000000054: 0E160E1F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000058: 0E1C0E13
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s35, v7                         // 000000000064: 0E100E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000068: 0E1E0E27
  v_mul_legacy_f32  v16, s43, v7                        // 00000000006C: 0E200E2B
  v_mul_legacy_f32  v7, s47, v7                         // 000000000070: 0E0E0E2F
  v_mac_f32     v9, s22, v6                             // 000000000074: 3E120C16
  v_mac_f32     v10, s26, v6                            // 000000000078: 3E140C1A
  v_mac_f32     v11, s30, v6                            // 00000000007C: 3E160C1E
  v_mac_f32     v14, s18, v6                            // 000000000080: 3E1C0C12
  v_mac_f32     v3, v2, v2                              // 000000000084: 3E060502
  v_mac_legacy_f32  v8, s34, v6                         // 000000000088: 0C100C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v16, s42, v6                        // 000000000090: 0C200C2A
  v_mac_legacy_f32  v7, s46, v6                         // 000000000094: 0C0E0C2E
  v_mac_f32     v9, s21, v5                             // 000000000098: 3E120A15
  v_mac_f32     v10, s25, v5                            // 00000000009C: 3E140A19
  v_mac_f32     v11, s29, v5                            // 0000000000A0: 3E160A1D
  v_mac_f32     v14, s17, v5                            // 0000000000A4: 3E1C0A11
  v_rsq_f32     v3, v3                                  // 0000000000A8: 7E065D03
  v_mac_legacy_f32  v8, s33, v5                         // 0000000000AC: 0C100A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000B0: 0C1E0A25
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000B4: 0C200A29
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000B8: 0C0E0A2D
  v_mac_f32     v9, s20, v4                             // 0000000000BC: 3E120814
  v_mac_f32     v10, s24, v4                            // 0000000000C0: 3E140818
  v_mac_f32     v11, s28, v4                            // 0000000000C4: 3E16081C
  v_mad_legacy_f32  v14, v4, s16, v14 clamp             // 0000000000C8: D280080E 04382104
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000D0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000D4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000D8: 0E000700
  v_mac_legacy_f32  v8, s32, v4                         // 0000000000DC: 0C100820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000E0: 0C1E0824
  v_mac_legacy_f32  v16, s40, v4                        // 0000000000E4: 0C200828
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000E8: 0C0E082C
  v_mov_b32     v3, 0                                   // 0000000000EC: 7E060280
  v_mov_b32     v4, 1.0                                 // 0000000000F0: 7E0802F2
  s_waitcnt     lgkmcnt(0)                              // 0000000000F4: BF8C007F
  v_mov_b32     v5, s0                                  // 0000000000F8: 7E0A0200
  exp           pos0, v8, v15, v16, v7 done             // 0000000000FC: F80008CF 07100F08
  exp           param0, v12, v13, v3, v4                // 000000000104: F800020F 04030D0C
  exp           param1, v9, v10, v11, v14               // 00000000010C: F800021F 0E0B0A09
  exp           param2, v2, v1, v0, v4                  // 000000000114: F800022F 04000102
  exp           param3, v4, v4, v4, v5                  // 00000000011C: F800023F 05040404
  s_endpgm                                              // 000000000124: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   17
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   81
//  CycleSimNWaves:             81
//  Code Size:                  296
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 6
//  num_alu                           : 51
//  num_fc                            : 12
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 4
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 17
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 296
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 81
// m_uCycleSimNWaves                 : 81

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 6
// num_alu                           : 51
// num_fc                            : 12
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 4
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[364], bundle is:[210] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 396 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 58;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x58       // 00000000000C: C3060958
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx16  s[28:43], s[8:11], 0x38       // 000000000018: C30E0938
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x54        // 00000000001C: C2960954
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x50        // 00000000002C: C2980950
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[52:55], s[8:11], 0x4c        // 00000000003C: C29A094C
  v_mac_legacy_f32  v0, s12, v4                         // 000000000040: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000044: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 000000000048: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 00000000004C: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000050: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000054: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 000000000058: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 00000000005C: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000060: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v11, s35, v7                        // 000000000068: 0E160E23
  v_mul_legacy_f32  v14, s46, v10                       // 00000000006C: 0E1C142E
  v_mac_legacy_f32  v3, s24, v4                         // 000000000070: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000074: E0704040 04400000
  v_mac_legacy_f32  v11, s34, v6                        // 00000000007C: 0C160C22
  v_mul_legacy_f32  v0, s39, v7                         // 000000000080: 0E000E27
  v_mul_legacy_f32  v15, s50, v10                       // 000000000084: 0E1E1432
  v_mac_legacy_f32  v14, s45, v9                        // 000000000088: 0C1C122D
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 00000000008C: E0704044 04400100
  v_mac_legacy_f32  v11, s33, v5                        // 000000000094: 0C160A21
  v_mac_legacy_f32  v0, s38, v6                         // 000000000098: 0C000C26
  v_mul_legacy_f32  v1, s43, v7                         // 00000000009C: 0E020E2B
  v_mul_legacy_f32  v10, s54, v10                       // 0000000000A0: 0E141436
  v_mac_legacy_f32  v15, s49, v9                        // 0000000000A4: 0C1E1231
  v_mac_legacy_f32  v14, s44, v8                        // 0000000000A8: 0C1C102C
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000AC: E0704048 04400200
  v_mac_legacy_f32  v11, s32, v4                        // 0000000000B4: 0C160820
  v_mac_legacy_f32  v0, s37, v5                         // 0000000000B8: 0C000A25
  v_mac_legacy_f32  v1, s42, v6                         // 0000000000BC: 0C020C2A
  v_mul_legacy_f32  v2, s31, v7                         // 0000000000C0: 0E040E1F
  v_mac_legacy_f32  v10, s53, v9                        // 0000000000C4: 0C141235
  v_mac_legacy_f32  v15, s48, v8                        // 0000000000C8: 0C1E1030
  v_mul_legacy_f32  v7, v14, v14                        // 0000000000CC: 0E0E1D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s36, v4                         // 0000000000D8: 0C000824
  v_mac_legacy_f32  v1, s41, v5                         // 0000000000DC: 0C020A29
  v_mac_legacy_f32  v2, s30, v6                         // 0000000000E0: 0C040C1E
  v_mac_legacy_f32  v10, s52, v8                        // 0000000000E4: 0C141034
  v_mac_legacy_f32  v7, v15, v15                        // 0000000000E8: 0C0E1F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000EC: E0704000 04400C00
  v_mac_legacy_f32  v1, s40, v4                         // 0000000000F4: 0C020828
  v_mac_legacy_f32  v2, s29, v5                         // 0000000000F8: 0C040A1D
  v_mac_legacy_f32  v7, v10, v10                        // 0000000000FC: 0C0E150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000100: E0704004 04400D00
  v_mad_legacy_f32  v2, v4, s28, v2 clamp               // 000000000108: D2800802 04083904
  v_rsq_f32     v3, v7                                  // 000000000110: 7E065D07
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04400B00
  v_mul_legacy_f32  v4, v10, v3                         // 00000000011C: 0E08070A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000120: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000128: C2028903
  v_mul_legacy_f32  v0, v15, v3                         // 00000000012C: 0E00070F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000130: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v3                         // 000000000138: 0E02070E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:28 glc slc // 00000000013C: E070401C 04400200
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000144: E0704020 04400400
  v_mov_b32     v2, 1.0                                 // 00000000014C: 7E0402F2
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000150: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000158: E0704028 04400100
  buffer_store_dword  v2, v0, s[0:3], s4 offset:48 glc slc // 000000000160: E0704030 04400200
  s_waitcnt     lgkmcnt(0)                              // 000000000168: BF8C007F
  v_mov_b32     v0, s5                                  // 00000000016C: 7E000205
  buffer_store_dword  v2, v0, s[0:3], s4 offset:52 glc slc // 000000000170: E0704034 04400200
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000178: E0704038 04400200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 000000000180: E070403C 04400000
  s_endpgm                                              // 000000000188: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   58
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  396
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 18
//  num_alu                           : 50
//  num_fc                            : 14
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 12
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 58
// m_uSCCodeSize                     : 396
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 18
// num_alu                           : 50
// num_fc                            : 14
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 12
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[576], bundle is:[206] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTx.pdb
// Shader Semantic Hash      : 0x9cc6f69839766c3c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 348 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 17;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x38         // 00000000000C: C3020138
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x4c         // 000000000010: C28A014C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x50         // 000000000014: C28C0150
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x54         // 000000000018: C28E0154
  s_waitcnt     lgkmcnt(0)                              // 00000000001C: BF8C007F
  s_buffer_load_dword  s23, s[0:3], 0x03                // 000000000020: C20B8103
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 000000000024: C3100158
  s_mov_b32     m0, 0x00010000                          // 000000000028: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000030: BF8C0F70
  v_mul_legacy_f32  v0, s11, v7                         // 000000000034: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000038: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 00000000003C: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000040: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 000000000044: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000048: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000054: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000058: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 00000000005C: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mul_legacy_f32  v11, s7, v7                         // 000000000064: 0E160E07
  v_mac_legacy_f32  v11, s6, v6                         // 000000000068: 0C160C06
  v_mac_legacy_f32  v11, s5, v5                         // 00000000006C: 0C160A05
  v_mad_legacy_f32  v11, v4, s4, v11 clamp              // 000000000070: D280080B 042C0904
  v_mul_legacy_f32  v14, s22, v10                       // 000000000078: 0E1C1416
  v_mac_legacy_f32  v14, s21, v9                        // 00000000007C: 0C1C1215
  v_mac_legacy_f32  v14, s20, v8                        // 000000000080: 0C1C1014
  v_mul_legacy_f32  v15, s26, v10                       // 000000000084: 0E1E141A
  v_mac_legacy_f32  v15, s25, v9                        // 000000000088: 0C1E1219
  v_mac_legacy_f32  v15, s24, v8                        // 00000000008C: 0C1E1018
  v_mul_legacy_f32  v10, s30, v10                       // 000000000090: 0E14141E
  v_mac_legacy_f32  v10, s29, v9                        // 000000000094: 0C14121D
  v_mac_legacy_f32  v10, s28, v8                        // 000000000098: 0C14101C
  v_mul_legacy_f32  v8, v10, v10                        // 00000000009C: 0E10150A
  v_mac_legacy_f32  v8, v15, v15                        // 0000000000A0: 0C101F0F
  v_mac_legacy_f32  v8, v14, v14                        // 0000000000A4: 0C101D0E
  v_rsq_f32     v8, v8                                  // 0000000000A8: 7E105D08
  v_mul_legacy_f32  v9, v14, v8                         // 0000000000AC: 0E12110E
  v_mul_legacy_f32  v14, v15, v8                        // 0000000000B0: 0E1C110F
  v_mul_legacy_f32  v8, v10, v8                         // 0000000000B4: 0E10110A
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  v_mul_legacy_f32  v10, s35, v7                        // 0000000000BC: 0E140E23
  v_mac_legacy_f32  v10, s34, v6                        // 0000000000C0: 0C140C22
  v_mac_legacy_f32  v10, s33, v5                        // 0000000000C4: 0C140A21
  v_mac_legacy_f32  v10, s32, v4                        // 0000000000C8: 0C140820
  v_mul_legacy_f32  v15, s39, v7                        // 0000000000CC: 0E1E0E27
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000D0: 0C1E0C26
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000D4: 0C1E0A25
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000D8: 0C1E0824
  v_mul_legacy_f32  v16, s43, v7                        // 0000000000DC: 0E200E2B
  v_mac_legacy_f32  v16, s42, v6                        // 0000000000E0: 0C200C2A
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000E4: 0C200A29
  v_mac_legacy_f32  v16, s40, v4                        // 0000000000E8: 0C200828
  v_mul_legacy_f32  v7, s47, v7                         // 0000000000EC: 0E0E0E2F
  v_mac_legacy_f32  v7, s46, v6                         // 0000000000F0: 0C0E0C2E
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000F4: 0C0E0A2D
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000F8: 0C0E082C
  s_movk_i32    s0, 0x0050                              // 0000000000FC: B0000050
  v_mul_lo_i32  v1, v1, s0                              // 000000000100: D2D60001 00000101
  ds_write2_b32  v1, v10, v15 offset0:16 offset1:17     // 000000000108: D8381110 000F0A01
  ds_write2_b32  v1, v16, v7 offset0:18 offset1:19      // 000000000110: D8381312 00071001
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000118: D8380100 000D0C01
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000120: D8380504 00020001
  ds_write2_b32  v1, v3, v11 offset0:6 offset1:7        // 000000000128: D8380706 000B0301
  ds_write2_b32  v1, v9, v14 offset0:8 offset1:9        // 000000000130: D8380908 000E0901
  ds_write_b32  v1, v8 offset:40                        // 000000000138: D8340028 00000801
  v_mov_b32     v0, 1.0                                 // 000000000140: 7E0002F2
  ds_write2_b32  v1, v0, v0 offset0:12 offset1:13       // 000000000144: D8380D0C 00000001
  v_mov_b32     v2, s23                                 // 00000000014C: 7E040217
  ds_write2_b32  v1, v0, v2 offset0:14 offset1:15       // 000000000150: D8380F0E 00020001
  s_endpgm                                              // 000000000158: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   17
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   92
//  CycleSimNWaves:             92
//  Code Size:                  348
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 11
//  num_alu                           : 51
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 46
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 17
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 348
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 92
// m_uCycleSimNWaves                 : 92

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 11
// num_alu                           : 51
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 3
// num_inst_vop2                     : 46
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_VSBasicPixelLightingTx[] =
{
     68,  88,  66,  67,  67, 124, 
    175, 158,  65, 148,  11, 254, 
    210, 182, 182, 183, 163, 236, 
    251,  79,   1,   0,   0,   0, 
     23,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  76,   1, 
      0,   0, 148,  13,   0,   0, 
    164,  13,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,  12,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      7,   8,   0,   0, 137,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  67,  79,  76,  79,  82, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
     64,  12,   0,   0,  80,   0, 
      1,   0,  16,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 166,   0,   0,   0, 
     80,   0,   1,   0, 161,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     26,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  17,   0,   0,   0, 
     17,  32,   0,   8, 130,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  14,   0, 
      0,   0,  16,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     19,   0,   0,   0,  16,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  20,   0,   0,   0, 
     16,   0,   0,   8,  66,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  21,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,  32,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   3,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
      0,   0,  54,   0,   0,   6, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  58, 128,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     22,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  23,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  24,   0, 
      0,   0,  17,   0,   0,   8, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     25,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    198,   0,   0,   0,  23,   0, 
      1,   0,  32,  80,  23,   0, 
    120,   1, 237, 152,  79,  79, 
     19,  65,  20, 192, 103, 167, 
    219, 233, 118,  25,  30, 203, 
    178, 148, 127, 165,  20,  69, 
     69, 229,  95, 244,  32,  26, 
     50,  42,  96,  60,  64,   2, 
     66,  53,  28, 106,  72, 129, 
     22, 154,  20, 104, 104,  99, 
    184,  88,  11,  33, 122, 241, 
      3, 128, 225, 232, 209, 143, 
     96, 132,  64, 226, 213, 196, 
    120, 244,   3, 120,  52,  30, 
     12,  55, 125, 175, 221,  53, 
     13, 202,  89,  99, 246, 151, 
    254, 222, 219, 153, 221, 238, 
    190, 157, 217, 211, 155, 110, 
     97,  21, 190, 222, 216, 251, 
     76, 185, 111, 230, 205, 252, 
     14, 103,  44,  72,   3,  68, 
    167, 128, 228,  29, 138, 140, 
    125, 105, 166, 200,  88,  15, 
      5,  13, 197, 107,  27,  49, 
     93,  67, 123, 113, 124, 135, 
     50,  74, 231,  41, 191, 218, 
    123,  58, 154, 201, 108, 141, 
     62, 196, 227,  33, 148, 110, 
    243, 192,  85, 161,   2, 189, 
    142,  74, 212, 123, 102,  45, 
    222, 243, 233,  81, 181, 208, 
    252,   0,  90,  75, 136,   2, 
    242, 219, 125,  82,  20, 254, 
    204,  56,  74, 245, 159,   5, 
    213, 230,  65, 247, 165,  58, 
      9, 122, 223, 127,  13,  90, 
     35, 111, 159,   8, 218, 143, 
     90,   0,  13, 160, 196, 174, 
    187, 143, 222,  37, 159, 220, 
    177, 183, 151, 135, 232,  89, 
    252,  64, 188, 125, 241, 240, 
    198, 116, 127, 193, 166, 134, 
    132, 246,  34,  46, 248, 177, 
     37, 112,  66, 224,  73, 129, 
    139,  39, 112, 179,   5, 110, 
    146,  48, 208,  48, 106, 162, 
    117,  40,  46, 170, 168,  71, 
    177,  64, 209, 128,  90,  40, 
     22,  34, 108, 180,   9, 197, 
    119,  18,  88, 159, 136, 160, 
    248, 189, 138,  86, 180,  13, 
    109,  71,  59, 208,  40, 218, 
    137, 198, 208, 174, 106,  45, 
    244,  93,  17,  66, 171, 190, 
    161, 224, 248, 161,  34,  34, 
     64,  21, 254, 255, 208,  26, 
    224,  50,  87, 160, 181, 160, 
    177,  71, 237, 177, 143, 143, 
    143, 143, 143, 143, 143, 143, 
    143, 143, 143, 143, 143, 143, 
    143, 207, 223, 130, 119, 111, 
    191,  99, 129, 242, 225,  51, 
    246, 242,  32, 161, 109,  31, 
     77, 107,  59,  71, 147, 218, 
    243, 163,  97, 205,  56, 158, 
    211, 172, 227,  60, 206,  11, 
    135, 129, 233, 112,   8, 218, 
     76,   5,  52, 118,   4, 142, 
     14,  97, 155,  43, 221,  98, 
    170, 222, 214, 149,  97, 113, 
    197,  52,   1,  45,  96,  67, 
      7,  56, 208,   5,  17, 104, 
    130,  40,  72,  75,  87,  90, 
     64, 168, 243,  96, 193,  37, 
    136, 193,  85, 136, 195,  32, 
      0,  68, 164, 173, 218, 165, 
    163,  98,  50, 162, 108,  25, 
     85,  60,  40, 212,  57, 105, 
    201, 139,  50,  38, 175, 200, 
    184,  28, 144,  32, 155,  77, 
     91, 181, 153, 142, 234,  52, 
     35, 170, 209, 140, 170, 192, 
     99,  81, 234,  54,  45, 121, 
    193, 140, 201, 203, 102,  92, 
    246, 155,  32,  29, 195,  86, 
    173, 134, 163, 162,  70,  68, 
    129,  81, 254, 168, 119,  15, 
    235,  60, 164, 131,  22, 226, 
    192,  66,  12, 226, 134,  37, 
    123, 140, 152, 236,  53, 226, 
    178, 207,   0,  89, 230, 162, 
    244, 141,  27,  37, 122,  87, 
    198, 205, 210,   7, 131, 157, 
     24,  13,  86, 168, 129, 179, 
     19,  89,  31, 208, 187,  48, 
    135, 205,  58,  24, 196, 204, 
     53, 166, 223, 198, 172, 235, 
    122, 144, 177, 173, 131,  74, 
    219, 142,  87, 126, 191, 104, 
    163, 150, 215, 169,  57, 139, 
    194, 169, 185, 202, 177,  94, 
    237, 143, 121, 244,  68,  40, 
     34, 110, 166,  62, 110,  24, 
    213, 220, 206,  97,  59, 170, 
    187, 221, 181, 145, 220, 147, 
    155, 187, 223, 223, 239, 211, 
     49, 145, 116, 255,  51, 226, 
    230,  56, 234, 245,  75, 171, 
    148,  41, 252, 198, 142, 123, 
    125, 209, 205,  84,  43, 245, 
    168, 192, 235, 228,  82, 227, 
     18, 121, 237, 158, 223, 119, 
     51, 245, 183, 234, 208, 211, 
    117, 188, 117, 207, 231,  80, 
    170, 116, 236,  86, 114,  38, 
    157,  95,  47,  36, 231,  22, 
    214,  55, 251, 239,  38, 238, 
    247, 207, 166,  86, 243, 185, 
    116,  33,  57, 145,  45,  22, 
    146, 227, 217, 141, 244,  98, 
    113,  46,  49, 145,  44, 108, 
     44,  38, 103,  87,  82,  75, 
    233, 141,  66, 114, 108, 125, 
     53, 159, 205, 165, 151,  42, 
    127, 154,  90,  75, 143, 166, 
     10, 217, 197, 123, 153,  12, 
     94,  58, 255, 104, 182,  50, 
    154, 206, 110, 166, 115, 147, 
    217, 229, 149,  98, 118, 109, 
     57, 177,  57, 144,  95,  90, 
     96,  63,   1, 254,  32, 127, 
     42,   0,  53,  16,   0,   0, 
    212,   0,   0,   0,  23,   0, 
      1,   0,  16, 200,  23,   0, 
    120,   1, 237, 152,  79,  79, 
     19,  65,  24, 198, 167, 219, 
     97, 186,  45, 195, 180, 148, 
    165,  20,  40,   5,  20,  21, 
     21,   8, 146,  98, 128, 144, 
    184, 128,  70,  19, 154, 128, 
     80, 149,  67,  13, 127,  11, 
     52,  41, 208,  80, 162, 156, 
     16,  13, 137,  49, 225,  98, 
     98,  12,  49, 124,   4, 143, 
    198, 163, 144, 146, 168, 103, 
    163, 119,  63, 128,  39,  15, 
    158,  72, 244, 121, 183,  91, 
    196,  42, 103, 141, 217,  95, 
    250, 204,  59,  51, 251, 238, 
    238, 179,  51, 211, 203, 251, 
    190, 134,  89,  12, 220, 185, 
    255, 137,  98, 219, 216, 203, 
    201,  45, 141, 177,  50,  26, 
      0, 116,  45, 178,   6, 181, 
    140,  77, 133, 168, 101, 172, 
    137,  26,  23, 132, 132,   0, 
     66,  31, 180, 141, 177, 137, 
    216,  10, 209, 117, 138, 145, 
    119,  79,   7,  95,  79,  61, 
     27, 156,  71, 191,  27,  10, 
     66, 183, 108,  93, 129, 104, 
    220,   5,  41, 168, 148,  74, 
    168, 232, 131,  94, 117,  28, 
     55, 212,   1,  29,  71, 167, 
      6, 208, 125,  18,  58,  98, 
    154, 154,  63, 115,  19,  34, 
    255,  39,  65, 222, 232, 121, 
     69, 138,  62, 233, 123, 255, 
     53, 104, 141, 138, 251,  68, 
    208, 126,  28, 135, 188, 115, 
    136,  56, 172, 166, 246, 231, 
    186, 198, 237, 125,  45, 238, 
    229,  62, 116,  18, 223,  65, 
    241,  57,   4, 245,  99,  16, 
     65, 251,  34, 216,  72, 167, 
    112,  61, 110,  18, 218,  65, 
     64,  96,  66,  32,  65,  96, 
     35, 133, 128,  60,  16,  54, 
     74, 120,  33,  31,  84,  14, 
     97, 179,  68,   5,   4, 131, 
    194,  15, 193, 132, 192, 162, 
     11,  28,  14,  81,   5, 225, 
    155,   4, 252,  10, 120,  20, 
     56, 175,  34,  12, 213,  66, 
    117,  80,  61,  20, 129,  26, 
    160,  40, 212, 104, 159,  25, 
     78, 174,  48, 166,   6,   8, 
     87, 225,  75, 133,  86,  56, 
    209, 194,  77,  78, 255,  95, 
    104,  13, 138, 255,   7, 162, 
    176,  26,   5, 232, 136, 144, 
     28,  28,  28,  28,  28,  28, 
     28,  28,  28,  28,  28,  28, 
     28,  28,  28,  28, 254,  38, 
     90, 243, 163,  55, 204, 189, 
    181, 255, 128, 109, 239,  77, 
    120, 197,  65,  22, 209, 175, 
    152, 234, 241, 170, 131, 132, 
    247, 121,  94, 186,  55, 247, 
    149, 100, 178,  74, 105, 106, 
    212, 187, 147, 175, 240,  49, 
     25, 148, 154, 172,  81,  92, 
    197, 189,  47, 242,  82, 103, 
    178, 210, 167, 201, 144, 228, 
    178,  94,   9,  21, 208,  53, 
     89, 237, 227, 178,  78,  10, 
    105, 232,  92, 214, 250, 132, 
    164, 103, 159,  86,  33, 213, 
     97,  68,  84,  88,  23, 210, 
     52, 179, 159,  25,  51, 249, 
     41, 220, 117,  14, 239, 234, 
     50, 162, 170,  61,  24, 145, 
     87, 105, 222, 101, 242, 102, 
     95,  72, 158, 197,  59,  47, 
    226, 157, 151,  13,  67,  93, 
     10,  70, 101,  91,  32,  34, 
    111, 208, 117, 205, 228,  77, 
    122,  72, 158, 129, 143,  11, 
    240, 209,   8,  31, 221,  65, 
     67, 118,   6, 162,  82,  53, 
     40,  21, 167,  28, 183, 201, 
     91, 224, 235,  60, 124,  69, 
    225,  43,  22,  48, 164, 191, 
     17,  95,  65, 215, 164, 201, 
     91, 225, 177,   1,  30, 125, 
    213,  74, 114, 154, 171,  48, 
    185, 166, 111, 126, 224, 189, 
     58, 247, 220,  21,  27,   1, 
    154,  43,  55, 185, 207, 163, 
     43, 131, 250, 240, 234, 126, 
    162, 229, 253,  30, 166, 194, 
     52, 134,  71, 229, 209,  84, 
    132, 250, 228, 135,  34,  55, 
    249,  87, 141, 111, 180,  80, 
     31, 249, 173,  20, 145, 215, 
     73,  17,  57, 180,   6, 101, 
     26, 219, 136, 217, 227,  30, 
     59, 246,  83,  68,  62,  99, 
     15, 247, 172,  82, 161, 102, 
    253, 142, 168, 165, 114,  90, 
    201,  92, 152, 154, 146,  57, 
    170,  39, 150, 206,  89, 125, 
     94, 168, 199,  21, 217, 181, 
    235, 143, 235, 118, 108, 129, 
    188, 144, 203, 170,  40,  50, 
     86,   7, 113, 187, 154, 215, 
    159, 185, 215, 187, 243, 237, 
    237,  46, 245, 137, 143, 246, 
     61, 175, 236,  72, 181, 231, 
     95, 234, 191,  86,  85, 250, 
    119,  14, 237, 252,  47, 118, 
     36, 175,  84,  39,  83, 133, 
     10,  98, 161,  96,  10,  34, 
    118, 141, 220, 176,  35, 213, 
    213, 202, 161,  82,  31,  49, 
    251, 122,   6,  34, 167,  67, 
    125, 201, 177,  84, 118,  37, 
    151, 156, 152,  89,  89, 111, 
     31,  72,  92, 111,  31, 159, 
     94, 202, 102,  82, 185, 228, 
    112, 122,  45, 151, 188, 154, 
     94,  77, 205, 174,  77,  36, 
    134, 147, 185, 213, 217, 228, 
    248, 226, 244,  92, 106,  53, 
    151,  28,  90,  89, 202, 166, 
     51, 169,  57, 235, 166, 145, 
    229, 212, 224, 116,  46,  61, 
    123, 109, 126,  30, 169, 147, 
    183, 199, 173, 209, 104, 122, 
     61, 149, 137, 167,  23,  22, 
    215, 210, 203,  11, 137, 245, 
    142, 236, 220,  12, 251,   1, 
    111, 111, 155, 154,  53,  16, 
      0,   0, 208,   0,   0,   0, 
     23,   0,   1,   0,   0, 132, 
     23,   0, 120,   1, 237, 152, 
    207,  75,  84,  81,  20, 199, 
    239, 155, 121,  94, 223, 188, 
     57, 158, 121,  51,  62,  39, 
    181, 241,  57, 149, 149, 149, 
     90, 148,  11, 139,  22, 165, 
     69,  11,   5,  37,  37,  92, 
    188,   8, 127, 140,  53,  48, 
    229, 224,  72, 184,  50, 141, 
    160,  40, 137, 150,  45, 250, 
      3, 130,  90, 180, 116, 149, 
    162, 208, 170,  32,  90, 132, 
     45, 251,  15, 162,  69, 171, 
    192, 190, 103, 230, 141,  13, 
     82, 180,  44, 226, 125, 224, 
    123, 206, 253, 249, 222, 185, 
    231, 222, 213, 185, 183,  71, 
    149, 249, 188, 250, 226, 147, 
    248, 174, 203,  47, 175, 221, 
    139,  40,  85,  39, 157,  26, 
    138, 174,  88, 165,  50, 105, 
    177,  74, 117, 136,  49,  32, 
    172,  77, 194, 157, 132, 124, 
    244, 207, 193, 119,  66,  50, 
     47, 254, 221, 219,   7, 253, 
     51,  51, 143, 250, 209,  84, 
    221,  80,  10, 242,   3, 201, 
    218,  56, 116,  10,  74,  64, 
     66,  76,  76,  13, 213,  56, 
    240, 155,  29, 228, 183,  81, 
    168,   7, 170, 165,  94,  12, 
    216, 253,  13,  53,  33, 230, 
    215,  12,  66,  18, 255, 239, 
    144, 216, 132, 234,  55, 171, 
    113, 202, 121, 255,  53,  36, 
     47, 213, 123,  18, 228,  62, 
    106,  97,  72, 242,  38, 188, 
    109,  18,  91, 217,  35,  88, 
    193, 189,  86, 239, 114,  29, 
    250,  29, 219, 192, 148,  70, 
     13, 213, 190, 124,  95, 171, 
    225,  19, 218, 184, 159, 213, 
    145,  77,  71,  99,  64,  99, 
     82, 227,  34, 181, 134, 112, 
     73, 218, 130, 144,  80, 109, 
     67, 120,   0, 154, 160,   6, 
      8,   1, 106,  36,  88,  59, 
     16,   2, 209, 120,  44, 186, 
     17, 194, 153,  52, 226, 213, 
    136,  81, 227, 189, 234, 102, 
    168,   5, 106, 133, 246,  66, 
     25, 168,  13, 242, 160, 246, 
    224, 205, 152, 149, 136, 240, 
    203,  50, 218, 168, 156,  84, 
     71,  42,  47,  73,  71,  37, 
    210, 255,  23, 201,   1, 210, 
    188,  67,  37,  27, 149, 251, 
    174,  62, 145,  17,  49,  33, 
     33,  33,  33,  33,  33,  33, 
     33,  33,  33,  33,  33,  33, 
     33,  33,  33, 127, 137, 200, 
    190, 187, 175,  85, 116, 105, 
    253, 142,  90,  89, 235,  51, 
     34, 155,  67, 198, 195, 141, 
     17,  99, 101,  99, 204, 120, 
    188,  33,  99, 209, 229, 248, 
    198, 184, 225, 108, 110,  71, 
    191, 191, 150, 170,  70,  49, 
    177, 178,  22, 103, 197,  54, 
     41, 138, 217, 138,  44,  75, 
     81, 130,  77, 102,  50, 169, 
    193,  54, 137,  44, 147,  26, 
     89, 115, 138,  52,  37, 109, 
     77, 142, 165, 169, 158, 211, 
    172,  41,  77, 117, 118, 154, 
    226, 214, 210,   7,  51, 214, 
    101, 166, 221,  12,  55, 165, 
     50, 228,  58,  25, 106, 117, 
     61, 110,  73, 121, 212, 236, 
    120, 228, 185,  46, 183, 165, 
     92, 202,  56,  46, 217,  77, 
     14,  39, 218,  29, 226,  54, 
    135, 172, 171, 206,  34,  39, 
     83, 156,  72, 102, 216,  78, 
     58,  44, 177,  29,  96, 151, 
    247, 147,  75, 251, 108, 151, 
    178, 150,  75, 135, 217, 227, 
     67, 228, 209,  65, 219, 163, 
     14, 203, 163,  99, 156, 229, 
    163, 148, 165,  35, 118, 150, 
     58, 173,  44,  29, 103, 230, 
     30,  98, 234, 182, 153, 186, 
     44, 166,  17, 165,  94,  25, 
    234, 227,   7,  41,  89,  57, 
    201, 190,  45, 195,  78, 168, 
     84,  35, 188,  83, 143, 163, 
    194,  83, 131,  50, 235, 224, 
     85,  68, 233, 122, 248, 104, 
     92,  89,  49, 248,  24, 171, 
     78, 213, 187, 101,  88,  74, 
    125, 141, 168,  69, 106, 192, 
     24, 114, 185,  39,  98,  46, 
    114,  66, 218,  82, 251,  90, 
     94,  43, 151, 254, 208, 148, 
     94, 149,  22,  89, 184, 107, 
    204,  17, 179, 107, 172, 220, 
     54, 101, 241,  79, 198, 131, 
    218,  97, 111, 224, 165, 246, 
     43, 245,  82,  35, 168,  54, 
    182,  66, 102,  80, 137,  59, 
     91, 184, 125, 250, 233, 183, 
     55, 207, 164,  45,  60,   9, 
    246,  20,   3, 159, 133,   8, 
    250,  19, 171, 193, 250, 231, 
    129, 151,  88, 165, 198, 197, 
    149, 234,  95, 165, 216,   9, 
    182, 130, 249, 247, 129, 151, 
    154, 152, 212, 156, 119, 199, 
    241,  37, 152,  47,  64,  18, 
    233, 192,  25, 255, 114, 174, 
     56,  91, 242, 199,  39, 103, 
     23, 186, 207, 143,  93, 234, 
     30, 157, 184,  89,  44, 228, 
     74, 254,  96, 126, 190, 228, 
     95, 200, 207, 229, 166, 230, 
    199, 199,   6, 253, 210, 220, 
    148,  63, 122,  99,  98,  58, 
     55,  87, 242,   7, 102, 111, 
     22, 243, 133, 220, 116, 121, 
    211, 240, 173,  92, 255,  68, 
     41,  63, 117, 113, 102,   6, 
     75, 175,  93,  25,  45, 247, 
     70, 242,  11, 185, 194,  80, 
    254, 250, 141, 249, 252, 173, 
    235,  99,  11,  61, 197, 233, 
     73, 245,   3, 235,  33, 136, 
    234,   0,  88,  72,  83,  72, 
      8,   0,   0,   0,  60, 108, 
    118,  57, 152, 246, 198, 156, 
     88,  80,  68,  80, 107,   0, 
      0,   0,  67,  58,  92,  82, 
    101, 112, 111, 115,  92,  88, 
     98, 111, 120,  45,  65,  84, 
     71,  45,  83,  97, 109, 112, 
    108, 101, 115,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  66, 
     97, 115, 105,  99,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  66,  97, 115, 105,  99, 
     80, 105, 120, 101, 108,  76, 
    105, 103, 104, 116, 105, 110, 
    103,  84, 120,  46, 112, 100, 
     98
};
