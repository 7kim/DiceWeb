#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[49]
// Embedded Data:
//  0x00000031 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000002c - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.w
dcl_output o0.xyzw
dcl_temps 1
mad r0.xyz, cb0[13].xyzx, v0.wwww, -v0.xyzx
mad o0.xyz, v1.wwww, r0.xyzx, v0.xyzx
mov o0.w, v0.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[49], bundle is:[150] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_PSBasic.pdb
// Shader Semantic Hash      : 0x28fcd23850698c10
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask 15, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  8, param1, paramSlot1, DefaultVal={0,0,0,0}

codeLenInByte        = 116 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 9;
NumSgprs             = 6;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x60, dwords=0x18)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, off, off, off done vm         // 000000000008: F8001801 00000003
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, off, off done vm          // 000000000008: F8001803 00000403
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v2, off, off done vm          // 000000000008: F8001803 00000203
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000000: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v2                       // 000000000004: 5E020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v3, v4                      // 000000000000: 5C000903
  v_cvt_pknorm_u16_f32  v1, v5, v2                      // 000000000004: 5C020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v3, v4                      // 000000000000: 5A000903
  v_cvt_pknorm_i16_f32  v1, v5, v2                      // 000000000004: 5A020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v3, v4                          // 000000000000: 60000903
  v_cvt_pk_u16_u32  v1, v5, v2                          // 000000000004: 60020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v3, v4                          // 000000000000: 62000903
  v_cvt_pk_i16_i32  v1, v5, v2                          // 000000000004: 62020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, v5, v2 done vm            // 000000000008: F800180F 02050403
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b32     m0, s2                                  // 000000000000: BEFC0302
  s_load_dwordx4  s[0:3], s[0:1], 0x00                  // 000000000004: C0800100
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x34           // 00000000000C: C2800134
  v_interp_p1_f32  v2, v0, attr0.w                      // 000000000010: C8080300
  v_interp_p2_f32  v2, v1, attr0.w                      // 000000000014: C8090301
  v_interp_p1_f32  v3, v0, attr0.x                      // 000000000018: C80C0000
  v_interp_p2_f32  v3, v1, attr0.x                      // 00000000001C: C80D0001
  v_interp_p1_f32  v4, v0, attr0.y                      // 000000000020: C8100100
  v_interp_p2_f32  v4, v1, attr0.y                      // 000000000024: C8110101
  v_interp_p1_f32  v5, v0, attr0.z                      // 000000000028: C8140200
  v_interp_p2_f32  v5, v1, attr0.z                      // 00000000002C: C8150201
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_mad_legacy_f32  v6, s0, v2, -v3                     // 000000000034: D2800006 840E0400
  v_mad_legacy_f32  v7, s1, v2, -v4                     // 00000000003C: D2800007 84120401
  v_mad_legacy_f32  v8, s2, v2, -v5                     // 000000000044: D2800008 84160402
  v_interp_p1_f32  v0, v0, attr1.w                      // 00000000004C: C8000700
  v_interp_p2_f32  v0, v1, attr1.w                      // 000000000050: C8010701
  v_mac_f32     v3, v0, v6                              // 000000000054: 3E060D00
  v_mac_f32     v4, v0, v7                              // 000000000058: 3E080F00
  v_mac_f32     v5, v0, v8                              // 00000000005C: 3E0A1100
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000060: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v2                       // 000000000064: 5E020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000068: F8001C0F 00000100
  s_endpgm                                              // 000000000070: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   9
//  NumSRegs:                   6
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   79
//  CycleSimNWaves:             79
//  Code Size:                  116
//Assembler Counts:
//  num_32bit_ops                     : 21
//  num_64bit_ops                     : 4
//  num_alu                           : 18
//  num_fc                            : 6
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 5
//  num_inst_vop3                     : 3
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 10
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 9
// m_uNumSRegs                       : 6
// m_uSCCodeSize                     : 116
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 79
// m_uCycleSimNWaves                 : 79

// Assembler Counts:
// num_32bit_ops                     : 21
// num_64bit_ops                     : 4
// num_alu                           : 18
// num_fc                            : 6
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 5
// num_inst_vop3                     : 3
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 10
// num_inst_smem                     : 2
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_PSBasic[] =
{
     68,  88,  66,  67, 176, 200, 
     42, 117, 225,  41, 195, 137, 
    206, 241, 166,  83, 108,  85, 
    181, 148,   1,   0,   0,   0, 
     80,   4,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    124,   0,   0,   0, 176,   0, 
      0,   0, 220,   3,   0,   0, 
    236,   3,   0,   0,  73,  83, 
     71,  78,  64,   0,   0,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0,  56,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  56,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   8, 
      0,   0,  67,  79,  76,  79, 
     82,   0, 171, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
     36,   3,   0,   0,  80,   0, 
      0,   0, 201,   0,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  49,   0,   0,   0, 
     80,   0,   0,   0,  44,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     26,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 130,  16,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  13,   0,   0,   0, 
    246,  31,  16,   0,   0,   0, 
      0,   0,  70,  18,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  50,   0,   0,   9, 
    114,  32,  16,   0,   0,   0, 
      0,   0, 246,  31,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    152,   0,   0,   0,  23,   0, 
      1,   0,  41, 141,  15,   0, 
    120,   1, 237, 151, 191, 111, 
    211,  64,  20, 199, 223, 217, 
    142, 227, 148,  38, 105,  43, 
    130,  90, 196, 208, 129, 129, 
    165,  44, 237, 128,  24,  34, 
    218, 130,  24, 130, 212, 138, 
    116, 168, 138,  41, 205,  15, 
     87,  88, 106,  73,  20, 103, 
     96, 130,  32,  34, 193,  80, 
     36,   6,   6, 254,   0,   6, 
     22,  36, 254,   2,  18,  49, 
    221, 136, 250,  87,  48,  34, 
    166,  14, 149, 224, 125,  47, 
    119,  96, 210, 118, 179,   4, 
     18, 254,  74, 159, 123, 249, 
    218, 119, 151,  23,  63,  71, 
    122, 247, 170,  72,  74, 223, 
     63, 220,  91,  65, 172, 188, 
    200, 149,  62, 114, 204,  48, 
     66,  71, 232, 109,  30,  35, 
    209,  82,   1,  35, 209,  21, 
     12, 152,  96,  17, 229,  56, 
    184,  76, 151, 185, 193, 224, 
    158,  97, 113, 241, 249,  50, 
    209,  27, 134, 200,  97,  38, 
    152,  53,  77, 137, 193, 181, 
     25,   6, 235, 177, 221, 184, 
    108,  12, 172, 211, 238,  33, 
     55, 115,  31, 251, 114,  42, 
     74,  39, 230,   6,  24,  78, 
    215,  28, 131, 252, 207,  18, 
    114,  51, 194, 190, 200,  19, 
     50, 241, 111, 106, 252, 119, 
    194, 155,  58,  65, 168,  71, 
     92,  40, 157,  89,  51, 169, 
    235, 104, 252, 188, 246, 166, 
    150,  67, 230,  44, 253,  96, 
    161, 110, 113,  25, 143,  26, 
    184,  52, 122, 169,  92,  49, 
     75, 228, 225, 211, 255, 165, 
    248, 179,   0,  83, 140, 254, 
    155,  41, 153, 251, 252, 116, 
     88, 189,   1, 120,  61,  75, 
     71, 112, 198, 243, 163,  59, 
     26, 189, 219,  35, 111, 195, 
    171, 133,  49, 207, 155, 219, 
     57, 218, 206, 100, 172, 237, 
    226,  37,  94, 207, 197, 100, 
    239, 179, 247,  99, 126, 139, 
    253,  86, 204, 239, 176, 223, 
    137, 249,  58, 251, 186, 241, 
    102, 255, 162, 250, 190, 140, 
    133,  90, 243, 197,  39, 255, 
     50, 105, 142, 201, 144, 230, 
    152,  12, 105, 142, 201, 144, 
    230, 152,  12, 105, 142, 201, 
    144, 230, 152,  12, 105, 142, 
    137,  65, 150, 125, 252, 137, 
     68, 111, 248, 148,  14,   6, 
     75, 162, 247, 153, 108,  79, 
     10,  59,  39, 185, 195, 151, 
    130, 242, 146, 196, 148,  20, 
     98,  90, 146, 117,  94,  10, 
    171,  36,  49, 207, 165, 222, 
     33,  57, 133, 126, 150, 163, 
    112, 102, 250,  30,  71, 203, 
    185, 208, 167,  44,  73, 145, 
     21, 146, 242, 110, 153, 138, 
     94, 153, 166,  39, 202, 220, 
     31, 254, 209,  95,  18,  61, 
     27, 204,  33, 162, 177, 141, 
     73,  89,  71,  77, 248, 165, 
    182,  62,  83, 220, 209, 241, 
     50, 131, 243, 133, 208, 167, 
    182, 139, 140, 163,  78,  27, 
    220,  35,  31, 132, 235, 215, 
     14, 143, 113, 100,  84, 122, 
    175, 215, 188, 212, 113, 158, 
    153, 100, 126, 235,  29, 134, 
     19, 250, 162, 231,  15, 117, 
     68, 239, 141, 182, 185,  96, 
     78, 178, 250, 250,  55,  29, 
    191, 234, 136,  99, 202,  57, 
    102,  60,  15,  79,  55, 238, 
    247,  25, 100, 186, 122, 221, 
    191,  27, 180,  91, 145, 191, 
     89, 111,  61,  94,  88, 222, 
    184, 189,  80, 173, 237, 183, 
    247, 130, 200, 175, 132, 221, 
    200, 191,  25, 118, 130,  70, 
    119, 115, 163, 226,  71, 157, 
    134,  95, 125,  88, 107,   6, 
    157, 200,  95, 109, 237, 183, 
    195, 189, 160, 169,  22, 173, 
     61,  10,  86, 106,  81, 216, 
    184, 181, 187, 203,  83,  31, 
    172,  87, 149, 187, 218, 110, 
    214, 233,  39, 127, 232, 220, 
    134,   0,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
     16, 140, 105,  80,  56, 210, 
    252,  40,  88,  80,  68,  80, 
     92,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  66,  97, 115, 105,  99, 
     69, 102, 102, 101,  99, 116, 
     95,  80,  83,  66,  97, 115, 
    105,  99,  46, 112, 100,  98
};
