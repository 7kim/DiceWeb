#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[96]
// Embedded Data:
//  0x00000060 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x0000005b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
mul o0.xyzw, v2.xyzw, cb0[0].xyzw
dp4_sat o1.w, v0.xyzw, cb0[14].xyzw
mov o1.xyz, l(0,0,0,0)
mov o2.xy, v1.xyxx
dp4 o3.x, v0.xyzw, cb0[22].xyzw
dp4 o3.y, v0.xyzw, cb0[23].xyzw
dp4 o3.z, v0.xyzw, cb0[24].xyzw
dp4 o3.w, v0.xyzw, cb0[25].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[96], bundle is:[164] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicTxVc.pdb
// Shader Semantic Hash      : 0xa04ec845063c5cff
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 172 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x38           // 00000000000C: C2820138
  s_buffer_load_dwordx16  s[8:23], s[0:3], 0x58         // 000000000010: C3040158
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s7, v7                          // 00000000001C: 0E000E07
  v_mul_legacy_f32  v1, s11, v7                         // 000000000020: 0E020E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000024: 0E040E0F
  v_mul_legacy_f32  v3, s19, v7                         // 000000000028: 0E060E13
  v_mul_legacy_f32  v7, s23, v7                         // 00000000002C: 0E0E0E17
  v_mac_f32     v0, s6, v6                              // 000000000030: 3E000C06
  v_mac_legacy_f32  v1, s10, v6                         // 000000000034: 0C020C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000038: 0C040C0E
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v7, s22, v6                         // 000000000040: 0C0E0C16
  v_mac_f32     v0, s5, v5                              // 000000000044: 3E000A05
  v_mac_legacy_f32  v1, s9, v5                          // 000000000048: 0C020A09
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v3, s17, v5                         // 000000000050: 0C060A11
  v_mac_legacy_f32  v7, s21, v5                         // 000000000054: 0C0E0A15
  v_mul_legacy_f32  v5, s0, v12                         // 000000000058: 0E0A1800
  v_mul_legacy_f32  v6, s1, v13                         // 00000000005C: 0E0C1A01
  v_mul_legacy_f32  v10, s2, v14                        // 000000000060: 0E141C02
  v_mul_legacy_f32  v11, s3, v15                        // 000000000064: 0E161E03
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 000000000068: D2800800 04000904
  v_mac_legacy_f32  v1, s8, v4                          // 000000000070: 0C020808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000074: 0C04080C
  v_mac_legacy_f32  v3, s16, v4                         // 000000000078: 0C060810
  v_mac_legacy_f32  v7, s20, v4                         // 00000000007C: 0C0E0814
  v_mov_b32     v4, 0                                   // 000000000080: 7E080280
  v_mov_b32     v12, 1.0                                // 000000000084: 7E1802F2
  exp           pos0, v1, v2, v3, v7 done               // 000000000088: F80008CF 07030201
  exp           param0, v5, v6, v10, v11                // 000000000090: F800020F 0B0A0605
  exp           param1, v4, v4, v4, v0                  // 000000000098: F800021F 00040404
  exp           param2, v8, v9, v4, v12                 // 0000000000A0: F800022F 0C040908
  s_endpgm                                              // 0000000000A8: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  172
//Assembler Counts:
//  num_32bit_ops                     : 33
//  num_64bit_ops                     : 5
//  num_alu                           : 26
//  num_fc                            : 8
//  num_inst_exp                      : 4
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 23
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 4
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 172
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 33
// num_64bit_ops                     : 5
// num_alu                           : 26
// num_fc                            : 8
// num_inst_exp                      : 4
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 2
// num_inst_vop2                     : 23
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 4
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[262], bundle is:[176] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicTxVc.pdb
// Shader Semantic Hash      : 0xa04ec845063c5cff
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 256 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 34;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x58       // 00000000000C: C3060958
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000018: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 00000000001C: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000020: 0E020E13
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x00        // 000000000024: C28E0900
  v_mac_legacy_f32  v0, s13, v5                         // 000000000028: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 00000000002C: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000030: 0E040E17
  v_mac_legacy_f32  v0, s12, v4                         // 000000000034: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000038: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 00000000003C: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 000000000040: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000044: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000048: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 00000000004C: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 000000000050: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000054: 0C060A19
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x38         // 000000000058: C2840938
  v_mac_legacy_f32  v3, s24, v4                         // 00000000005C: 0C060818
  s_waitcnt     lgkmcnt(0)                              // 000000000060: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000064: E0704030 04400000
  v_mul_legacy_f32  v0, s28, v12                        // 00000000006C: 0E00181C
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 000000000070: E0704034 04400100
  v_mul_legacy_f32  v1, s29, v13                        // 000000000078: 0E021A1D
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 00000000007C: E0704038 04400200
  v_mul_legacy_f32  v2, s30, v14                        // 000000000084: 0E041C1E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:60 glc slc // 000000000088: E070403C 04400300
  v_mul_legacy_f32  v3, s31, v15                        // 000000000090: 0E061E1F
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000094: E0704000 04400000
  v_mul_legacy_f32  v0, s11, v7                         // 00000000009C: 0E000E0B
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 0000000000A0: E0704004 04400100
  v_mov_b32     v1, 0                                   // 0000000000A8: 7E020280
  v_mac_legacy_f32  v0, s10, v6                         // 0000000000AC: 0C000C0A
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 0000000000B0: E0704008 04400200
  v_mac_legacy_f32  v0, s9, v5                          // 0000000000B8: 0C000A09
  buffer_store_dword  v3, v0, s[0:3], s4 offset:12 glc slc // 0000000000BC: E070400C 04400300
  v_mad_legacy_f32  v0, v4, s8, v0 clamp                // 0000000000C4: D2800800 04001104
  buffer_store_dword  v1, v0, s[0:3], s4 offset:16 glc slc // 0000000000CC: E0704010 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000D4: E0704014 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 0000000000DC: E0704018 04400100
  buffer_store_dword  v0, v0, s[0:3], s4 offset:28 glc slc // 0000000000E4: E070401C 04400000
  buffer_store_dword  v8, v0, s[0:3], s4 offset:32 glc slc // 0000000000EC: E0704020 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:36 glc slc // 0000000000F4: E0704024 04400900
  s_endpgm                                              // 0000000000FC: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   34
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  256
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 15
//  num_alu                           : 25
//  num_fc                            : 10
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 14
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 23
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 14
//  num_vmem_group                    : 9
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 34
// m_uSCCodeSize                     : 256
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 15
// num_alu                           : 25
// num_fc                            : 10
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 14
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 23
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 5
// constant_literal_operands         : 0
// num_tex                           : 14
// num_vmem_group                    : 9
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[440], bundle is:[171] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicTxVc.pdb
// Shader Semantic Hash      : 0xa04ec845063c5cff
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 204 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 30;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x00           // 00000000000C: C2820100
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x38          // 000000000010: C2840138
  s_buffer_load_dwordx16  s[12:27], s[0:3], 0x58        // 000000000014: C3060158
  s_mov_b32     m0, 0x00010000                          // 000000000018: BEFC03FF 00010000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s4, v12                         // 000000000024: 0E001804
  v_mul_legacy_f32  v2, s5, v13                         // 000000000028: 0E041A05
  v_mul_legacy_f32  v3, s6, v14                         // 00000000002C: 0E061C06
  v_mul_legacy_f32  v10, s7, v15                        // 000000000030: 0E141E07
  v_mul_legacy_f32  v11, s11, v7                        // 000000000034: 0E160E0B
  v_mac_legacy_f32  v11, s10, v6                        // 000000000038: 0C160C0A
  v_mac_legacy_f32  v11, s9, v5                         // 00000000003C: 0C160A09
  v_mad_legacy_f32  v11, v4, s8, v11 clamp              // 000000000040: D280080B 042C1104
  v_mul_legacy_f32  v12, s15, v7                        // 000000000048: 0E180E0F
  v_mac_legacy_f32  v12, s14, v6                        // 00000000004C: 0C180C0E
  v_mac_legacy_f32  v12, s13, v5                        // 000000000050: 0C180A0D
  v_mac_legacy_f32  v12, s12, v4                        // 000000000054: 0C18080C
  v_mul_legacy_f32  v13, s19, v7                        // 000000000058: 0E1A0E13
  v_mac_legacy_f32  v13, s18, v6                        // 00000000005C: 0C1A0C12
  v_mac_legacy_f32  v13, s17, v5                        // 000000000060: 0C1A0A11
  v_mac_legacy_f32  v13, s16, v4                        // 000000000064: 0C1A0810
  v_mul_legacy_f32  v14, s23, v7                        // 000000000068: 0E1C0E17
  v_mac_legacy_f32  v14, s22, v6                        // 00000000006C: 0C1C0C16
  v_mac_legacy_f32  v14, s21, v5                        // 000000000070: 0C1C0A15
  v_mac_legacy_f32  v14, s20, v4                        // 000000000074: 0C1C0814
  v_mul_legacy_f32  v7, s27, v7                         // 000000000078: 0E0E0E1B
  v_mac_legacy_f32  v7, s26, v6                         // 00000000007C: 0C0E0C1A
  v_mac_legacy_f32  v7, s25, v5                         // 000000000080: 0C0E0A19
  v_mac_legacy_f32  v7, s24, v4                         // 000000000084: 0C0E0818
  v_lshlrev_b32  v1, 6, v1                              // 000000000088: 34020286
  ds_write2_b32  v1, v12, v13 offset0:12 offset1:13     // 00000000008C: D8380D0C 000D0C01
  ds_write2_b32  v1, v14, v7 offset0:14 offset1:15      // 000000000094: D8380F0E 00070E01
  ds_write2_b32  v1, v0, v2 offset1:1                   // 00000000009C: D8380100 00020001
  ds_write2_b32  v1, v3, v10 offset0:2 offset1:3        // 0000000000A4: D8380302 000A0301
  v_mov_b32     v0, 0                                   // 0000000000AC: 7E000280
  ds_write2_b32  v1, v0, v0 offset0:4 offset1:5         // 0000000000B0: D8380504 00000001
  ds_write2_b32  v1, v0, v11 offset0:6 offset1:7        // 0000000000B8: D8380706 000B0001
  ds_write2_b32  v1, v8, v9 offset0:8 offset1:9         // 0000000000C0: D8380908 00090801
  s_endpgm                                              // 0000000000C8: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   30
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   82
//  CycleSimNWaves:             82
//  Code Size:                  204
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 8
//  num_alu                           : 26
//  num_fc                            : 9
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 7
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 24
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 7
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 30
// m_uSCCodeSize                     : 204
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 82
// m_uCycleSimNWaves                 : 82

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 8
// num_alu                           : 26
// num_fc                            : 9
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 7
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 24
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 7
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_VSBasicTxVc[] =
{
     68,  88,  66,  67, 227, 119, 
    245, 120,  91, 192,  55,  28, 
    111, 146,  44,  39, 189,  50, 
     34,  14,   1,   0,   0,   0, 
     72,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  52,   1, 
      0,   0, 208,  10,   0,   0, 
    224,  10,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   3,   3, 
      0,   0, 101,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78, 132,   0, 
      0,   0,   4,   0,   0,   0, 
      8,   0,   0,   0, 104,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 110,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      3,  12,   0,   0, 119,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    148,   9,   0,   0,  80,   0, 
      1,   0, 101,   2,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  96,   0,   0,   0, 
     80,   0,   1,   0,  91,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     26,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      2,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      2,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,  32, 
      0,   8, 130,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  14,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
     50,  32,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0,  17,   0, 
      0,   8,  18,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  22,   0,   0,   0, 
     17,   0,   0,   8,  34,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  23,   0, 
      0,   0,  17,   0,   0,   8, 
     66,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     24,   0,   0,   0,  17,   0, 
      0,   8, 130,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  25,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 166,   0,   0,   0, 
     23,   0,   1,   0,  32, 201, 
     22,   0, 120,   1, 237, 152, 
    187,  79,  84,  65,  20, 135, 
    207, 157,  29,  14, 119, 239, 
     14, 195, 251,  41, 242,  72, 
     12, 161,  65,  41, 141,  49, 
      4,  65,  98,  34, 137,  68, 
    151, 144,  45, 110,  98, 150, 
    125, 196,  77,  22, 217, 176, 
     20, 196,   2,  87, 180, 244, 
     31, 208, 202, 210, 194, 191, 
     65,   8,  54,  90, 145,  88, 
    155, 104, 109, 167,  21,  29, 
    254, 206, 221, 123, 205, 102, 
    145,  90,  19, 231, 203, 126, 
    243, 186, 119, 230, 158, 157, 
    153, 234, 124,  26, 162, 136, 
     39, 247, 239, 126, 145, 250, 
    251, 215,  31,  51,  85, 143, 
    168,  67,  58,  64,  75,   1, 
    106,   3,  82,  18,  85,   7, 
    165,  36, 154, 149,   2, 239, 
    145,  34, 234,  65,  53,   6, 
    223, 193,  69,  40, 207,  18, 
    203, 101,  94, 122, 253,  42, 
    179,  52, 143, 246,   8, 236, 
    131, 217, 216, 105,  40, 223, 
    145, 185,  62,  76, 190, 213, 
     74,  74,  10,  32, 159, 106, 
      5, 159, 165,  97, 216,  74, 
     50, 255, 220,  58, 121,  41, 
    254, 204,  12, 148, 248,  47, 
     66,  98,  75, 144, 117,  37, 
     78, 161, 117, 252,  95,  65, 
    246,  40,  57,  39,  65, 206, 
    163,  21,  11, 147, 253,  28, 
    143, 207,  49, 217, 215,  92, 
    220,  79, 206, 242,   8,  94, 
    196,  25, 104, 223, 227, 164, 
     47, 235,  51, 173, 205, 179, 
    247, 188, 135, 213, 201,  60, 
     99, 128, 241, 144, 113, 208, 
    204, 176,  19,  98,  19,  57, 
     13,   3, 152, 129,   6, 118, 
     65,   4, 200, 221,  16,  65, 
    112,  47, 196, 101, 225, 126, 
    136, 255, 196, 136, 143, 113, 
     87,  25, 135, 206, 184,  72, 
     60,  10,  17,  40,  95, 130, 
    227, 240,  50, 156, 128, 147, 
     73,  12,  77, 216, 107, 254, 
     67,  86, 114,  99, 254,  31, 
    100,  15, 146, 187,  42, 103, 
     35,  38, 180, 182,  29,  14, 
    135, 195, 225, 112,  56,  28, 
     14, 135, 195, 225, 112,  56, 
    254,  22, 106, 250, 224,  61, 
    165,  26,  71,  79, 233, 229, 
    225, 117, 239, 224,  56, 231, 
    233,  15, 228,  53, 142, 107, 
    232, 119,  90, 178,  25, 171, 
    108, 183, 213, 182, 223, 178, 
     29, 182, 214, 178, 161, 133, 
    192,  40,  99, 141,  54, 125, 
    134, 205,  16,  90,  29,   1, 
     45, 164,   3, 101, 186,   2, 
    109, 122,   3,  54, 131, 129, 
     53,  52,  18,  88, 111, 204, 
     88,  53,  62,  96,  83,  19, 
     67, 150, 252, 198, 103, 157, 
     38, 237, 251, 202,  24,  95, 
    155,  30, 159, 205, 128, 111, 
     77,  67, 249, 251,  63, 213, 
    200, 254, 137,  79, 167, 158, 
     74, 117, 118,  43,  58, 237, 
    224,  32,  51, 137,  90, 107, 
     77, 215,  80, 251, 105, 109, 
    136, 158,  29,  70, 169,  51, 
     21, 253, 126,  51,  42, 105, 
    167, 182,  49, 201, 173, 181, 
    143,  69, 109, 221, 204,  81, 
     37, 188, 141,  22,  36, 122, 
     17, 215,  87,  96,  26, 122, 
     81,  86, 167, 153, 159, 211, 
    113, 134, 235,  44, 188, 201, 
     43,  31, 239, 189, 145, 182, 
    240,  45, 158, 115,  20, 215, 
     83,  16,  65, 182, 208, 144, 
    226,  28, 126, 156,   7,  62, 
    141, 231,  73, 172, 146,  39, 
    178,  73,  38,  88, 146, 135, 
     96,  54, 126, 111,  42, 174, 
     37, 199, 148, 129, 237, 113, 
     44, 198, 207,  37, 245,  42, 
    145,  46, 223,   8,  31, 148, 
    106, 219, 245,  48, 183, 185, 
    189,  55, 119, 107, 253, 206, 
     92,  54, 191,  85, 171, 150, 
    234, 225, 106, 101, 183,  30, 
    222, 174, 236, 148,  10, 187, 
    185, 245, 213, 176, 190,  83, 
      8, 179, 143, 242, 197, 210, 
     78,  61,  92, 222, 222, 170, 
     85, 170, 165,  98,  52, 105, 
    237, 113, 105,  41,  95, 175, 
     20,  86, 202, 101, 188, 250, 
    112,  35,  27, 245, 214, 247, 
     54,  10,  87, 107, 197,  77, 
    250,   5,  82,  64, 101,  14, 
      0,   0,  53,  16,   0,   0, 
    178,   0,   0,   0,  23,   0, 
      1,   0,  16,  49,  23,   0, 
    120,   1, 237, 152, 207,  79, 
     19,  65,  20, 199,  95, 167, 
    227, 184,  45, 195,  80, 126, 
    151,  82, 126, 104, 136, 114, 
     16,   3, 129,   3,  26,  14, 
     11,  72,  52,  33,  72,  98, 
      9, 225, 176, 137, 150, 210, 
    198,  38,  32,  27, 202, 129, 
    147, 162, 114, 240,  96, 140, 
    127, 130,  71, 255,   9, 165, 
    193, 139,  55,  19, 227,  93, 
    207, 198, 139, 127,   1, 126, 
    223,  50,  91,  73, 133, 179, 
    198, 204,  39, 253, 190, 247, 
    102, 246, 205, 246, 205, 204, 
    158, 222,  68,  47,  69, 188, 
     91,  90, 186, 193, 254, 251, 
    215, 159,  87,  54,  19,  68, 
     23, 120,   0,   4,  27,  16, 
    118, 177,  37, 250, 210, 205, 
    150, 104, 148,  13, 242,  56, 
     33,   3, 119,  25, 226, 177, 
     15, 199, 207,  98,  77,  78, 
     94, 157, 171,  84, 174, 205, 
    205,  34,  30, 128,  12,  84, 
    176, 226,  53, 109,  80,  31, 
    148, 134, 154, 225,  92,   9, 
     49, 252,  87, 167, 225, 177, 
     45, 189,  65,  92,  51, 175, 
     75,  65,  13, 138, 108, 206, 
    102,   2, 226, 250, 207, 131, 
    107, 227, 247, 197, 196, 117, 
     70, 251, 253, 199, 224,  51, 
    137, 239,  41, 130,  39,  78, 
    193, 251, 136, 207,  51, 180, 
    247,  24, 167, 212, 237,  56, 
    190, 203,  58, 116,  30, 199, 
     32, 126,  15, 195, 241,  20, 
    196,  36,  33,  69, 203, 227, 
     42, 241,  60, 163, 196, 167, 
    113, 133,   9, 133,   4, 133, 
    203,  81,  10, 186,   8, 121, 
     16,  46,  72, 225,  48,  85, 
     11, 164, 161,  86,   8,   5, 
     42, 124,  16,  10,  69, 168, 
    118, 168,   3, 234, 132, 176, 
     39, 133, 250,  84,  15, 132, 
     75,  87,  89,   8,  23, 163, 
    114,  80,  63, 148, 135, 240, 
    113, 169,  65, 104, 200, 238, 
     49, 201, 149,  96, 204,   6, 
    168, 196, 201,  78, 149, 136, 
    191, 232, 255,  27,  62,   3, 
     28, 115, 131, 232,  76,  44, 
    124, 199,  44, 135, 195, 225, 
    112,  56,  28,  14, 135, 195, 
    225, 112,  56,  28, 142, 191, 
    137, 184, 244, 236,  61,  37, 
     15, 234,  79, 232, 229, 225, 
     90,  74, 125,   8, 225, 219, 
     12,  25, 157, 220, 175,  27, 
     77, 186, 211,   8,  67, 169, 
     87,  71, 173, 105, 210,  29, 
     90, 232,  94,  35, 141, 246, 
     72, 183, 167, 133, 238, 209, 
     82, 247,  27, 101,  50, 158, 
    208, 221, 105, 169, 115,  90, 
    233,  46,  79, 234, 190, 180, 
    210, 211, 169, 131, 163, 172, 
    167,  52, 191, 119, 220,  15, 
    191,  17, 249,  50, 159,  37, 
     51, 197, 113, 194, 151,   3, 
     57,  97, 166,  57,  22, 190, 
     28, 204,  75,  51, 195, 113, 
    210, 151,  67, 131, 202,  16, 
    199, 200, 111,  65,  29, 146, 
     99, 228, 239,  11, 241,  56, 
    141, 122,  60,  30,  99,  77, 
     10, 245, 104, 142, 177, 134, 
    188, 253, 207, 178, 157, 100, 
    134, 199, 200, 237, 178,  62, 
    107, 125, 158,  61, 222,  55, 
    204, 222, 243, 229,   8, 251, 
     20, 214, 209, 211, 195, 168, 
     29,  39, 162,  95, 131,  62, 
    110,  97,  53, 205, 101, 217, 
     52, 205,  69, 189, 157, 166, 
    185,  40, 150,  39,  61, 176, 
    152,  76,  15,  91, 162,  31, 
    209, 159,  17, 141,  64, 220, 
     55,  77,  68,  93,  60, 162, 
     28,  36, 109,   7, 237,  56, 
    152,  81,  11,  31, 239, 190, 
    225, 152, 185,  99, 215, 142, 
     90,  63,  12, 105, 232,  55, 
    220,   9, 254, 147, 208, 230, 
     63, 176, 158, 107, 229, 222, 
    148, 137, 187, 183, 220, 164, 
      4, 175, 237, 243,  23, 214, 
    115,  47, 171,   5, 106, 174, 
    227, 173, 125, 206,  45,  94, 
    174, 116, 254, 102, 112, 175, 
     28, 110, 215, 130, 181, 245, 
    237, 189, 177, 217, 149, 219, 
     99, 133, 226,  86, 184,  89, 
    174,   5, 139, 213, 221,  90, 
    112, 171, 186,  83,  46, 237, 
    174, 173,  44,   6, 181, 157, 
     82,  80, 120,  88, 220,  40, 
    239, 212, 130, 249, 237, 173, 
    176, 186,  89, 222, 136,  22, 
     45,  63,  42, 207,  21, 107, 
    213, 210,  66, 165, 130, 212, 
    251, 171, 133, 104, 180, 178, 
    183,  90, 186,  30, 110, 172, 
    211,  47, 172, 182, 123,  25, 
     53,  16,   0,   0, 173,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 233,  22,   0, 120,   1, 
    237, 152, 207,  75,  84,  81, 
     20, 199, 207, 123, 243,  60, 
    243, 124, 115, 231, 250, 123, 
    124,  62,  39, 251,  65, 132, 
     68, 134,  96,  11,   9,  23, 
    166,  73, 129, 144, 160,  34, 
     46,  30, 212,  56, 142,  52, 
    160,  57,  56,  18, 174, 202, 
     44,  90, 217, 255, 208, 162, 
    125, 255, 129, 138, 109,  92, 
      4,  65, 171, 118, 181, 173, 
     77, 180,  15, 236, 123,  94, 
    247, 213,  52,  36,  45, 139, 
    184,  31, 230, 123, 206, 187, 
    191, 207,  59, 247, 205, 230, 
    124,  44,  80, 194, 203, 103, 
    247,  63, 139, 255, 244, 254, 
    203, 133,  85, 135, 168,  69, 
     26,  13, 212, 186, 197,  18, 
    237, 246, 136,  37,  26,  20, 
    131, 121, 228,  18, 181, 195, 
     13,  64, 175, 161, 113,  72, 
    198,  82,  17, 233, 137, 145, 
    145, 174,   9, 121,  10,  33, 
    153,  59, 107, 116,  14, 242, 
    161,   8, 106, 133, 132, 172, 
    152,   6,  50,  98,   0, 142, 
    249,   5,  57,  90, 246, 107, 
    196,  19,   3, 154, 247, 160, 
    146, 152, 223, 115,  17, 146, 
    152,  78,  66,  98,  19, 210, 
     61, 211,  56, 229, 125, 255, 
     53,  36,  39, 233,  61,   9, 
    114,  31, 141, 104,  40, 205, 
    231, 152, 185,  71,  89,  35, 
    108, 153, 182, 228,  66, 222, 
    237,   0,  58, 137,  99, 144, 
    230,  58,  37, 109, 203, 254, 
     76,  51, 195, 236,  60, 110, 
    103, 247, 205,  48, 163, 131, 
     49, 200, 248, 160, 152,  33, 
     36, 146, 113, 233, 140,  68, 
    114,   0, 229,  32,   5, 229, 
     33,   4, 200, 109,  16, 130, 
    224,  14, 168,  19, 234, 130, 
    240,  78, 140, 248,  24, 223, 
     42, 247,  66, 184, 120, 238, 
    131, 112,  57, 220,  15,  21, 
    161,  83,  16,   2, 231, 211, 
     38, 150, 140,  68, 130, 182, 
     24, 192, 206, 247,  55, 101, 
    183, 249,  75, 250,  63, 145, 
     28, 200, 127,  43,  37, 201, 
      9, 144,  44, 200,  29,  11, 
    242,  95, 181,  88,  44,  22, 
    139, 197,  98, 177,  88,  44, 
     22, 139, 197,  98, 249,  91, 
    184, 103, 119, 246,  40, 179, 
    125, 240, 144, 118, 247, 201, 
    217,  57,  28, 117, 158,  28, 
     46,  58, 252, 234,  56, 243, 
    117,  79, 170,  24,  53, 244, 
    123,  33, 233, 150, 200, 211, 
     92, 100, 157,  29, 232, 214, 
     57,  93, 208, 129,  42, 168, 
    214, 160, 160, 114, 254, 246, 
     91, 175, 227, 146, 215, 166, 
     67, 173,  85, 168, 242,  65, 
    168, 148,  31, 170,  46,  29, 
    233,  78,  21, 169, 142,  32, 
     82, 237, 126, 164, 122, 117, 
     81,  23,  84,  81, 245,   4, 
     69, 213, 237,  23,  85, 191, 
    214,  58,  82,  90, 245,   5, 
     88, 229, 107, 245, 212, 117, 
    175, 168, 252, 232,  59,  71, 
    229,  73, 183, 193, 235,  44, 
    142, 135,  39, 151, 220,  12, 
    124,  38, 160, 109, 151,  30, 
    120,  45, 210,  71, 196,  89, 
    241,  57, 242,  91, 225, 125, 
    169,  22,  62, 218,  79,  74, 
    107, 110, 242, 251,  65, 159, 
     76, 110, 234,  75, 234,  50, 
     77, 125, 201, 179,  39, 147, 
    127, 114, 148, 108,  72, 244, 
    194, 248, 243, 144, 156, 228, 
    152, 234, 158, 212,  44,  61, 
     83, 249,  58, 142, 199, 120, 
    234, 232, 214, 115, 121,  78, 
     48, 245, 222,  15, 102, 237, 
     25,  72,  65, 127,  98, 208, 
    172,  11, 141, 151,  88, 165, 
    166, 164, 211,  74, 177,  20, 
     23, 193,  77,  51,  62, 110, 
    188, 212, 160, 114,  80, 115, 
     28, 119, 204, 184, 148, 102, 
     37, 210, 201, 171, 241, 108, 
    165, 182,  94, 143,  23, 151, 
    214, 183, 134, 174, 205, 223, 
     24, 154,  43, 173, 213,  86, 
     43, 245, 120, 186, 186,  89, 
    143, 175,  87,  55,  42, 229, 
    205, 197, 249, 233, 184, 190, 
     81, 142, 231, 238, 150, 150, 
     43,  27, 245, 120, 114, 125, 
    173,  86,  93, 173,  44,  39, 
    139, 102, 238,  85,  38,  74, 
    245, 106, 121, 106, 101,   5, 
     83, 111,  47, 204,  37, 173, 
    249, 173, 133, 242, 229, 218, 
    242,  18, 125,   3, 238,  38, 
    105, 221,  88,  72,  83,  72, 
      8,   0,   0,   0, 255,  92, 
     60,   6,  69, 200,  78, 160, 
     88,  80,  68,  80,  96,   0, 
      0,   0,  67,  58,  92,  82, 
    101, 112, 111, 115,  92,  88, 
     98, 111, 120,  45,  65,  84, 
     71,  45,  83,  97, 109, 112, 
    108, 101, 115,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  66, 
     97, 115, 105,  99,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  66,  97, 115, 105,  99, 
     84, 120,  86,  99,  46, 112, 
    100,  98
};
