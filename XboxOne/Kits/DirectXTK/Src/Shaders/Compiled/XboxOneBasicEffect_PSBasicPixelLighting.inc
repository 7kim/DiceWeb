#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[390]
// Embedded Data:
//  0x00000186 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000181 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyzw
dcl_output o0.xyzw
dcl_temps 4
add r0.xyz, -v0.xyzx, cb0[12].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r1.xyz, r0.xyzx, r0.wwww, -cb0[3].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v1.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
mad r3.xyz, r0.xyzx, r0.wwww, -cb0[4].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, -cb0[5].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r1.y, r3.xyzx, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r1.z, r0.xyzx, r2.xyzx
max r0.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.x, -cb0[3].xyzx, r2.xyzx
dp3 r1.y, -cb0[4].xyzx, r2.xyzx
dp3 r1.z, -cb0[5].xyzx, r2.xyzx
ge r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r0.xyz, r0.xyzx, r2.xyzx
mul r2.xyz, r1.xyzx, r2.xyzx
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[2].wwww
exp r0.xyz, r0.xyzx
mul r0.xyz, r1.xyzx, r0.xyzx
mul r1.xyz, r0.yyyy, cb0[10].xyzx
mad r0.xyw, r0.xxxx, cb0[9].xyxz, r1.xyxz
mad r0.xyz, r0.zzzz, cb0[11].xyzx, r0.xywx
mul r0.xyz, r0.xyzx, cb0[2].xyzx
mul r0.xyz, r0.xyzx, v2.wwww
mul r1.xyz, r2.yyyy, cb0[7].xyzx
mad r1.xyz, r2.xxxx, cb0[6].xyzx, r1.xyzx
mad r1.xyz, r2.zzzz, cb0[8].xyzx, r1.xyzx
mad r1.xyz, r1.xyzx, cb0[0].xyzx, cb0[1].xyzx
mad r0.xyz, v2.xyzx, r1.xyzx, r0.xyzx
mad r1.xyz, cb0[13].xyzx, v2.wwww, -r0.xyzx
mad o0.xyz, v0.wwww, r1.xyzx, r0.xyzx
mov o0.w, v2.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[390], bundle is:[282] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_PSBasicPixelLighting.pdb
// Shader Semantic Hash      : 0xcaa8da5b89f2fa6
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask 15, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask  7, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask 15, param2, paramSlot2, DefaultVal={0,0,0,0}

codeLenInByte        = 796 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 13;
NumSgprs             = 30;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000003
SPIC:NUM_INTERP             = 3
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x308, dwords=0xC2)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, off, off, off done vm         // 000000000008: F8001801 00000002
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v4, off, off done vm          // 000000000008: F8001803 00000402
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v5, off, off done vm          // 000000000008: F8001803 00000502
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v2, v4                       // 000000000000: 5E000902
  v_cvt_pkrtz_f16_f32  v1, v3, v5                       // 000000000004: 5E020B03
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v2, v4                      // 000000000000: 5C000902
  v_cvt_pknorm_u16_f32  v1, v3, v5                      // 000000000004: 5C020B03
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v2, v4                      // 000000000000: 5A000902
  v_cvt_pknorm_i16_f32  v1, v3, v5                      // 000000000004: 5A020B03
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v2, v4                          // 000000000000: 60000902
  v_cvt_pk_u16_u32  v1, v3, v5                          // 000000000004: 60020B03
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v2, v4                          // 000000000000: 62000902
  v_cvt_pk_i16_i32  v1, v3, v5                          // 000000000004: 62020B03
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v4, v3, v5 done vm            // 000000000008: F800180F 05030402
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_load_dwordx4  s[4:7], s[0:1], 0x00                  // 000000000000: C0820100
  s_waitcnt     lgkmcnt(0)                              // 000000000004: BF8C007F
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x30          // 000000000008: C2840530
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x0c         // 00000000000C: C286050C
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x10         // 000000000010: C2880510
  s_buffer_load_dwordx4  s[20:23], s[4:7], 0x14         // 000000000014: C28A0514
  s_buffer_load_dwordx4  s[24:27], s[4:7], 0x08         // 000000000018: C28C0508
  s_mov_b32     m0, s2                                  // 00000000001C: BEFC0302
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000020: C8080000
  v_interp_p2_f32  v2, v1, attr0.x                      // 000000000024: C8090001
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000028: C80C0100
  v_interp_p2_f32  v3, v1, attr0.y                      // 00000000002C: C80D0101
  v_interp_p1_f32  v4, v0, attr0.z                      // 000000000030: C8100200
  v_interp_p2_f32  v4, v1, attr0.z                      // 000000000034: C8110201
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  v_sub_f32     v2, s8, v2                              // 00000000003C: 08040408
  v_sub_f32     v3, s9, v3                              // 000000000040: 08060609
  v_sub_f32     v4, s10, v4                             // 000000000044: 0808080A
  s_buffer_load_dwordx4  s[0:3], s[4:7], 0x28           // 000000000048: C2800528
  v_mul_legacy_f32  v5, v4, v4                          // 00000000004C: 0E0A0904
  v_mac_f32     v5, v3, v3                              // 000000000050: 3E0A0703
  v_mac_f32     v5, v2, v2                              // 000000000054: 3E0A0502
  v_rsq_f32     v5, v5                                  // 000000000058: 7E0A5D05
  v_mad_legacy_f32  v6, v2, v5, -s12                    // 00000000005C: D2800006 80320B02
  v_mad_legacy_f32  v7, v3, v5, -s13                    // 000000000064: D2800007 80360B03
  v_mad_legacy_f32  v8, v4, v5, -s14                    // 00000000006C: D2800008 803A0B04
  v_mul_legacy_f32  v9, v8, v8                          // 000000000074: 0E121108
  v_mac_f32     v9, v7, v7                              // 000000000078: 3E120F07
  v_mac_f32     v9, v6, v6                              // 00000000007C: 3E120D06
  v_rsq_f32     v9, v9                                  // 000000000080: 7E125D09
  v_mul_legacy_f32  v6, v6, v9                          // 000000000084: 0E0C1306
  v_mul_legacy_f32  v7, v7, v9                          // 000000000088: 0E0E1307
  v_mul_legacy_f32  v8, v8, v9                          // 00000000008C: 0E101308
  v_interp_p1_f32  v9, v0, attr1.x                      // 000000000090: C8240400
  v_interp_p2_f32  v9, v1, attr1.x                      // 000000000094: C8250401
  v_interp_p1_f32  v10, v0, attr1.y                     // 000000000098: C8280500
  v_interp_p2_f32  v10, v1, attr1.y                     // 00000000009C: C8290501
  v_interp_p1_f32  v11, v0, attr1.z                     // 0000000000A0: C82C0600
  v_interp_p2_f32  v11, v1, attr1.z                     // 0000000000A4: C82D0601
  v_mul_legacy_f32  v12, v11, v11                       // 0000000000A8: 0E18170B
  v_mac_f32     v12, v10, v10                           // 0000000000AC: 3E18150A
  v_mac_f32     v12, v9, v9                             // 0000000000B0: 3E181309
  v_rsq_f32     v12, v12                                // 0000000000B4: 7E185D0C
  v_mul_legacy_f32  v9, v9, v12                         // 0000000000B8: 0E121909
  v_mul_legacy_f32  v10, v10, v12                       // 0000000000BC: 0E14190A
  v_mul_legacy_f32  v11, v11, v12                       // 0000000000C0: 0E16190B
  v_mul_legacy_f32  v8, v8, v11                         // 0000000000C4: 0E101708
  v_mac_f32     v8, v7, v10                             // 0000000000C8: 3E101507
  v_mac_f32     v8, v6, v9                              // 0000000000CC: 3E101306
  v_mad_legacy_f32  v6, v2, v5, -s16                    // 0000000000D0: D2800006 80420B02
  v_mad_legacy_f32  v7, v3, v5, -s17                    // 0000000000D8: D2800007 80460B03
  v_mad_legacy_f32  v12, v4, v5, -s18                   // 0000000000E0: D280000C 804A0B04
  v_mad_legacy_f32  v2, v2, v5, -s20                    // 0000000000E8: D2800002 80520B02
  v_mad_legacy_f32  v3, v3, v5, -s21                    // 0000000000F0: D2800003 80560B03
  v_mad_legacy_f32  v4, v4, v5, -s22                    // 0000000000F8: D2800004 805A0B04
  v_mul_legacy_f32  v5, v12, v12                        // 000000000100: 0E0A190C
  v_mac_f32     v5, v7, v7                              // 000000000104: 3E0A0F07
  v_mac_f32     v5, v6, v6                              // 000000000108: 3E0A0D06
  v_rsq_f32     v5, v5                                  // 00000000010C: 7E0A5D05
  v_mul_legacy_f32  v6, v6, v5                          // 000000000110: 0E0C0B06
  v_mul_legacy_f32  v7, v7, v5                          // 000000000114: 0E0E0B07
  v_mul_legacy_f32  v5, v12, v5                         // 000000000118: 0E0A0B0C
  v_mul_legacy_f32  v5, v11, v5                         // 00000000011C: 0E0A0B0B
  v_mac_f32     v5, v7, v10                             // 000000000120: 3E0A1507
  v_mac_f32     v5, v6, v9                              // 000000000124: 3E0A1306
  v_mul_legacy_f32  v6, v4, v4                          // 000000000128: 0E0C0904
  v_mac_f32     v6, v3, v3                              // 00000000012C: 3E0C0703
  v_mac_f32     v6, v2, v2                              // 000000000130: 3E0C0502
  v_rsq_f32     v6, v6                                  // 000000000134: 7E0C5D06
  v_mul_legacy_f32  v2, v2, v6                          // 000000000138: 0E040D02
  v_mul_legacy_f32  v3, v3, v6                          // 00000000013C: 0E060D03
  v_mul_legacy_f32  v4, v4, v6                          // 000000000140: 0E080D04
  v_mul_legacy_f32  v4, v11, v4                         // 000000000144: 0E08090B
  v_mac_f32     v4, v3, v10                             // 000000000148: 3E081503
  v_mac_f32     v4, v2, v9                              // 00000000014C: 3E081302
  v_max_legacy_f32  v2, 0, v8                           // 000000000150: 1C041080
  v_max_legacy_f32  v3, 0, v5                           // 000000000154: 1C060A80
  v_max_legacy_f32  v4, 0, v4                           // 000000000158: 1C080880
  v_mul_legacy_f32  v5, -s14, v11                       // 00000000015C: D20E0005 2002160E
  v_mad_legacy_f32  v5, -s13, v10, v5                   // 000000000164: D2800005 2416140D
  v_mad_legacy_f32  v5, -s12, v9, v5                    // 00000000016C: D2800005 2416120C
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x24          // 000000000174: C2840524
  v_mul_legacy_f32  v6, v11, -s18                       // 000000000178: D20E0006 4000250B
  v_mad_legacy_f32  v6, -s17, v10, v6                   // 000000000180: D2800006 241A1411
  v_mad_legacy_f32  v6, -s16, v9, v6                    // 000000000188: D2800006 241A1210
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x2c         // 000000000190: C286052C
  v_mul_legacy_f32  v7, v11, -s22                       // 000000000194: D20E0007 40002D0B
  v_mad_legacy_f32  v7, -s21, v10, v7                   // 00000000019C: D2800007 241E1415
  v_mad_legacy_f32  v7, -s20, v9, v7                    // 0000000001A4: D2800007 241E1214
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x1c         // 0000000001AC: C288051C
  v_cmp_ge_f32  s[20:21], v5, 0                         // 0000000001B0: D00C0014 00010105
  v_cmp_ge_f32  s[22:23], v6, 0                         // 0000000001B8: D00C0016 00010106
  v_cmp_le_f32  vcc, 0, v7                              // 0000000001C0: 7C060E80
  v_cndmask_b32  v2, 0, v2, s[20:21]                    // 0000000001C4: D2000002 00520480
  v_cndmask_b32  v3, 0, v3, s[22:23]                    // 0000000001CC: D2000003 005A0680
  v_cndmask_b32  v4, 0, v4, vcc                         // 0000000001D4: 00080880
  v_cndmask_b32  v8, 0, v5, s[20:21]                    // 0000000001D8: D2000008 00520A80
  v_cndmask_b32  v9, 0, v6, s[22:23]                    // 0000000001E0: D2000009 005A0C80
  v_cndmask_b32  v10, 0, v7, vcc                        // 0000000001E8: 00140E80
  v_log_f32     v2, v2                                  // 0000000001EC: 7E044F02
  v_log_f32     v3, v3                                  // 0000000001F0: 7E064F03
  v_log_f32     v4, v4                                  // 0000000001F4: 7E084F04
  v_mul_legacy_f32  v2, s27, v2                         // 0000000001F8: 0E04041B
  v_mul_legacy_f32  v3, s27, v3                         // 0000000001FC: 0E06061B
  v_mul_legacy_f32  v4, s27, v4                         // 000000000200: 0E08081B
  v_exp_f32     v2, v2                                  // 000000000204: 7E044B02
  v_exp_f32     v3, v3                                  // 000000000208: 7E064B03
  v_exp_f32     v4, v4                                  // 00000000020C: 7E084B04
  v_mul_legacy_f32  v2, v5, v2                          // 000000000210: 0E040505
  v_mul_legacy_f32  v3, v6, v3                          // 000000000214: 0E060706
  v_mul_legacy_f32  v4, v7, v4                          // 000000000218: 0E080907
  s_waitcnt     lgkmcnt(0)                              // 00000000021C: BF8C007F
  v_mul_legacy_f32  v5, s0, v3                          // 000000000220: 0E0A0600
  v_mul_legacy_f32  v6, s1, v3                          // 000000000224: 0E0C0601
  v_mul_legacy_f32  v3, s2, v3                          // 000000000228: 0E060602
  s_buffer_load_dwordx4  s[0:3], s[4:7], 0x18           // 00000000022C: C2800518
  v_mac_f32     v5, s8, v2                              // 000000000230: 3E0A0408
  v_mac_f32     v6, s9, v2                              // 000000000234: 3E0C0409
  v_mac_f32     v3, s10, v2                             // 000000000238: 3E06040A
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x20          // 00000000023C: C2840520
  v_mac_f32     v5, s12, v4                             // 000000000240: 3E0A080C
  v_mac_f32     v6, s13, v4                             // 000000000244: 3E0C080D
  v_mac_f32     v3, s14, v4                             // 000000000248: 3E06080E
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x00         // 00000000024C: C2860500
  v_mul_legacy_f32  v2, s24, v5                         // 000000000250: 0E040A18
  v_mul_legacy_f32  v4, s25, v6                         // 000000000254: 0E080C19
  v_mul_legacy_f32  v3, s26, v3                         // 000000000258: 0E06061A
  s_buffer_load_dwordx4  s[20:23], s[4:7], 0x04         // 00000000025C: C28A0504
  v_interp_p1_f32  v5, v0, attr2.w                      // 000000000260: C8140B00
  v_interp_p2_f32  v5, v1, attr2.w                      // 000000000264: C8150B01
  v_mul_legacy_f32  v2, v2, v5                          // 000000000268: 0E040B02
  v_mul_legacy_f32  v4, v4, v5                          // 00000000026C: 0E080B04
  v_mul_legacy_f32  v3, v3, v5                          // 000000000270: 0E060B03
  v_mul_legacy_f32  v6, s16, v9                         // 000000000274: 0E0C1210
  v_mul_legacy_f32  v7, s17, v9                         // 000000000278: 0E0E1211
  v_mul_legacy_f32  v9, s18, v9                         // 00000000027C: 0E121212
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x34           // 000000000280: C2820534
  s_waitcnt     lgkmcnt(0)                              // 000000000284: BF8C007F
  v_mac_f32     v6, s0, v8                              // 000000000288: 3E0C1000
  v_mac_f32     v7, s1, v8                              // 00000000028C: 3E0E1001
  v_mac_f32     v9, s2, v8                              // 000000000290: 3E121002
  v_mac_f32     v6, s8, v10                             // 000000000294: 3E0C1408
  v_mac_f32     v7, s9, v10                             // 000000000298: 3E0E1409
  v_mac_f32     v9, s10, v10                            // 00000000029C: 3E12140A
  v_mov_b32     v8, s20                                 // 0000000002A0: 7E100214
  v_mac_f32     v8, s12, v6                             // 0000000002A4: 3E100C0C
  v_mov_b32     v6, s21                                 // 0000000002A8: 7E0C0215
  v_mac_f32     v6, s13, v7                             // 0000000002AC: 3E0C0E0D
  v_mov_b32     v7, s22                                 // 0000000002B0: 7E0E0216
  v_mac_f32     v7, s14, v9                             // 0000000002B4: 3E0E120E
  v_interp_p1_f32  v9, v0, attr2.x                      // 0000000002B8: C8240800
  v_interp_p2_f32  v9, v1, attr2.x                      // 0000000002BC: C8250801
  v_interp_p1_f32  v10, v0, attr2.y                     // 0000000002C0: C8280900
  v_interp_p2_f32  v10, v1, attr2.y                     // 0000000002C4: C8290901
  v_interp_p1_f32  v11, v0, attr2.z                     // 0000000002C8: C82C0A00
  v_interp_p2_f32  v11, v1, attr2.z                     // 0000000002CC: C82D0A01
  v_mac_f32     v2, v9, v8                              // 0000000002D0: 3E041109
  v_mac_f32     v4, v10, v6                             // 0000000002D4: 3E080D0A
  v_mac_f32     v3, v11, v7                             // 0000000002D8: 3E060F0B
  v_mad_legacy_f32  v6, s4, v5, -v2                     // 0000000002DC: D2800006 840A0A04
  v_mad_legacy_f32  v7, s5, v5, -v4                     // 0000000002E4: D2800007 84120A05
  v_mad_legacy_f32  v8, s6, v5, -v3                     // 0000000002EC: D2800008 840E0A06
  v_interp_p1_f32  v0, v0, attr0.w                      // 0000000002F4: C8000300
  v_interp_p2_f32  v0, v1, attr0.w                      // 0000000002F8: C8010301
  v_mac_f32     v2, v0, v6                              // 0000000002FC: 3E040D00
  v_mac_f32     v4, v0, v7                              // 000000000300: 3E080F00
  v_mac_f32     v3, v0, v8                              // 000000000304: 3E061100
  v_cvt_pkrtz_f16_f32  v0, v2, v4                       // 000000000308: 5E000902
  v_cvt_pkrtz_f16_f32  v1, v3, v5                       // 00000000030C: 5E020B03
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000310: F8001C0F 00000100
  s_endpgm                                              // 000000000318: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   13
//  NumSRegs:                   30
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   187
//  CycleSimNWaves:             187
//  Code Size:                  796
//Assembler Counts:
//  num_32bit_ops                     : 143
//  num_64bit_ops                     : 28
//  num_alu                           : 149
//  num_fc                            : 21
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 14
//  num_inst_vop2                     : 85
//  num_inst_vop3                     : 12
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 22
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 13
// m_uNumSRegs                       : 30
// m_uSCCodeSize                     : 796
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 187
// m_uCycleSimNWaves                 : 187

// Assembler Counts:
// num_32bit_ops                     : 143
// num_64bit_ops                     : 28
// num_alu                           : 149
// num_fc                            : 21
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 14
// num_inst_vop2                     : 85
// num_inst_vop3                     : 12
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 22
// num_inst_smem                     : 15
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_PSBasicPixelLighting[] =
{
     68,  88,  66,  67, 192, 154, 
    177, 193, 142, 161, 147,   9, 
    217, 221, 188,  81, 118, 102, 
    235, 100,   1,   0,   0,   0, 
    225,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    156,   0,   0,   0, 208,   0, 
      0,   0,  96,  11,   0,   0, 
    112,  11,   0,   0,  73,  83, 
     71,  78,  96,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  80,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  89,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,  15,  15, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 136,  10,   0,   0, 
     80,   0,   0,   0, 162,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 134,   1, 
      0,   0,  80,   0,   0,   0, 
    129,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     98,  16,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   4,   0, 
      0,   0,   0,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  12,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  58,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   2,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     16,   0,   0,   7,  18,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   3,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     16,   0,   0,   7,  34,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   7, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     52,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   9,  18,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   9,  34,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   9,  66,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  29,   0, 
      0,  10, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,   2,  64, 
      0,   0,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  47,   0,   0,   5, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   8, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
    246, 143,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     25,   0,   0,   5, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     86,   5,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  10,   0, 
      0,   0,  50,   0,   0,  10, 
    178,   0,  16,   0,   0,   0, 
      0,   0,   6,   0,  16,   0, 
      0,   0,   0,   0,  70, 136, 
     32,   0,   0,   0,   0,   0, 
      9,   0,   0,   0,  70,   8, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   0,   0,   0,   0, 
    166,  10,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  11,   0, 
      0,   0,  70,   3,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   8, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0, 246,  31,  16,   0, 
      2,   0,   0,   0,  56,   0, 
      0,   8, 114,   0,  16,   0, 
      1,   0,   0,   0,  86,   5, 
     16,   0,   2,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   7,   0,   0,   0, 
     50,   0,   0,  10, 114,   0, 
     16,   0,   1,   0,   0,   0, 
      6,   0,  16,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      1,   0,   0,   0, 166,  10, 
     16,   0,   2,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,  50,   0, 
      0,   9, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     13,   0,   0,   0, 246,  31, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     50,   0,   0,   9, 114,  32, 
     16,   0,   0,   0,   0,   0, 
    246,  31,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     58,  16,  16,   0,   2,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0,  28,   1, 
      0,   0,  23,   0,   1,   0, 
     41,  66,  18,   0, 120,   1, 
    237,  88, 205, 107,  36,  69, 
     20, 127, 221,  93,  93,  83, 
     93,  93,  83, 211, 233, 249, 
    200,  76,  50, 132,  61, 204, 
     66, 148, 196,  93, 100, 201, 
     97,  15,  69,  76, 252,   0, 
     35,  36,  36, 235, 178, 132, 
     73, 220, 124,  76,  54,  35, 
    217,  77, 200, 228, 144, 131, 
    140, 237,  18,  68,  36, 226, 
     94, 132, 220, 188, 168,   7, 
    189, 120, 240,  32,   8, 102, 
    153,  83,  31, 151, 156, 245, 
    191, 240, 224,  65, 208, 247, 
    218, 238,  48,  70, 247,  54, 
    160, 224, 252, 224,  87, 175, 
    127, 253, 234, 227,  85, 213, 
     27, 232,  55, 115,  33,  36, 
     56,  95, 255, 249, 140, 236, 
    204, 139, 167,  83, 140,   3, 
    184, 248, 108,  33, 201,  18, 
    206, 242, 212,   2, 252,  20, 
     80,  11,  48,  73,  13, 117, 
    176,   1, 200,  53, 129, 172, 
     59,   0, 179, 104, 201, 151, 
    113, 103, 231, 214,  60,  68, 
     51, 243, 248, 152, 244, 161, 
    190,  63, 164, 252,  20,  89, 
     71, 126, 134,  44,  35, 105, 
    186, 171, 200, 214, 191, 234, 
    211, 200, 183, 145,  10,  73, 
    190,  10, 178, 128,  36,  92, 
    237,  11,  45, 106, 254,  25, 
    223,  32,  41, 166, 231, 129, 
     98, 203,  64, 243,  82, 156, 
      4, 218, 203, 191, 141, 171, 
    251,  36, 157, 221,  19, 129, 
    238, 163,  31, 116, 102, 217, 
    152, 239, 210, 123, 204, 116, 
    156, 106,  26,  78, 123, 123, 
    138, 124,  30, 126,  71,  48, 
    122, 232,  67, 166, 105,  73, 
    158, 222,   4, 183,  70,   1, 
      4,  90, 251,   6,  64,  58, 
    255, 255,   1, 253, 103, 129, 
     63, 143, 100, 235,  89, 110, 
     18,  50, 127, 143,  26, 136, 
    206, 137,  79, 170, 240,  43, 
    169,  76,  91, 168, 105, 108, 
    166,  29, 210, 201, 192,  62, 
    141,  63,  14, 219, 131, 117, 
    199, 183, 215,  11, 117,  28, 
    143, 151, 137, 186, 137, 186, 
    217, 167,  87,  81, 175, 246, 
    233, 251, 168, 239, 247, 233, 
     77, 212, 155, 153, 206, 230, 
     47,  36, 235,  57,  46, 221, 
     53, 190, 236, 254, 151,  57, 
    140, 113,  48,  28, 198,  56, 
     24,  14,  99,  28,  12, 135, 
     49,  14, 134, 195,  24,   7, 
    195,  97, 140, 131, 225,  48, 
    198, 129,  17,  63, 224,  31, 
     63, 125,  31,  78, 207, 111, 
    186,  39,  61, 229, 126, 216, 
     11, 220, 143, 122,  37, 247, 
    227, 158, 112,  79, 123, 182, 
    243, 219, 143, 248,   1,  30, 
     91, 224, 197,  96, 169, 216, 
    178, 242,  49, 216,  65, 108, 
    217,  35,  49, 141,  17, 140, 
      9, 143, 115,  33, 133,  16, 
    147, 110, 212,  99, 158, 212, 
     78,  78,  26, 219, 149, 198, 
     93, 147,  93,  14, 209, 133, 
    237, 191,  28, 229, 208,  58, 
    254,  76,  36, 208,  50, 255, 
    118,  36,  70,  66, 157,  43, 
    132, 134, 231,  67, 227, 173, 
    133,  93,  94,  84,  58,  87, 
    212,  90,  20,   3,  13, 172, 
     17,  91, 236, 122,  12, 238, 
    100, 108, 185,  47, 196, 192, 
    167,  98, 139,  79, 199, 254, 
    104,  85, 203, 114, 213, 120, 
    197, 170,  81, 107, 213, 174, 
     87,  11, 181, 172, 149, 180, 
     95, 171, 104,  49,  26, 232, 
     92,  57,  48, 188, 136, 196, 
     53, 108, 127,  46,  93, 243, 
    245,  72, 161, 101, 254, 155, 
    145, 141, 214, 246, 151,  35, 
      7, 173, 227, 223, 141,  24, 
     90, 230, 175,  70, 170,  38, 
     49,  22, 137, 177, 164,  49, 
    251,  24, 139, 175, 181, 242, 
    165, 246, 145, 185,  50, 250, 
    138, 210,  48,  79, 225, 222, 
     20, 238,  77,  25, 190, 166, 
    186, 118, 158, 105,  39, 207, 
     53, 203,  11, 237, 123,  66, 
     59, 101,  97, 236, 162,  48, 
     81, 192, 234, 145, 228, 245, 
     72, 136, 186,  11, 250,  66, 
     87, 236, 107,  46, 174, 149, 
     47,  85,  26, 100,  85,  88, 
    105,  52, 240, 172,  57, 250, 
    252, 235,  48,  75, 241, 142, 
    148, 198,  26, 100, 131, 112, 
    172,  49, 133, 119, 144,  35, 
    223,  52, 204, 210,  30, 202, 
    165, 137,   6, 217,  82,  56, 
    209, 168, 211, 221, 128, 122, 
    230,  90,  22, 214, 171, 234, 
     25,  71,  27, 105, 254,  30, 
    126, 231,  95,  68, 108, 153, 
    234, 133, 139, 136, 175,   2, 
    174,  77, 101, 211,  69,  36, 
    151, 193,  35, 171, 240, 157, 
     46, 129, 189, 200, 186, 206, 
     34, 239, 178,  69, 209,  29, 
    103,  76, 143, 115, 174, 199, 
    133, 208, 246,   2, 190,  95, 
    192, 247,  11, 162, 235, 186, 
     76, 243,  28, 215,  57, 220, 
     19, 221,  49, 112, 169,  45, 
    174, 180, 141, 125, 171, 120, 
    199, 130,  73, 227,  49, 101, 
     36, 227, 230,  26, 229, 140, 
    144,  38,  47, 148, 209, 130, 
     27, 192, 216, 171, 146, 233, 
    154,  18, 122,  12, 251,  51, 
    204,  35, 240,  75, 177, 229, 
    151,  99, 219, 103, 154, 249, 
    120,  78,  62, 215,  65, 168, 
     52, 166, 128,  14, 195,  80, 
    223, 114,  31, 247, 146, 117, 
      2, 101, 172,  64,  27,  59, 
      8, 141,  40,  41, 227, 149, 
    180, 145, 165, 208, 148, 236, 
    160, 171,  84,  96, 202, 182, 
    234, 230, 181,  50,  21,  91, 
    119, 117, 168,  13,   8, 204, 
     19, 129, 121, 226,  97, 158, 
    120, 152,  39,  18, 243,  68, 
     78, 199, 222,   8,  51,  50, 
     47, 140,  95, 224,  73,  46, 
     48,  41,  79, 232, 252,  92, 
     25, 158,  80, 254, 225, 118, 
     78, 240, 160,  98, 203, 177, 
     98, 200,  51,   3,   5,  97, 
     96, 132,  27, 172,  99, 254, 
     82,   7,   1, 124, 112,  94, 
     35, 251, 103,  17, 117, 137, 
     68, 178, 164, 195,  37, 170, 
     35, 212,   2, 252, 146, 214, 
    168,  13,  36, 158,  59,  78, 
     67,  21,  28, 192,  24, 146, 
     97,  85,  75, 248, 234, 198, 
    231, 223, 127, 249, 201, 215, 
    244, 183,  67, 130, 165, 116, 
    236, 205, 212,  94,  67,  94, 
     58,  19, 124,  65, 205, 223, 
    112, 156, 246, 223,  77,  45, 
     45,  77, 229, 157, 206, 254, 
    241, 160,  98,  29, 113, 150, 
    250, 159, 164,  22, 243,   2, 
    124, 228, 213,  56, 190,  77, 
    253, 239,  34,  41, 210, 249, 
    219, 205, 229, 214, 193, 126, 
    167, 121, 111, 115, 255, 120, 
    250, 149,  59, 111,  76, 175, 
    108,  60,  60, 216, 107, 117, 
    154,  11, 237, 163,  78, 243, 
    213, 246,  97, 107, 235, 232, 
    222, 157, 133, 102, 231, 112, 
    171, 185, 178, 187, 177, 221, 
     58, 236,  52, 231, 247,  31, 
     30, 180, 247,  90, 219, 201, 
    160, 197,  71, 173, 185, 141, 
     78, 123, 235, 181, 157,  29, 
    236, 250, 206, 210,  74, 162, 
    150, 218, 199, 173, 189, 183, 
    218,  15, 118, 143, 218, 143, 
     30, 188, 116, 176, 189,   9, 
    127,   0, 148, 240,  88,  73, 
      0,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 166,  47, 
    159, 184, 165, 141, 170,  12, 
     88,  80,  68,  80, 105,   0, 
      0,   0,  67,  58,  92,  82, 
    101, 112, 111, 115,  92,  88, 
     98, 111, 120,  45,  65,  84, 
     71,  45,  83,  97, 109, 112, 
    108, 101, 115,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  66, 
     97, 115, 105,  99,  69, 102, 
    102, 101,  99, 116,  95,  80, 
     83,  66,  97, 115, 105,  99, 
     80, 105, 120, 101, 108,  76, 
    105, 103, 104, 116, 105, 110, 
    103,  46, 112, 100,  98
};
