#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[20]
// Embedded Data:
//  0x00000014 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000000f - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_input_ps linear v0.xyzw
dcl_output o0.xyzw
mov o0.xyzw, v0.xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[20], bundle is:[127] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_PSBasicNoFog.pdb
// Shader Semantic Hash      : 0x37e5735ae72e155e
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask 15, param0, paramSlot0, DefaultVal={0,0,0,0}

codeLenInByte        = 56 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 0;
extUserElementCount  = 0;
NumVgprs             = 5;
NumSgprs             = 5;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000001
SPIC:NUM_INTERP             = 1
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x24, dwords=0x9)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, off, off, off done vm         // 000000000008: F8001801 00000002
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, off, off done vm          // 000000000008: F8001803 00000302
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v0, off, off done vm          // 000000000008: F8001803 00000002
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 000000000000: 5E020702
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 000000000004: 5E000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v2, v3                      // 000000000000: 5C020702
  v_cvt_pknorm_u16_f32  v0, v4, v0                      // 000000000004: 5C000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v2, v3                      // 000000000000: 5A020702
  v_cvt_pknorm_i16_f32  v0, v4, v0                      // 000000000004: 5A000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v2, v3                          // 000000000000: 60020702
  v_cvt_pk_u16_u32  v0, v4, v0                          // 000000000004: 60000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v2, v3                          // 000000000000: 62020702
  v_cvt_pk_i16_i32  v0, v4, v0                          // 000000000004: 62000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, v4, v0 done vm            // 000000000008: F800180F 00040302
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b32     m0, s2                                  // 000000000000: BEFC0302
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000004: C8080000
  v_interp_p2_f32  v2, v1, attr0.x                      // 000000000008: C8090001
  v_interp_p1_f32  v3, v0, attr0.y                      // 00000000000C: C80C0100
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000010: C80D0101
  v_interp_p1_f32  v4, v0, attr0.z                      // 000000000014: C8100200
  v_interp_p2_f32  v4, v1, attr0.z                      // 000000000018: C8110201
  v_interp_p1_f32  v0, v0, attr0.w                      // 00000000001C: C8000300
  v_interp_p2_f32  v0, v1, attr0.w                      // 000000000020: C8010301
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 000000000024: 5E020702
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 000000000028: 5E000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 00000000002C: F8001C0F 00000001
  s_endpgm                                              // 000000000034: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   5
//  NumSRegs:                   5
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   82
//  CycleSimNWaves:             82
//  Code Size:                  56
//Assembler Counts:
//  num_32bit_ops                     : 12
//  num_64bit_ops                     : 1
//  num_alu                           : 10
//  num_fc                            : 2
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 1
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 2
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 8
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 5
// m_uNumSRegs                       : 5
// m_uSCCodeSize                     : 56
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 82
// m_uCycleSimNWaves                 : 82

// Assembler Counts:
// num_32bit_ops                     : 12
// num_64bit_ops                     : 1
// num_alu                           : 10
// num_fc                            : 2
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 1
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 2
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 8
// num_inst_smem                     : 0
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 0
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_PSBasicNoFog[] =
{
     68,  88,  66,  67, 167,  43, 
      3,  36, 182, 213, 120, 145, 
    174, 150, 220, 213,  49, 205, 
     76, 155,   1,   0,   0,   0, 
    109,   3,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    100,   0,   0,   0, 152,   0, 
      0,   0, 244,   2,   0,   0, 
      4,   3,   0,   0,  73,  83, 
     71,  78,  40,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  67,  79,  76,  79, 
     82,   0, 171, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
     84,   2,   0,   0,  80,   0, 
      0,   0, 149,   0,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  20,   0,   0,   0, 
     80,   0,   0,   0,  15,   0, 
      0,   0, 106,   8,   0,   1, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 242,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 129,   0, 
      0,   0,  23,   0,   1,   0, 
     41,  34,  15,   0, 120,   1, 
    237, 151, 187,  74,   3,  65, 
     20, 134, 207, 108, 226, 253, 
    146,  88,   8,  41,  44, 196, 
     70,  17,  20, 172,  20,  81, 
     48,  94,  11,  65, 197,  88, 
     72,  24,  98, 178, 201, 170, 
    129, 232, 134, 172,  69,  42, 
    137,  79, 160, 165,  90, 251, 
     28, 106,  97, 177, 165,  47, 
     33, 250,   8,  22, 130, 158, 
    127,  51, 131, 171, 137, 218, 
     44,  34, 184,  63, 124, 231, 
    236, 159, 153, 157,  61, 123, 
      9, 204,  25, 138, 145, 167, 
    217, 187, 202,  41, 242, 104, 
    251, 204, 240,  12, 231,  22, 
     70, 168,  12, 157, 247,  32, 
     18, 221, 171,  60, 130, 128, 
      9,  70, 125,  14, 152,  98, 
    230,  24, 140, 105, 136, 226, 
    201, 203, 139, 137, 100,  59, 
     31,  69, 152,  86, 102,  83, 
    209, 205,  96, 137,  78, 134, 
    151, 241, 142,  63,  75, 255, 
    214, 108,  12, 231, 104,  97, 
    125, 173, 134, 185,   5, 132, 
    230, 194, 237, 160, 246, 175, 
    132, 218, 180, 176, 174, 190, 
    230, 119, 231, 252, 150,  26, 
    238, 147, 165, 223,  19, 132, 
    247, 225,  87,  47, 194,  15, 
    194, 125, 129,  91, 230,  43, 
    189, 178, 144, 155,   9,  53, 
    181, 146, 250, 168, 254, 169, 
    162,   8,  44,  60,  11, 124, 
     47, 113, 198, 255,  68, 244, 
    120,   7,   2, 213, 110, 192, 
     89, 130, 158, 225, 180,  23, 
    236, 235, 223,  90, 221,  71, 
    224, 241,   7, 242, 123, 118, 
     70, 155, 145, 137,  10, 202, 
    196,   6, 232, 217, 187,  94, 
    155,  33, 217,  75, 159,  79, 
    179,  79, 251, 124, 150, 125, 
    214, 231,  77, 246, 166, 246, 
    122, 253, 152, 119, 189, 168, 
    126, 215, 199, 127, 153, 176, 
    198,  96,   8, 107,  12, 134, 
    176, 198,  96,   8, 107,  12, 
    134, 176, 198,  96,   8, 107, 
     12, 134, 176, 198, 192,  32, 
     35, 242, 114, 205, 221, 143, 
     43, 168, 195,  37, 209, 237, 
     10, 209, 227, 146,  17, 119, 
    133, 209, 231, 114, 195, 229, 
    138, 136, 112, 121, 143, 247, 
     97, 143,  72, 116, 114, 163, 
    155, 129,  39, 213,  47,  36, 
     24, 236,  71, 163,  94, 135, 
     70, 148, 233,  31, 127,  76, 
     59,  15, 147,  56, 134, 166, 
    212, 252, 132, 202, 131,  12, 
    250, 183, 119,  93,  33,  52, 
     40, 171, 230, 111, 168, 140, 
    189,  48, 246, 191, 189,  94, 
    151, 193,  82, 191, 215,  84, 
    174, 170, 140, 126, 174, 139, 
    249,  92, 199, 185,  26,  55, 
     25,  84, 186,  48,  45,  55, 
    173, 178, 237, 200, 109, 211, 
    174, 142,  37, 183,  86, 198, 
     82, 185, 131, 114, 201, 114, 
    228, 106, 241, 200, 145, 139, 
    197, 138, 149,  63, 218, 222, 
     90, 149,  78,  37,  47,  83, 
    251, 185, 130,  85, 113, 228, 
    130, 125,  80,  46, 150, 172, 
    130, 119, 210, 250, 161,  53, 
    159, 115, 138, 249, 165, 221, 
     93, 158, 186, 179, 145, 242, 
    220, 154, 189, 108, 239, 141, 
    151,  11,  38, 189,   1,  36, 
    236, 202, 187,   0,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0,  94,  21,  46, 231, 
     90, 115, 229,  55,  88,  80, 
     68,  80,  97,   0,   0,   0, 
     67,  58,  92,  82, 101, 112, 
    111, 115,  92,  88,  98, 111, 
    120,  45,  65,  84,  71,  45, 
     83,  97, 109, 112, 108, 101, 
    115,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  66,  97, 115, 
    105,  99,  69, 102, 102, 101, 
     99, 116,  95,  80,  83,  66, 
     97, 115, 105,  99,  78, 111, 
     70, 111, 103,  46, 112, 100, 
     98
};
