#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[160]
// Embedded Data:
//  0x000000a0 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x0000009b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 r0.x, v0.xyzw, cb0[1].xyzw
dp4 r0.y, v0.xyzw, cb0[2].xyzw
dp4 r0.z, v0.xyzw, cb0[3].xyzw
mov r0.w, l(1.000000)
mov o1.xyzw, r0.xyzw
dp3 r0.x, v1.xyzx, cb0[5].xyzx
dp3 r0.y, v1.xyzx, cb0[6].xyzx
dp3 r0.z, v1.xyzx, cb0[7].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mov o3.xyzw, cb0[22].xyzw
dp4 o4.x, v0.xyzw, cb0[8].xyzw
dp4 o4.y, v0.xyzw, cb0[9].xyzw
dp4 o4.z, v0.xyzw, cb0[10].xyzw
dp4 o4.w, v0.xyzw, cb0[11].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[160], bundle is:[192] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_VSConstant.pdb
// Shader Semantic Hash      : 0xc20758ea24af94c0
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 292 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 18;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x1c           // 00000000000C: C282011C
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x18          // 000000000010: C2840118
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x14         // 000000000014: C2860114
  s_buffer_load_dwordx8  s[16:23], s[0:3], 0x04         // 000000000018: C2C80104
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x0c         // 00000000001C: C28C010C
  s_buffer_load_dwordx16  s[28:43], s[0:3], 0x20        // 000000000020: C30E0120
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000024: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000028: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 00000000002C: 0E02140A
  v_mac_f32     v0, s5, v9                              // 000000000030: 3E001205
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x58           // 000000000034: C2800158
  v_mul_legacy_f32  v2, s14, v10                        // 000000000038: 0E04140E
  v_mac_f32     v1, s9, v9                              // 00000000003C: 3E021209
  v_mac_f32     v0, s4, v8                              // 000000000040: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000044: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000048: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 00000000004C: 0E060100
  v_mul_legacy_f32  v9, s19, v7                         // 000000000050: 0E120E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000054: 0E140E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000058: 0E160E1B
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s31, v7                         // 000000000064: 0E100E1F
  v_mul_legacy_f32  v14, s35, v7                        // 000000000068: 0E1C0E23
  v_mul_legacy_f32  v15, s39, v7                        // 00000000006C: 0E1E0E27
  v_mul_legacy_f32  v7, s43, v7                         // 000000000070: 0E0E0E2B
  v_mac_f32     v9, s18, v6                             // 000000000074: 3E120C12
  v_mac_f32     v10, s22, v6                            // 000000000078: 3E140C16
  v_mac_f32     v11, s26, v6                            // 00000000007C: 3E160C1A
  v_mac_f32     v3, v2, v2                              // 000000000080: 3E060502
  v_mac_legacy_f32  v8, s30, v6                         // 000000000084: 0C100C1E
  v_mac_legacy_f32  v14, s34, v6                        // 000000000088: 0C1C0C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v7, s42, v6                         // 000000000090: 0C0E0C2A
  v_mac_f32     v9, s17, v5                             // 000000000094: 3E120A11
  v_mac_f32     v10, s21, v5                            // 000000000098: 3E140A15
  v_mac_f32     v11, s25, v5                            // 00000000009C: 3E160A19
  v_rsq_f32     v3, v3                                  // 0000000000A0: 7E065D03
  v_mac_legacy_f32  v8, s29, v5                         // 0000000000A4: 0C100A1D
  v_mac_legacy_f32  v14, s33, v5                        // 0000000000A8: 0C1C0A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000AC: 0C1E0A25
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000B0: 0C0E0A29
  v_mac_f32     v9, s16, v4                             // 0000000000B4: 3E120810
  v_mac_f32     v10, s20, v4                            // 0000000000B8: 3E140814
  v_mac_f32     v11, s24, v4                            // 0000000000BC: 3E160818
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000C0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000C4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000C8: 0E000700
  v_mac_legacy_f32  v8, s28, v4                         // 0000000000CC: 0C10081C
  v_mac_legacy_f32  v14, s32, v4                        // 0000000000D0: 0C1C0820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000D4: 0C1E0824
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000D8: 0C0E0828
  v_mov_b32     v3, 0                                   // 0000000000DC: 7E060280
  v_mov_b32     v4, 1.0                                 // 0000000000E0: 7E0802F2
  s_waitcnt     lgkmcnt(0)                              // 0000000000E4: BF8C007F
  v_mov_b32     v5, s0                                  // 0000000000E8: 7E0A0200
  v_mov_b32     v6, s1                                  // 0000000000EC: 7E0C0201
  v_mov_b32     v16, s2                                 // 0000000000F0: 7E200202
  v_mov_b32     v17, s3                                 // 0000000000F4: 7E220203
  exp           pos0, v8, v14, v15, v7 done             // 0000000000F8: F80008CF 070F0E08
  exp           param0, v12, v13, v3, v4                // 000000000100: F800020F 04030D0C
  exp           param1, v9, v10, v11, v4                // 000000000108: F800021F 040B0A09
  exp           param2, v2, v1, v0, v4                  // 000000000110: F800022F 04000102
  exp           param3, v5, v6, v16, v17                // 000000000118: F800023F 11100605
  s_endpgm                                              // 000000000120: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   18
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  292
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 5
//  num_alu                           : 50
//  num_fc                            : 13
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 7
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 18
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 292
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 5
// num_alu                           : 50
// num_fc                            : 13
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 7
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[354], bundle is:[206] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_VSConstant.pdb
// Shader Semantic Hash      : 0xc20758ea24af94c0
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 392 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 54;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x20       // 00000000000C: C3060920
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx8  s[28:35], s[8:11], 0x04        // 000000000018: C2CE0904
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x1c        // 00000000001C: C292091C
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[40:43], s[8:11], 0x18        // 00000000002C: C2940918
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x0c        // 00000000003C: C296090C
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x14        // 000000000040: C2980914
  v_mac_legacy_f32  v0, s12, v4                         // 000000000044: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000048: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 00000000004C: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 000000000050: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000054: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000058: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 00000000005C: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 000000000060: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000064: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000068: BF8C007F
  v_mul_legacy_f32  v11, s31, v7                        // 00000000006C: 0E160E1F
  v_mul_legacy_f32  v14, s38, v10                       // 000000000070: 0E1C1426
  v_mac_legacy_f32  v3, s24, v4                         // 000000000074: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000078: E0704040 04400000
  v_mac_legacy_f32  v11, s30, v6                        // 000000000080: 0C160C1E
  v_mul_legacy_f32  v0, s35, v7                         // 000000000084: 0E000E23
  v_mul_legacy_f32  v15, s42, v10                       // 000000000088: 0E1E142A
  v_mac_legacy_f32  v14, s37, v9                        // 00000000008C: 0C1C1225
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 000000000090: E0704044 04400100
  v_mac_legacy_f32  v11, s29, v5                        // 000000000098: 0C160A1D
  v_mac_legacy_f32  v0, s34, v6                         // 00000000009C: 0C000C22
  v_mul_legacy_f32  v1, s47, v7                         // 0000000000A0: 0E020E2F
  v_mul_legacy_f32  v7, s50, v10                        // 0000000000A4: 0E0E1432
  v_mac_legacy_f32  v15, s41, v9                        // 0000000000A8: 0C1E1229
  v_mac_legacy_f32  v14, s36, v8                        // 0000000000AC: 0C1C1024
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000B0: E0704048 04400200
  v_mac_legacy_f32  v11, s28, v4                        // 0000000000B8: 0C16081C
  v_mac_legacy_f32  v0, s33, v5                         // 0000000000BC: 0C000A21
  v_mac_legacy_f32  v1, s46, v6                         // 0000000000C0: 0C020C2E
  v_mac_legacy_f32  v7, s49, v9                         // 0000000000C4: 0C0E1231
  v_mac_legacy_f32  v15, s40, v8                        // 0000000000C8: 0C1E1028
  v_mul_legacy_f32  v2, v14, v14                        // 0000000000CC: 0E041D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s32, v4                         // 0000000000D8: 0C000820
  v_mac_legacy_f32  v1, s45, v5                         // 0000000000DC: 0C020A2D
  v_mac_legacy_f32  v7, s48, v8                         // 0000000000E0: 0C0E1030
  v_mac_legacy_f32  v2, v15, v15                        // 0000000000E4: 0C041F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000E8: E0704000 04400C00
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x58         // 0000000000F0: C2840958
  v_mac_legacy_f32  v1, s44, v4                         // 0000000000F4: 0C02082C
  v_mac_legacy_f32  v2, v7, v7                          // 0000000000F8: 0C040F07
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 0000000000FC: E0704004 04400D00
  v_rsq_f32     v2, v2                                  // 000000000104: 7E045D02
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000108: E0704010 04400B00
  v_mov_b32     v3, 1.0                                 // 000000000110: 7E0602F2
  v_mul_legacy_f32  v4, v7, v2                          // 000000000114: 0E080507
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000118: E0704014 04400000
  v_mul_legacy_f32  v0, v15, v2                         // 000000000120: 0E00050F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000124: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v2                         // 00000000012C: 0E02050E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 000000000130: E070401C 04400300
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000138: E0704020 04400400
  s_waitcnt     lgkmcnt(0)                              // 000000000140: BF8C007F
  v_mov_b32     v2, s8                                  // 000000000144: 7E040208
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000148: E0704024 04400000
  v_mov_b32     v0, s9                                  // 000000000150: 7E000209
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000154: E0704028 04400100
  v_mov_b32     v1, s10                                 // 00000000015C: 7E02020A
  buffer_store_dword  v2, v0, s[0:3], s4 offset:48 glc slc // 000000000160: E0704030 04400200
  v_mov_b32     v2, s11                                 // 000000000168: 7E04020B
  buffer_store_dword  v0, v0, s[0:3], s4 offset:52 glc slc // 00000000016C: E0704034 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:56 glc slc // 000000000174: E0704038 04400100
  buffer_store_dword  v2, v0, s[0:3], s4 offset:60 glc slc // 00000000017C: E070403C 04400200
  s_endpgm                                              // 000000000184: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   54
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   87
//  CycleSimNWaves:             87
//  Code Size:                  392
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 17
//  num_alu                           : 49
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 14
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 54
// m_uSCCodeSize                     : 392
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 87
// m_uCycleSimNWaves                 : 87

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 17
// num_alu                           : 49
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 6
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 9
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 14
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[562], bundle is:[199] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_VSConstant.pdb
// Shader Semantic Hash      : 0xc20758ea24af94c0
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 340 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 18;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x20         // 00000000000C: C3020120
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x1c         // 000000000010: C28A011C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x18         // 000000000014: C28C0118
  s_buffer_load_dwordx8  s[28:35], s[0:3], 0x04         // 000000000018: C2CE0104
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x14         // 00000000001C: C2920114
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x0c         // 000000000020: C294010C
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000024: BF8C0070
  v_mul_legacy_f32  v0, s7, v7                          // 000000000028: 0E000E07
  v_mul_legacy_f32  v2, s11, v7                         // 00000000002C: 0E040E0B
  v_mul_legacy_f32  v3, s22, v10                        // 000000000030: 0E061416
  v_mac_legacy_f32  v0, s6, v6                          // 000000000034: 0C000C06
  v_mac_legacy_f32  v2, s10, v6                         // 000000000038: 0C040C0A
  v_mul_legacy_f32  v11, s15, v7                        // 00000000003C: 0E160E0F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000040: 0E1C0E13
  v_mul_legacy_f32  v15, s26, v10                       // 000000000044: 0E1E141A
  v_mac_legacy_f32  v3, s21, v9                         // 000000000048: 0C061215
  v_mac_legacy_f32  v0, s5, v5                          // 00000000004C: 0C000A05
  v_mac_legacy_f32  v2, s9, v5                          // 000000000050: 0C040A09
  v_mac_legacy_f32  v11, s14, v6                        // 000000000054: 0C160C0E
  v_mac_legacy_f32  v14, s18, v6                        // 000000000058: 0C1C0C12
  s_movk_i32    s5, 0x0050                              // 00000000005C: B0050050
  s_mov_b32     m0, 0x00010000                          // 000000000060: BEFC03FF 00010000
  v_mul_legacy_f32  v16, s31, v7                        // 000000000068: 0E200E1F
  v_mul_legacy_f32  v17, s35, v7                        // 00000000006C: 0E220E23
  v_mul_legacy_f32  v10, s38, v10                       // 000000000070: 0E141426
  v_mac_legacy_f32  v15, s25, v9                        // 000000000074: 0C1E1219
  v_mac_legacy_f32  v3, s20, v8                         // 000000000078: 0C061014
  v_mac_legacy_f32  v0, s4, v4                          // 00000000007C: 0C000804
  v_mac_legacy_f32  v2, s8, v4                          // 000000000080: 0C040808
  v_mac_legacy_f32  v11, s13, v5                        // 000000000084: 0C160A0D
  v_mac_legacy_f32  v14, s17, v5                        // 000000000088: 0C1C0A11
  v_mul_lo_i32  v1, v1, s5                              // 00000000008C: D2D60001 00000B01
  v_mac_legacy_f32  v16, s30, v6                        // 000000000094: 0C200C1E
  v_mac_legacy_f32  v17, s34, v6                        // 000000000098: 0C220C22
  v_mul_legacy_f32  v7, s43, v7                         // 00000000009C: 0E0E0E2B
  v_mac_legacy_f32  v10, s37, v9                        // 0000000000A0: 0C141225
  v_mac_legacy_f32  v15, s24, v8                        // 0000000000A4: 0C1E1018
  v_mul_legacy_f32  v9, v3, v3                          // 0000000000A8: 0E120703
  v_mac_legacy_f32  v11, s12, v4                        // 0000000000AC: 0C16080C
  v_mac_legacy_f32  v14, s16, v4                        // 0000000000B0: 0C1C0810
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 0000000000B4: D8381110 00020001
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x58           // 0000000000BC: C2800158
  v_mac_legacy_f32  v16, s29, v5                        // 0000000000C0: 0C200A1D
  v_mac_legacy_f32  v17, s33, v5                        // 0000000000C4: 0C220A21
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000C8: 0C0E0C2A
  v_mac_legacy_f32  v10, s36, v8                        // 0000000000CC: 0C141024
  v_mac_legacy_f32  v9, v15, v15                        // 0000000000D0: 0C121F0F
  ds_write2_b32  v1, v11, v14 offset0:18 offset1:19     // 0000000000D4: D8381312 000E0B01
  v_mac_legacy_f32  v16, s28, v4                        // 0000000000DC: 0C20081C
  v_mac_legacy_f32  v17, s32, v4                        // 0000000000E0: 0C220820
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000E4: 0C0E0A29
  v_mac_legacy_f32  v9, v10, v10                        // 0000000000E8: 0C12150A
  ds_write2_b32  v1, v12, v13 offset1:1                 // 0000000000EC: D8380100 000D0C01
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000F4: 0C0E0828
  v_rsq_f32     v0, v9                                  // 0000000000F8: 7E005D09
  ds_write2_b32  v1, v16, v17 offset0:4 offset1:5       // 0000000000FC: D8380504 00111001
  v_mov_b32     v2, 1.0                                 // 000000000104: 7E0402F2
  v_mul_legacy_f32  v4, v10, v0                         // 000000000108: 0E08010A
  v_mul_legacy_f32  v5, v15, v0                         // 00000000010C: 0E0A010F
  ds_write2_b32  v1, v7, v2 offset0:6 offset1:7         // 000000000110: D8380706 00020701
  v_mul_legacy_f32  v0, v3, v0                          // 000000000118: 0E000103
  ds_write2_b32  v1, v4, v5 offset0:8 offset1:9         // 00000000011C: D8380908 00050401
  ds_write_b32  v1, v0 offset:40                        // 000000000124: D8340028 00000001
  s_waitcnt     lgkmcnt(0)                              // 00000000012C: BF8C007F
  v_mov_b32     v0, s0                                  // 000000000130: 7E000200
  v_mov_b32     v2, s1                                  // 000000000134: 7E040201
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 000000000138: D8380D0C 00020001
  v_mov_b32     v0, s2                                  // 000000000140: 7E000202
  v_mov_b32     v2, s3                                  // 000000000144: 7E040203
  ds_write2_b32  v1, v0, v2 offset0:14 offset1:15       // 000000000148: D8380F0E 00020001
  s_endpgm                                              // 000000000150: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   18
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   93
//  CycleSimNWaves:             93
//  Code Size:                  340
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 10
//  num_alu                           : 50
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 18
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 340
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 93
// m_uCycleSimNWaves                 : 93

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 10
// num_alu                           : 50
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 6
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE PBREffect_VSConstant[] =
{
     68,  88,  66,  67,  97, 118, 
    197, 239, 179, 159,  31,  94, 
    186, 145, 114,  21, 247, 209, 
    192, 232,   1,   0,   0,   0, 
    181,  13,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  76,   1, 
      0,   0,  64,  13,   0,   0, 
     80,  13,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,  12,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      7,   8,   0,   0, 137,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  67,  79,  76,  79,  82, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    236,  11,   0,   0,  80,   0, 
      1,   0, 251,   2,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 160,   0,   0,   0, 
     80,   0,   1,   0, 155,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     25,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  17,   0,   0,   8, 
     34,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  17,   0, 
      0,   8,  66,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     54,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  54,   0,   0,   5, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      7,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,  32,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   6, 
    242,  32,  16,   0,   3,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   9,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  10,   0, 
      0,   0,  17,   0,   0,   8, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     11,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    194,   0,   0,   0,  23,   0, 
      1,   0,  32,  62,  23,   0, 
    120,   1, 237, 152, 205,  79, 
     19,  65,  24, 135, 103, 167, 
    203, 116, 187,  12, 195, 178, 
     44, 229, 171, 148, 130,  85, 
     81,   4, 141,  39, 227,  97, 
     80, 192, 120, 224, 128, 129, 
    198, 244,  80,  53,   5,  74, 
     36, 225, 163, 210, 198, 120, 
    170, 149,  24,  77,  12,  71, 
     18,  63,  78, 254,   7,  94, 
     61,   9,  41,  23,  15,  26, 
     60, 248,  39, 120, 242, 232, 
    137, 131, 137, 254, 222, 178, 
    171,  13, 200,  89,  99, 246, 
      9, 207, 188,  59,  59, 187, 
     51, 239, 206, 148, 203, 171, 
     59,  89, 157, 104, 199, 243, 
    207,  20, 247, 242, 207,  50, 
    203, 156, 177,  38, 234,   0, 
    147,  26,  80, 244, 168, 101, 
    236,  75,   7, 181, 140,  13, 
     81,  99,  64,  60, 235,  34, 
    140, 194,  52, 250,  87,  16, 
    105,  44, 240, 213, 203, 123, 
    227,  31,  63, 220,  31, 207, 
    224, 250,  28, 164, 105, 102, 
    125, 199,  32, 173, 115,  17, 
    182, 192,  96, 205,  70, 130, 
    245, 105, 169,  70, 162, 112, 
     24,  54,  98,  81,   3, 142, 
    204, 147, 167, 230, 207,  76, 
     66, 202, 255,  56,  40, 183, 
      0, 154, 151, 242,  36, 232, 
    123, 255,  53, 104, 143, 130, 
    115,  34, 232,  60,  26,  81, 
     48,   2, 137,  45, 255,  28, 
    131,  71,  62, 249, 253, 224, 
     44, 119, 224, 113, 252,   0, 
    193, 185,   4,   4, 125, 154, 
     95, 176, 233,  11, 194, 120, 
    154,  18, 124, 215,  17, 184, 
     33,  48,  40, 176, 121,  66, 
     64,  28, 156, 192,  65, 137, 
     24, 180,  97,  51, 148,  16, 
     27,  43, 144, 160, 104, 133, 
     14, 108, 131,  72,  70, 180, 
     67, 124, 147,  64, 126,  34, 
     14, 241, 123,  21,  93, 176, 
     27, 246, 192,  94, 152, 128, 
    125,  48,   9, 251,  15, 114, 
    193,  82, 117, 132, 113, 240, 
    133, 130, 227, 135,  10,  68, 
    132,  50, 252, 255, 161,  61, 
      8, 254,  31, 104,  47, 168, 
     31, 208, 120,  29,  18,  18, 
     18,  18,  18,  18,  18,  18, 
     18,  18,  18,  18,  18,  18, 
     18, 242, 183, 224,   3,  27, 
    239,  88, 164, 186, 243, 144, 
    109, 110,  39, 140, 141,  90, 
    151, 241, 184, 230,  25,  79, 
    106, 166, 241, 190,  38, 141, 
    205,  90, 202,  80, 187,  69, 
    140,   9, 143,  41, 219, 227, 
    170, 201, 101,  58, 107,  84, 
    107, 202,  51,  85, 204, 229, 
    218, 116, 152, 110, 113,  77, 
    109,  57,  92,  51,  67, 168, 
    118, 229, 170,  78, 229, 169, 
     94,  21,  87, 210,  49, 181, 
     17,  17, 186,  95,  57, 234, 
    132,  74, 168, 211,  42, 169, 
    134, 149,  82, 174, 116, 117, 
     92, 122, 186,  71, 198,  53, 
    111,  18,  58,  41,  29,  57, 
     40,  19, 242, 148,  76, 202, 
    179,  82, 201,  54, 219, 213, 
     29, 182, 167, 187, 237, 184, 
    142, 220,  18, 149,  62, 219, 
    145,   3, 118,  66, 158, 180, 
    147, 242, 140, 141, 105,  45, 
     87, 123, 150, 167, 187,  44, 
    188,  31,  53, 149,  17, 229, 
    138,  69, 153,  74,  88, 142, 
     76,  89,   9, 153, 182, 146, 
    114, 200,  82, 178, 202,  69, 
    229,  27, 183,  42, 244, 109, 
    140, 219,  21, 131, 203,  10, 
    231, 169,  74, 132,  15,  86, 
    246,  44, 182, 111, 169, 214, 
    104,  43, 103, 251, 178,  37, 
     98, 246,  35, 198, 236, 102, 
    243,  60,  34,  55, 152,  57, 
    134, 216,  36, 156,  54, 198, 
     30, 109, 215,  75, 118, 188, 
    254, 247, 139, 110,  42, 119, 
     29, 186, 231,  80, 115, 232, 
     94, 253, 218,  60, 168, 141, 
      5, 164, 226, 212,  50, 246, 
    189,  62,  49,  99, 105,  24, 
    131, 134,  95,  53, 236, 134, 
    166,  95,  89, 219, 217, 122, 
    147, 254, 154, 141, 214, 232, 
    154, 200, 250, 239,  94, 242, 
     99,  10,  74, 248, 155,  42, 
     53,  71, 168, 250, 207,  23, 
    253,  72, 185,  82, 125,  74, 
      5,  85,  92,  42,  90, 130, 
    215, 254, 248,  11,  63,  82, 
    109, 171,  25,  30, 206, 227, 
    173,  63, 126,  27,  82, 166, 
     19, 151, 115,  51, 133, 226, 
     90,  41, 151, 157,  91, 123, 
     48, 114,  53, 115, 125, 100, 
     54, 191,  82,  92,  46, 148, 
    114,  83,  75, 229,  82, 110, 
    114, 105, 189,  48,  95, 206, 
    102, 166, 114, 165, 245, 249, 
    220, 236, 221, 252,  66,  97, 
    189, 148, 155,  88,  91,  41, 
     46,  45,  23,  22, 234,  47, 
     77, 175,  22, 110, 140, 207, 
     92,  91,  92, 196, 131, 119, 
    110, 206,  78, 172, 173, 150, 
    202, 249, 213, 242, 104, 113, 
     97, 142, 253,   4, 242, 115, 
    122,  84,   0,   0,  53,  16, 
      0,   0, 208,   0,   0,   0, 
     23,   0,   1,   0,  16, 182, 
     23,   0, 120,   1, 237, 152, 
    203,  79,  83,  65,  20, 198, 
    167, 211, 233, 208, 219,  14, 
    211,  75,  41, 165,  64,  41, 
     69, 171, 169,  15, 176,  24, 
     98, 140, 113, 113,   5, 140, 
     36, 152, 160,  64, 180, 139, 
    250,  40, 180,  68,  18, 160, 
     13, 237, 194,  85, 125, 132, 
     68, 163, 198, 133,  33, 134, 
    255,  66,  87,  44, 165,  41, 
     11,  23,  38, 234, 159, 192, 
    210, 184, 116, 197,  78, 191, 
    211, 222,   2, 169, 178, 214, 
    152, 251,  75, 191,  57, 103, 
     30, 183, 243, 221, 153, 187, 
     58,  91, 221, 172,  78, 114, 
    247, 211,  10, 197,  47, 217, 
     23, 115, 203, 156,  49,  15, 
    117,   0, 210,  58, 197,  16, 
    181, 140, 101, 194, 212,  50, 
    150, 160, 198,   5,  97, 129, 
    137, 112,   1, 122, 142, 190, 
    133, 152, 132, 104, 158,  98, 
    244, 227, 203, 177, 173, 251, 
    175, 199, 114, 200,  71, 160, 
     14, 232, 182,  45,  90,  75, 
    125,  26,  15,  64, 173, 208, 
     92, 211,   7, 109, 117,  24, 
      9, 157, 129,  14,  99,  80, 
      3, 232,  57,  13, 237, 147, 
    165, 230, 207, 220, 132, 200, 
    255,  81,  52,  61,  55, 105, 
    250, 164, 247, 253, 215, 160, 
     51, 106, 222,  19,  65, 247, 
    113,  24,  58,  19,   1,  17, 
    123,  93, 212,  30, 156, 235, 
    164, 125, 175, 205, 187, 172, 
     66,  71, 241,  19,  52, 255, 
    135, 160, 124,  20,  34, 220, 
    144, 100, 211,  41, 233, 122, 
     22, 151, 124, 199, 148,  24, 
    144,  88,  32, 113, 145,  18, 
    151,  38, 219,  32,  47, 132, 
    203, 146,  62, 200,  15,  41, 
    168,  29, 130,  65, 137,   3, 
    150,  48,  33, 113, 232,  50, 
      8, 117,  66, 120,  39,   9, 
    191,  18,  30,  37, 190,  87, 
     25, 129, 122, 160,  94, 168, 
     15, 138,  66, 253,  80,  12, 
     26, 176, 191,  25,  65, 174, 
    208, 167,   6,  72,  87, 227, 
     77,  37, 111, 124, 209, 210, 
     77,  78, 255,  95, 232,  12, 
    112, 204, 251,  52,  78, 163, 
      1, 125,  34,  36,   7,   7, 
      7,   7,   7,   7,   7,   7, 
      7,   7,   7,   7,   7,   7, 
      7, 135, 191,   9,  31, 124, 
    250, 129, 185, 215, 171, 143, 
    216, 171, 237, 184,  33, 119, 
    138, 136,   1, 205, 180,  48, 
     62, 215, 162, 198, 155, 154, 
    114,  63, 174, 106, 197,  84, 
    167, 230,  58,  98, 108, 212, 
    218, 125,  76,   5,  21,  87, 
    221,  90, 104, 101, 188, 173, 
    133, 140, 205, 154, 242,  50, 
    213, 225, 227,  42, 172, 132, 
    234, 211,  82, 155,  94, 174, 
    186, 124,  66, 245,  42, 169, 
     66,  94, 161, 122, 124,  82, 
    209, 255,  15, 232, 176,  62, 
     25, 138, 234, 136,  87,  42, 
    203,  42, 238,  50, 102, 137, 
     24, 158,  58, 142, 253,  78, 
    135,  98, 250,  68,  48, 170, 
     38, 104, 220, 101, 137, 126, 
     95,  88,  29, 195, 190, 231, 
    176, 239, 249, 144, 214, 167, 
    130,  49, 149,  48, 163, 106, 
    146, 230, 185,  37, 162, 222, 
    176,  26, 132, 151,  97, 120, 
     25,   9, 106, 149,  52,  99, 
     74, 247,  11, 125, 157, 230, 
    221, 150, 136, 195, 211,  16, 
     60, 165,  76, 173,   2,   3, 
     66,  49,  26,  87, 150,  72, 
     27, 235, 181, 179, 240, 215, 
     22,  16,  74, 208,  88, 187, 
     37, 248,  29,  81,  49,  41, 
    247,  91, 226,   7, 151, 149, 
     54, 143,  87, 135, 168,  15, 
    127,   1,  15, 211,  17, 202, 
    225,  73, 123, 184, 142,  82, 
     78, 255,  79,  81,  88, 130, 
    222, 203, 203,  69,  37,  65, 
    125, 172,  55,  56, 171,  36, 
     41, 199, 122,  31, 231, 149, 
     20, 229, 240, 235, 199, 154, 
     81, 202, 177, 230,  34,  69, 
    204,  95, 166, 136,  57, 198, 
    158, 108, 215, 203, 132, 188, 
    254, 219, 167, 135,  74, 105, 
     45,  99,  17, 106,  90, 198, 
    168, 150, 216,  58,  86, 207, 
     69, 163,  22, 215, 100, 211, 
    174,  61, 150, 237,  72, 181, 
     99, 170, 229, 186, 234, 213, 
     68, 236,   7,   9, 187, 146, 
     87, 221, 120, 151, 248, 158, 
    110, 171,  81,  78, 124, 181, 
    159, 121, 111, 199,  56, 164, 
    160,   3, 168, 202, 252,  59, 
    123, 246, 250, 111, 118,  36, 
    175,  84,  35, 211, 141, 234, 
     97, 163,  88,  10,  34, 118, 
    125, 220, 180,  35, 213, 212, 
    252,  80, 171, 143, 148,  61, 
    127,  23,  34, 167, 227, 151, 
     50,  51, 249,  98, 161, 148, 
     73, 207,  23,  30,  14,  93, 
    153, 187,  54,  52, 155,  93, 
     41,  46, 231,  75, 153, 169, 
    165, 114,  41,  51, 177, 180, 
    150,  95,  40, 167, 231, 166, 
     50, 165, 181, 133, 204, 236, 
    131, 108,  46, 191,  86, 202, 
    140,  23,  86, 138,  75, 203, 
    249,  92, 253, 161, 233, 213, 
    252, 141, 177, 153, 171, 139, 
    139,  88, 120, 239, 214, 236, 
    120,  97, 181,  84, 206, 174, 
    150, 135, 139, 185, 121, 246, 
     11, 214, 106, 150,  94,   0, 
      0,   0,  53,  16,   0,   0, 
    201,   0,   0,   0,  23,   0, 
      1,   0,   0, 110,  23,   0, 
    120,   1, 237, 152, 207,  79, 
     19,  65,  20, 199, 223, 108, 
    183, 211, 101, 121,  76, 151, 
    101, 169, 128, 181,  20,  68, 
    131,  34, 196,  24,  15, 198, 
    147, 130, 198,  68,  15,  54, 
     64,  12, 135, 162,  41,  80, 
      2,   9,  63,  26, 202, 193, 
     19,  34, 137, 209,  16, 226, 
    193, 240,   7, 248,  31, 232, 
     95,  32, 164, 120, 240, 224, 
    175, 120,  48, 254,   9, 198, 
    163, 103,  19, 252,  62, 186, 
    139,   4,  53,  30,  53, 102, 
     63, 205, 247, 205, 188, 153, 
    217, 157, 183, 243, 166, 151, 
    183, 112, 132, 246, 120,  92, 
    208,  90, 218, 119, 165, 245, 
    209,  57, 139,  40,  41, 206, 
      1,  42, 129,  88, 162,  32, 
     35, 150, 168,  87, 140, 130, 
    176, 214,  71,  51,   0, 141, 
    194, 191, 132,  86, 230,  34, 
    189, 121, 189,  54,  56,  61, 
    253,  96,  16,  93, 234, 135, 
     90, 161, 241,  80, 178, 214, 
    133, 206,  65, 105,  72, 104, 
     16, 115,   0,  91,  12, 192, 
     54, 251, 200, 182,  18, 108, 
     31, 116,  16,  71,  12,  56, 
    252,  14,  42, 137, 249,  53, 
    215,  33, 137, 255, 119,  72, 
    108,  66, 244, 206,  40,  78, 
    249, 222, 127,  13,  57, 151, 
     40,  79, 130, 228, 227,  32, 
      6,  74,  64, 194,  75,  73, 
      4, 216,  95,  18, 230,  53, 
    202, 229,  54, 244,  59, 118, 
     65, 148, 151, 136, 200, 151, 
    247, 107, 186, 121,  86, 171, 
    135, 121, 109, 237, 120,  26, 
      3,  26, 147,  26,  23,  74, 
    110, 152,  78,  65,  72, 148, 
    198, 129, 106,  36,  95,  55, 
     66,  12,  53,  65,   8,  80, 
    227, 128, 181,   7,  53,  67, 
      8,  70, 183,  64, 248,  38, 
    141, 120,  53,  98, 212, 184, 
    175, 186,  13, 106, 135,  58, 
    160, 163,  80,  22,  58,   6, 
    229, 160, 206, 240, 238, 218, 
    245, 136, 228, 158,   8,  90, 
    213, 191,  84,  91, 245, 155, 
    164,  19,  18, 233, 255, 139, 
    156,  65, 244, 127,  16, 234, 
    167,  81, 207, 119, 116,  69, 
     10,  98,  98,  98,  98,  98, 
     98,  98,  98,  98,  98,  98, 
     98,  98,  98,  98,  98,  98, 
    254,  18,  86, 215, 218,  11, 
     74, 172, 110, 223, 163, 141, 
    173, 188, 178, 118, 178, 106, 
    189, 214, 166,  54, 106, 182, 
    122,  91,  11, 212, 147,  26, 
    171, 205,  90,   5, 115,  41, 
     67, 166, 209, 216,  38,  19, 
    104, 163, 153, 216, 101, 155, 
    211,  38,  99,  90,  76, 214, 
    116,   4,  57, 211, 234, 107, 
     78, 186, 196,  13, 174, 205, 
    134,  51, 236, 115, 150,  11, 
    148, 124, 190, 155, 248, 246, 
     66, 170,  33, 157,  38, 111, 
    142, 155, 110, 115,  50,   8, 
     76, 187, 159, 227, 192, 211, 
    108,  59, 196, 142,  99, 115, 
    147, 155, 225, 102,  55, 203, 
    138,  62, 126,  80, 141,  68, 
     57, 206, 115,  55, 126, 125, 
    198, 152,  19, 126, 192, 109, 
     94, 142,  19,  41, 223, 176, 
    147,  97, 207, 201, 178, 215, 
    124, 225, 147,  34, 139, 198, 
    212, 106, 237, 152, 155, 231, 
     46, 183, 155,  79,  99, 215, 
     30,  47, 224, 116, 167, 207, 
    126,  11, 230,  27,  13, 101, 
    157,  60, 231, 157, 110,  62, 
    229,  26, 118,  91, 125,  38, 
    133, 113, 110, 162,  94, 199, 
    112, 195,  56, 173, 216,  73, 
    248,  94,  51, 125, 181, 236, 
     21,  87,  57,  38, 173,  92, 
    163,  83,  24,  75,  89, 148, 
     80, 100, 156,   6, 244, 237, 
     36, 245, 210, 121, 236,  71, 
     36, 103, 132, 109,  87,  20, 
    214, 115,  19, 230, 224,  88, 
    240,  19, 240,  77, 186, 238, 
     19, 221, 223, 218,  43, 249, 
    161,  43,  94,  68, 187, 188, 
    224, 208, 152,  39, 230, 208, 
    216,  94, 223, 150, 197,  63, 
     40, 132,  53, 195,  51,  97, 
    219,   3,  73, 157,  84, 133, 
     85, 198, 118, 200,  14,  43, 
    112, 219, 155, 207, 122, 190, 
    140, 165, 106, 210,  23,  30, 
    133, 207, 204, 132, 109,  30, 
     98, 232,  79,  60,  15, 215, 
     63,  13,  91, 137,  85, 106, 
     91, 166,  94, 245, 171,  23, 
     57, 193, 251, 112, 254,  85, 
    216,  74,  45,  12,  41, 252, 
     41, 142, 207, 225, 252, 109, 
     72,  34,  29, 186,  88,  28, 
     46,  87,  22, 171, 197, 177, 
    137, 197, 187, 253, 151,  71, 
    175, 245, 143, 148, 230,  43, 
    115, 229, 106, 241, 198, 236, 
    114, 181, 120, 101, 118, 169, 
     60, 185,  60,  54, 122, 163, 
     88,  93, 154,  44, 142, 204, 
    148, 166, 202,  75, 213, 226, 
    208, 226, 124, 101, 118, 174, 
     60, 181, 247, 208, 205, 133, 
    114,  97, 112, 248, 234, 244, 
     52,  22, 222, 185,  53,  50, 
    180, 184,  80,  93,  46,  45, 
     44,  15,  84, 166,  38, 232, 
     59, 160, 114, 126, 108,   0, 
      0,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 192, 148, 
    175,  36, 234,  88,   7, 194, 
     88,  80,  68,  80,  93,   0, 
      0,   0,  67,  58,  92,  82, 
    101, 112, 111, 115,  92,  88, 
     98, 111, 120,  45,  65,  84, 
     71,  45,  83,  97, 109, 112, 
    108, 101, 115,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  80, 
     66,  82,  69, 102, 102, 101, 
     99, 116,  95,  86,  83,  67, 
    111, 110, 115, 116,  97, 110, 
    116,  46, 112, 100,  98
};
