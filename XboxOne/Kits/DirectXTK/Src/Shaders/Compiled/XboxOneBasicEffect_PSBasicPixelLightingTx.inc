#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[418]
// Embedded Data:
//  0x000001a2 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000019d - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 4
add r0.xyz, -v1.xyzx, cb0[12].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r1.xyz, r0.xyzx, r0.wwww, -cb0[3].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v2.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
mad r3.xyz, r0.xyzx, r0.wwww, -cb0[4].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, -cb0[5].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r1.y, r3.xyzx, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r1.z, r0.xyzx, r2.xyzx
max r0.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.x, -cb0[3].xyzx, r2.xyzx
dp3 r1.y, -cb0[4].xyzx, r2.xyzx
dp3 r1.z, -cb0[5].xyzx, r2.xyzx
ge r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r0.xyz, r0.xyzx, r2.xyzx
mul r2.xyz, r1.xyzx, r2.xyzx
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[2].wwww
exp r0.xyz, r0.xyzx
mul r0.xyz, r1.xyzx, r0.xyzx
mul r1.xyz, r0.yyyy, cb0[10].xyzx
mad r0.xyw, r0.xxxx, cb0[9].xyxz, r1.xyxz
mad r0.xyz, r0.zzzz, cb0[11].xyzx, r0.xywx
mul r0.xyz, r0.xyzx, cb0[2].xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v0.xyxx, t0.xyzw, s0
mul r1.xyzw, r1.xyzw, v3.xyzw
mul r0.xyz, r0.xyzx, r1.wwww
mul r3.xyz, r2.yyyy, cb0[7].xyzx
mad r2.xyw, r2.xxxx, cb0[6].xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, cb0[8].xyzx, r2.xywx
mad r2.xyz, r2.xyzx, cb0[0].xyzx, cb0[1].xyzx
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
mad r1.xyz, cb0[13].xyzx, r1.wwww, -r0.xyzx
mad o0.xyz, v1.wwww, r1.xyzx, r0.xyzx
mov o0.w, r1.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[418], bundle is:[316] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_PSBasicPixelLightingTx.pdb
// Shader Semantic Hash      : 0x8265fd99cce955e5
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask 15, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 3, channelMask 15, param3, paramSlot3, DefaultVal={0,0,0,0}

codeLenInByte        = 880 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 3;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER 0, offset 0x8:11 dwords
;  extUserElements 1[2] = IMM_CONST_BUFFER 0, offset 0xc:15 dwords
NumVgprs             = 23;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x35C, dwords=0xD7)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v6, off, off, off done vm         // 000000000008: F8001801 00000006
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v6, v11, off, off done vm         // 000000000008: F8001803 00000B06
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v6, v5, off, off done vm          // 000000000008: F8001803 00000506
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v6, v11                      // 000000000000: 5E001706
  v_cvt_pkrtz_f16_f32  v1, v7, v5                       // 000000000004: 5E020B07
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v6, v11                     // 000000000000: 5C001706
  v_cvt_pknorm_u16_f32  v1, v7, v5                      // 000000000004: 5C020B07
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v6, v11                     // 000000000000: 5A001706
  v_cvt_pknorm_i16_f32  v1, v7, v5                      // 000000000004: 5A020B07
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v6, v11                         // 000000000000: 60001706
  v_cvt_pk_u16_u32  v1, v7, v5                          // 000000000004: 60020B07
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v6, v11                         // 000000000000: 62001706
  v_cvt_pk_i16_i32  v1, v7, v5                          // 000000000004: 62020B07
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v6, v11, v7, v5 done vm           // 000000000008: F800180F 05070B06
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[26:27], exec                          // 000000000000: BE9A047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 000000000008: C0C20100
  s_load_dwordx4  s[12:15], s[0:1], 0x08                // 00000000000C: C0860108
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000014: C8080000
  v_interp_p1_f32  v3, v0, attr0.y                      // 000000000018: C80C0100
  v_interp_p2_f32  v2, v1, attr0.x                      // 00000000001C: C8090001
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000020: C80D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[12:15] dmask:0xf // 000000000028: F0800F00 00610202
  s_load_dwordx4  s[0:3], s[0:1], 0x0c                  // 000000000030: C080010C
  s_waitcnt     lgkmcnt(0)                              // 000000000034: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x30           // 000000000038: C2820130
  v_interp_p1_f32  v6, v0, attr1.z                      // 00000000003C: C8180600
  v_interp_p1_f32  v7, v0, attr1.y                      // 000000000040: C81C0500
  v_interp_p2_f32  v6, v1, attr1.z                      // 000000000044: C8190601
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x10          // 000000000048: C2840110
  v_interp_p1_f32  v8, v0, attr1.x                      // 00000000004C: C8200400
  v_interp_p2_f32  v7, v1, attr1.y                      // 000000000050: C81D0501
  s_waitcnt     lgkmcnt(0)                              // 000000000054: BF8C007F
  v_sub_f32     v6, s6, v6                              // 000000000058: 080C0C06
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x0c         // 00000000005C: C286010C
  v_interp_p2_f32  v8, v1, attr1.x                      // 000000000060: C8210401
  v_sub_f32     v7, s5, v7                              // 000000000064: 080E0E05
  v_mul_legacy_f32  v9, v6, v6                          // 000000000068: 0E120D06
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x14         // 00000000006C: C2880114
  v_sub_f32     v8, s4, v8                              // 000000000070: 08101004
  v_mac_f32     v9, v7, v7                              // 000000000074: 3E120F07
  v_mac_f32     v9, v8, v8                              // 000000000078: 3E121108
  v_rsq_f32     v9, v9                                  // 00000000007C: 7E125D09
  v_interp_p1_f32  v10, v0, attr2.z                     // 000000000080: C8280A00
  v_interp_p1_f32  v11, v0, attr2.y                     // 000000000084: C82C0900
  v_interp_p2_f32  v10, v1, attr2.z                     // 000000000088: C8290A01
  v_mad_legacy_f32  v12, v6, v9, -s10                   // 00000000008C: D280000C 802A1306
  s_waitcnt     lgkmcnt(0)                              // 000000000094: BF8C007F
  v_mad_legacy_f32  v13, v6, v9, -s14                   // 000000000098: D280000D 803A1306
  v_interp_p1_f32  v14, v0, attr2.x                     // 0000000000A0: C8380800
  v_interp_p2_f32  v11, v1, attr2.y                     // 0000000000A4: C82D0901
  v_mul_legacy_f32  v15, v10, v10                       // 0000000000A8: 0E1E150A
  v_mad_legacy_f32  v16, v7, v9, -s9                    // 0000000000AC: D2800010 80261307
  v_mul_legacy_f32  v17, v12, v12                       // 0000000000B4: 0E22190C
  v_mad_legacy_f32  v18, v7, v9, -s13                   // 0000000000B8: D2800012 80361307
  v_mul_legacy_f32  v19, v13, v13                       // 0000000000C0: 0E261B0D
  v_interp_p2_f32  v14, v1, attr2.x                     // 0000000000C4: C8390801
  v_mac_f32     v15, v11, v11                           // 0000000000C8: 3E1E170B
  v_mad_legacy_f32  v20, v8, v9, -s8                    // 0000000000CC: D2800014 80221308
  v_mad_legacy_f32  v6, v6, v9, -s18                    // 0000000000D4: D2800006 804A1306
  v_mac_f32     v17, v16, v16                           // 0000000000DC: 3E222110
  v_mad_legacy_f32  v21, v8, v9, -s12                   // 0000000000E0: D2800015 80321308
  v_mac_f32     v19, v18, v18                           // 0000000000E8: 3E262512
  v_mac_f32     v15, v14, v14                           // 0000000000EC: 3E1E1D0E
  v_mad_legacy_f32  v7, v7, v9, -s17                    // 0000000000F0: D2800007 80461307
  v_mac_f32     v17, v20, v20                           // 0000000000F8: 3E222914
  v_mul_legacy_f32  v22, v6, v6                         // 0000000000FC: 0E2C0D06
  v_mac_f32     v19, v21, v21                           // 000000000100: 3E262B15
  v_rsq_f32     v15, v15                                // 000000000104: 7E1E5D0F
  v_mad_legacy_f32  v8, v8, v9, -s16                    // 000000000108: D2800008 80421308
  v_rsq_f32     v9, v17                                 // 000000000110: 7E125D11
  v_mac_f32     v22, v7, v7                             // 000000000114: 3E2C0F07
  v_rsq_f32     v17, v19                                // 000000000118: 7E225D13
  v_mul_legacy_f32  v10, v10, v15                       // 00000000011C: 0E141F0A
  v_mul_legacy_f32  v12, v12, v9                        // 000000000120: 0E18130C
  v_mac_f32     v22, v8, v8                             // 000000000124: 3E2C1108
  v_mul_legacy_f32  v13, v13, v17                       // 000000000128: 0E1A230D
  v_mul_legacy_f32  v11, v11, v15                       // 00000000012C: 0E161F0B
  v_mul_legacy_f32  v16, v16, v9                        // 000000000130: 0E201310
  v_mul_legacy_f32  v12, v10, v12                       // 000000000134: 0E18190A
  v_rsq_f32     v19, v22                                // 000000000138: 7E265D16
  v_mul_legacy_f32  v22, v10, -s10                      // 00000000013C: D20E0016 4000150A
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x08           // 000000000144: C2820108
  v_mul_legacy_f32  v18, v18, v17                       // 000000000148: 0E242312
  v_mul_legacy_f32  v14, v14, v15                       // 00000000014C: 0E1C1F0E
  v_mul_legacy_f32  v13, v13, v10                       // 000000000150: 0E1A150D
  v_mul_legacy_f32  v9, v20, v9                         // 000000000154: 0E121314
  v_mac_f32     v12, v16, v11                           // 000000000158: 3E181710
  v_mul_legacy_f32  v6, v6, v19                         // 00000000015C: 0E0C2706
  v_mul_legacy_f32  v15, -s14, v10                      // 000000000160: D20E000F 2002140E
  v_mad_legacy_f32  v22, -s9, v11, v22                  // 000000000168: D2800016 245A1609
  v_mul_legacy_f32  v16, v21, v17                       // 000000000170: 0E202315
  v_mac_f32     v13, v18, v11                           // 000000000174: 3E1A1712
  v_mac_f32     v12, v9, v14                            // 000000000178: 3E181D09
  v_mul_legacy_f32  v7, v7, v19                         // 00000000017C: 0E0E2707
  v_mul_legacy_f32  v6, v10, v6                         // 000000000180: 0E0C0D0A
  v_mad_legacy_f32  v15, -s13, v11, v15                 // 000000000184: D280000F 243E160D
  v_mad_legacy_f32  v22, -s8, v14, v22                  // 00000000018C: D2800016 245A1C08
  v_mul_legacy_f32  v9, v10, -s18                       // 000000000194: D20E0009 4000250A
  v_mac_f32     v13, v16, v14                           // 00000000019C: 3E1A1D10
  v_mul_legacy_f32  v8, v8, v19                         // 0000000001A0: 0E102708
  v_mac_f32     v6, v7, v11                             // 0000000001A4: 3E0C1707
  v_max_legacy_f32  v7, 0, v12                          // 0000000001A8: 1C0E1880
  v_mad_legacy_f32  v15, -s12, v14, v15                 // 0000000001AC: D280000F 243E1C0C
  v_mad_legacy_f32  v9, -s17, v11, v9                   // 0000000001B4: D2800009 24261611
  v_cmp_ge_f32  s[8:9], v22, 0                          // 0000000001BC: D00C0008 00010116
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x28         // 0000000001C4: C2860128
  v_mac_f32     v6, v8, v14                             // 0000000001C8: 3E0C1D08
  v_max_legacy_f32  v8, 0, v13                          // 0000000001CC: 1C101A80
  v_mad_legacy_f32  v9, -s16, v14, v9                   // 0000000001D0: D2800009 24261C10
  v_cmp_ge_f32  s[10:11], v15, 0                        // 0000000001D8: D00C000A 0001010F
  v_cndmask_b32  v7, 0, v7, s[8:9]                      // 0000000001E0: D2000007 00220E80
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x1c         // 0000000001E8: C288011C
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x24         // 0000000001EC: C28A0124
  v_max_legacy_f32  v6, 0, v6                           // 0000000001F0: 1C0C0C80
  v_cmp_ge_f32  s[24:25], v9, 0                         // 0000000001F4: D00C0018 00010109
  v_cndmask_b32  v8, 0, v8, s[10:11]                    // 0000000001FC: D2000008 002A1080
  v_log_f32     v7, v7                                  // 000000000204: 7E0E4F07
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x18         // 000000000208: C28E0118
  s_buffer_load_dwordx4  s[32:35], s[0:3], 0x2c         // 00000000020C: C290012C
  v_cndmask_b32  v6, 0, v6, s[24:25]                    // 000000000210: D2000006 00620C80
  v_log_f32     v8, v8                                  // 000000000218: 7E104F08
  s_waitcnt     lgkmcnt(0)                              // 00000000021C: BF8C007F
  v_mul_legacy_f32  v7, s7, v7                          // 000000000220: 0E0E0E07
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x04         // 000000000224: C2920104
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x20         // 000000000228: C2940120
  v_log_f32     v6, v6                                  // 00000000022C: 7E0C4F06
  v_mul_legacy_f32  v8, s7, v8                          // 000000000230: 0E101007
  v_exp_f32     v7, v7                                  // 000000000234: 7E0E4B07
  s_buffer_load_dwordx4  s[44:47], s[0:3], 0x00         // 000000000238: C2960100
  v_mul_legacy_f32  v6, s7, v6                          // 00000000023C: 0E0C0C07
  v_exp_f32     v8, v8                                  // 000000000240: 7E104B08
  v_mul_legacy_f32  v7, v22, v7                         // 000000000244: 0E0E0F16
  v_cndmask_b32  v10, 0, v22, s[8:9]                    // 000000000248: D200000A 00222C80
  v_exp_f32     v6, v6                                  // 000000000250: 7E0C4B06
  v_mul_legacy_f32  v8, v15, v8                         // 000000000254: 0E10110F
  v_mul_legacy_f32  v11, s12, v7                        // 000000000258: 0E160E0C
  v_mul_legacy_f32  v12, s13, v7                        // 00000000025C: 0E180E0D
  v_mul_legacy_f32  v7, s14, v7                         // 000000000260: 0E0E0E0E
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x34           // 000000000264: C2800134
  v_cndmask_b32  v13, 0, v15, s[10:11]                  // 000000000268: D200000D 002A1E80
  v_mul_legacy_f32  v6, v9, v6                          // 000000000270: 0E0C0D09
  v_mac_f32     v11, s20, v8                            // 000000000274: 3E161014
  v_mac_f32     v12, s21, v8                            // 000000000278: 3E181015
  v_mac_f32     v7, s22, v8                             // 00000000027C: 3E0E1016
  v_interp_p1_f32  v8, v0, attr3.w                      // 000000000280: C8200F00
  v_mul_legacy_f32  v14, s16, v10                       // 000000000284: 0E1C1410
  v_mul_legacy_f32  v15, s17, v10                       // 000000000288: 0E1E1411
  v_mul_legacy_f32  v10, s18, v10                       // 00000000028C: 0E141412
  v_cndmask_b32  v9, 0, v9, s[24:25]                    // 000000000290: D2000009 00621280
  v_mac_f32     v11, s32, v6                            // 000000000298: 3E160C20
  v_mac_f32     v12, s33, v6                            // 00000000029C: 3E180C21
  v_mac_f32     v7, s34, v6                             // 0000000002A0: 3E0E0C22
  v_interp_p1_f32  v6, v0, attr3.x                      // 0000000002A4: C8180C00
  v_interp_p1_f32  v16, v0, attr3.y                     // 0000000002A8: C8400D00
  v_interp_p1_f32  v17, v0, attr3.z                     // 0000000002AC: C8440E00
  v_interp_p2_f32  v8, v1, attr3.w                      // 0000000002B0: C8210F01
  v_mac_f32     v14, s28, v13                           // 0000000002B4: 3E1C1A1C
  v_mac_f32     v15, s29, v13                           // 0000000002B8: 3E1E1A1D
  v_mac_f32     v10, s30, v13                           // 0000000002BC: 3E141A1E
  v_mul_legacy_f32  v11, s4, v11                        // 0000000002C0: 0E161604
  v_mul_legacy_f32  v12, s5, v12                        // 0000000002C4: 0E181805
  v_mul_legacy_f32  v7, s6, v7                          // 0000000002C8: 0E0E0E06
  v_interp_p2_f32  v6, v1, attr3.x                      // 0000000002CC: C8190C01
  v_interp_p2_f32  v16, v1, attr3.y                     // 0000000002D0: C8410D01
  v_interp_p2_f32  v17, v1, attr3.z                     // 0000000002D4: C8450E01
  s_waitcnt     vmcnt(0)                                // 0000000002D8: BF8C0F70
  v_mul_legacy_f32  v5, v5, v8                          // 0000000002DC: 0E0A1105
  s_waitcnt     lgkmcnt(0)                              // 0000000002E0: BF8C007F
  v_mac_f32     v14, s40, v9                            // 0000000002E4: 3E1C1228
  v_mac_f32     v15, s41, v9                            // 0000000002E8: 3E1E1229
  v_mac_f32     v10, s42, v9                            // 0000000002EC: 3E14122A
  v_mov_b32     v8, s36                                 // 0000000002F0: 7E100224
  v_mov_b32     v9, s37                                 // 0000000002F4: 7E120225
  v_mov_b32     v13, s38                                // 0000000002F8: 7E1A0226
  v_mul_legacy_f32  v2, v2, v6                          // 0000000002FC: 0E040D02
  v_mul_legacy_f32  v3, v3, v16                         // 000000000300: 0E062103
  v_mul_legacy_f32  v4, v4, v17                         // 000000000304: 0E082304
  v_mul_legacy_f32  v6, v11, v5                         // 000000000308: 0E0C0B0B
  v_mul_legacy_f32  v11, v12, v5                        // 00000000030C: 0E160B0C
  v_mul_legacy_f32  v7, v7, v5                          // 000000000310: 0E0E0B07
  v_mac_f32     v8, s44, v14                            // 000000000314: 3E101C2C
  v_mac_f32     v9, s45, v15                            // 000000000318: 3E121E2D
  v_mac_f32     v13, s46, v10                           // 00000000031C: 3E1A142E
  v_mac_f32     v6, v2, v8                              // 000000000320: 3E0C1102
  v_mac_f32     v11, v3, v9                             // 000000000324: 3E161303
  v_mac_f32     v7, v4, v13                             // 000000000328: 3E0E1B04
  v_interp_p1_f32  v0, v0, attr1.w                      // 00000000032C: C8000700
  v_mad_legacy_f32  v2, s0, v5, -v6                     // 000000000330: D2800002 841A0A00
  v_mad_legacy_f32  v3, s1, v5, -v11                    // 000000000338: D2800003 842E0A01
  v_mad_legacy_f32  v4, s2, v5, -v7                     // 000000000340: D2800004 841E0A02
  v_interp_p2_f32  v0, v1, attr1.w                      // 000000000348: C8010701
  v_mac_f32     v6, v0, v2                              // 00000000034C: 3E0C0500
  v_mac_f32     v11, v0, v3                             // 000000000350: 3E160700
  v_mac_f32     v7, v0, v4                              // 000000000354: 3E0E0900
  s_mov_b64     exec, s[26:27]                          // 000000000358: BEFE041A
  v_cvt_pkrtz_f16_f32  v0, v6, v11                      // 00000000035C: 5E001706
  v_cvt_pkrtz_f16_f32  v1, v7, v5                       // 000000000360: 5E020B07
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000364: F8001C0F 00000100
  s_endpgm                                              // 00000000036C: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   23
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   192
//  CycleSimNWaves:             192
//  Code Size:                  880
//Assembler Counts:
//  num_32bit_ops                     : 156
//  num_64bit_ops                     : 32
//  num_alu                           : 157
//  num_fc                            : 29
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 1
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 8
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 14
//  num_inst_vop2                     : 87
//  num_inst_vop3                     : 12
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 26
//  constant_literal_operands         : 0
//  num_tex                           : 2
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 23
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 880
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 192
// m_uCycleSimNWaves                 : 192

// Assembler Counts:
// num_32bit_ops                     : 156
// num_64bit_ops                     : 32
// num_alu                           : 157
// num_fc                            : 29
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 1
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 8
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 14
// num_inst_vop2                     : 87
// num_inst_vop3                     : 12
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 26
// num_inst_smem                     : 17
// constant_literal_operands         : 0
// num_tex                           : 2
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_PSBasicPixelLightingTx[] =
{
     68,  88,  66,  67,  66,  26, 
    252, 157,  65, 145, 253, 134, 
     43,  34, 165,  47, 186, 151, 
    240,  66,   1,   0,   0,   0, 
    243,  12,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0, 112,  12,   0,   0, 
    128,  12,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 128,  11,   0,   0, 
     80,   0,   0,   0, 224,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 162,   1, 
      0,   0,  80,   0,   0,   0, 
    157,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0,  98,  16, 
      0,   3, 114,  16,  16,   0, 
      2,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   4,   0,   0,   0, 
      0,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  12,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  70,  18,  16,   0, 
      2,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   3,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  16,   0, 
      0,   7,  34,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   0,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     16,   0,   0,   7,  66,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  52,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  16,   0,   0,   9, 
     34,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  16,   0,   0,   9, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  29,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     47,   0,   0,   5, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0, 246, 143, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  25,   0, 
      0,   5, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   8, 114,   0,  16,   0, 
      1,   0,   0,   0,  86,   5, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  10,   0,   0,   0, 
     50,   0,   0,  10, 178,   0, 
     16,   0,   0,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0,  70, 136,  32,   0, 
      0,   0,   0,   0,   9,   0, 
      0,   0,  70,   8,  16,   0, 
      1,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0, 166,  10, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  11,   0,   0,   0, 
     70,   3,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  16,  16,   0,   0,   0, 
      0,   0,  70, 126,  16,   0, 
      0,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 242,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      3,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   3,   0, 
      0,   0,  86,   5,  16,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      7,   0,   0,   0,  50,   0, 
      0,  10, 178,   0,  16,   0, 
      2,   0,   0,   0,   6,   0, 
     16,   0,   2,   0,   0,   0, 
     70, 136,  32,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
     70,   8,  16,   0,   3,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0, 166,  10,  16,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  70,   3, 
     16,   0,   2,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  13,   0, 
      0,   0, 246,  15,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,  32,  16,   0, 
      0,   0,   0,   0, 246,  31, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0,  62,   1,   0,   0, 
     23,   0,   1,   0,  41, 192, 
     18,   0, 120,   1, 237,  88, 
     77, 108,  27,  69,  20, 126, 
    179, 118, 118, 215, 246, 248, 
    121, 189,  94, 111,  54, 238, 
    218, 113,  28, 215,  73, 131, 
     19, 161,  10,  33, 168, 196, 
    144, 254, 129,  68, 144,  82, 
    209,  34, 170, 200,  41,  77, 
     90, 183, 181, 148, 182,  81, 
    147,  67,  79, 203,  82,  69, 
     21,  66,  21, 170,  80, 133, 
      0, 193, 141,  99, 111,  92, 
     81,  18, 249, 180, 135,  30, 
    144,  47,  32, 206,  80, 137, 
     19,  28,  56, 112, 128, 194, 
    123,  91, 187, 164, 133, 222, 
     34, 129,  80,  62, 233, 155, 
    183, 223, 188,  55, 227,  55, 
     51, 187, 146, 223, 108, 219, 
     16, 227, 219, 159, 246, 125, 
    199, 246, 254, 177,  47, 239, 
    174, 235,   0,  67, 244,  44, 
    136, 108,  25,  31, 103, 185, 
      5,  56, 157, 231,  22, 160, 
    206,  13,   7, 104,   0, 195, 
    100,  14,  18,  87,  19,   0, 
    179, 100,  39, 137, 236, 103, 
    123, 225, 254,  75,  71, 169, 
    151,   8,  48,  67, 228, 216, 
    237,  62,  63,  35,  86, 137, 
    159,  19, 203,  68, 158, 142, 
     49, 176,  12, 147,  27,  66, 
    146, 155,  29,  64, 226,  91, 
     68,  73, 100, 148, 136, 253, 
    212,  56, 165, 199, 230, 128, 
     54,  55, 255, 140, 175, 136, 
    156, 211, 211, 192, 185,  13, 
    230,  98, 203, 121,  50, 120, 
    189, 255,  54,  30, 230, 245, 
     87, 203,  28, 156,  19, 131, 
    207,  99,  39, 120, 207,  56, 
    134,  97, 246,  55, 107,  16, 
    226, 247,  53, 239,   5, 175, 
    141, 207, 231, 105, 248, 131, 
     96, 241, 195,  14,  12,  52, 
    159, 147, 222, 159,  85,  23, 
    163, 241,   1, 234, 218,  68, 
     28, 160,  39,  94,   6, 240, 
    216, 243, 255, 198, 224,  93, 
    101, 203, 239,  34, 239,  77, 
    142,  56, 192, 192, 255,  13, 
     55,  16, 110,  49, 111, 123, 
    240,  43, 171, 129,  22, 164, 
    233,  51,  36,  60, 212,   9, 
    214, 153,  39,  52, 125, 156, 
    250,  48, 156,  49,  50, 218, 
    153, 156,  79, 227, 233, 112, 
     73, 183,  72, 183, 118, 232, 
      5, 210,  11,  59, 244,  89, 
    210, 103, 119, 232, 101, 210, 
    203,   3,  61, 152,  63,  23, 
    255, 158,  49, 196, 103,  77, 
    157, 193, 127, 153, 123,  57, 
    238,  14, 247, 114, 220,  29, 
    238, 229, 184,  59, 220, 203, 
    113, 119, 184, 151, 227, 238, 
    112,  47, 199, 221, 225,  94, 
    142, 187,  70,   8, 146, 159, 
    110,   6, 233,   7, 155,  32, 
    186, 219, 166, 184, 185, 173, 
     37, 126, 219, 164,  63, 221, 
     17,   8,  25,   9,  72,  69, 
     66, 100, 163, 119, 224, 214, 
     22, 228, 194, 159,  53, 109, 
      9, 164,   8, 183,  89,  63, 
     43, 110, 116,  65, 247,  34, 
     24, 242,  35, 161, 143,  68, 
    150, 216, 232,  66, 178,  26, 
    137, 161, 114,  28, 175,  75, 
    105,  74, 113, 179,  43, 146, 
     99, 209,  16, 162, 169, 103, 
    109, 116, 196, 123, 221, 164, 
    101, 153,  70, 206,  86, 102, 
    222,  86, 169,  69,  59, 128, 
    244, 100,   4, 169, 102,  36, 
    210,   7,  34,   9,  97,  79, 
     47,  76, 133,  60,  62,  27, 
     63,  31,  10, 193, 124,  33, 
     18, 169, 233,  40,  93, 172, 
    160,  69, 125,  70, 161,  17, 
    202, 145,  26, 218, 241, 243, 
    243,  97, 118,  95,   3, 133, 
    249,  98, 148,  25, 174,  40, 
    135, 250, 204,  66,  45, 212, 
    201, 234, 133, 215,  66, 107, 
    172, 166, 138, 113, 223, 193, 
    208, 222, 223,  80,  88, 174, 
     40, 131, 180,  81, 120,  37, 
    116,  14, 212, 148, 158, 109, 
     98, 241, 153, 134, 202,  45, 
     86,   2,  51, 142,  59,  18, 
    230,  41,  39,  35, 215,  84, 
    133, 197,  90, 144,  30, 117, 
     80,  22,  60,  52, 243,  77, 
    149,  29,  47,  97, 102, 212, 
     69, 171,  80, 197, 244, 136, 
    135, 238,  98,  35, 112,   1, 
    123, 233,  34, 204, 154, 180, 
     23, 246, 120,  29, 113, 212, 
    199, 108, 177, 132,  78, 193, 
     70, 107, 216,  83, 250, 132, 
    196,  28, 197, 160, 163,  85, 
     93, 154,  63, 229,  46, 212, 
    139, 227,  85, 180, 135,  75, 
     42,  85, 246, 148,  49, 129, 
    152, 206, 114,  76, 216, 203, 
    186, 170, 206,  49, 166, 191, 
     80,  79, 241, 188, 251,  97, 
    214,  42, 151, 148,  57,  97, 
    161,  49,  44,  85, 232, 161, 
    207, 113, 210,  87, 228,  15, 
    123, 121, 183,  81,  55,  65, 
    126, 237,  10,   1, 147, 180, 
    207, 102, 153,  98,  74, 150, 
    207,  62, 203, 111, 212, 211, 
    228, 203, 145, 207,   0, 232, 
    133,  88,   3, 159, 246, 190, 
     46, 222, 239, 134,  82, 250, 
     30, 249,  82, 228, 163, 210, 
    170,  23,  90,  83,  96, 204, 
     99, 224, 137,  15, 186,  77, 
    113, 187,  75,  53,  67,  47, 
    148, 203,  96, 206,  91,   1, 
    159, 131, 129, 136,  73, 241, 
     97, 183,  42, 238, 116, 245, 
    121,  25,  24,  22, 229,  51, 
    135,   1, 136, 143, 186, 134, 
    148, 104, 206,  89, 129, 155, 
    163, 117, 240, 184, 102,  13, 
    244,  57,  25, 228, 242,  22, 
     74, 116,  49, 139,  30, 141, 
     70, 124,  78, 132,  93,  42, 
     43, 123,  97, 101,  10,  82, 
    180,  94, 199, 114,  85, 209, 
    242, 148, 107, 161, 130,  92, 
     53, 178,  28,  31, 243,  78, 
      5, 109, 199, 193,  20, 199, 
    217, 203,  80, 149, 174,  26, 
    147, 158, 170,  73, 138, 145, 
    244, 158, 101, 103,  35, 192, 
     99, 145, 200, 141,  69, 126, 
    201,  87, 229,  82,  69,  85, 
     74, 142,  74, 186,  46,  14, 
    121,  30, 234, 244,  59,  66, 
    142,  68,  34, 123,  56,  18, 
    120,  60,  90, 205, 221, 218, 
     26, 202, 167, 145, 215,  48, 
    105, 251, 234, 128,  93,  81, 
     83, 182, 163, 234, 154,  21, 
    236, 215, 236, 160, 161, 149, 
      2,  45, 155, 196, 196, 152, 
    142, 201, 113,  19,  51,  25, 
    137,  50, 227, 162, 145,  65, 
    108, 250, 150, 154, 174, 216, 
    106, 198,  41,  41,  45,  47, 
     85, 162, 224, 170, 228,  62, 
    202, 195, 128,  72, 163, 253, 
    133, 116, 105,  35,  65,  86, 
    164, 103,  54, 146, 100, 181, 
    116, 101,  67,  24, 130, 190, 
      5,  73,  49, 174, 130,  20, 
    170,  82, 242, 193,  38, 213, 
     70, 143, 213,  86,   0, 239, 
    110, 141, 176, 229, 162, 238, 
     73, 152, 113, 192,  35, 196, 
     42,  25, 159, 209,  35, 196, 
    195, 168, 111, 112, 103, 193, 
    184, 211, 175, 187,  87, 251, 
    150, 239,  77, 104,  15, 105, 
    252, 195,  26, 154, 239,  53, 
    146,  84,  81,  51, 126, 120, 
    243, 199, 123, 159, 252, 222, 
    190, 193, 207, 140, 123, 253, 
     49, 119, 251, 150, 239,  82, 
    118, 206,  13, 240,   5,  55, 
    127, 195,  47, 253, 248, 239, 
    251, 150, 235,  83, 174,  73, 
    113, 112, 219, 195,  23,   5, 
      4, 167, 127,  55,  36, 251, 
    150, 215, 194,  37, 232, 147, 
    121,  52, 251, 254,  21,  34, 
    103, 122, 244,  80, 235, 141, 
    246, 234, 213, 181, 214, 233, 
    229, 171, 215, 167,  15, 159, 
    122, 117, 250, 228, 210, 229, 
    213, 149, 246,  90, 107, 174, 
    179, 190, 214,  58, 214, 185, 
    214,  62, 183, 126, 250, 212, 
     92, 107, 237, 218, 185, 214, 
    201,  75,  75, 231, 219, 215, 
    214,  90,  71, 175,  94,  94, 
    237, 172, 180, 207, 199, 131, 
    230, 175, 180, 143,  44, 173, 
    117, 206,  29, 191, 112, 129, 
     66, 223,  62, 113,  50,  86, 
     39,  58, 215, 219,  43, 175, 
    119,  46,  94,  90, 239,  92, 
    185, 120, 234, 250, 204, 234, 
    249, 101, 248,  19, 182, 182, 
    129, 118,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    229,  85, 233, 204, 153, 253, 
    101, 130,  88,  80,  68,  80, 
    107,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  66,  97, 115, 105,  99, 
     69, 102, 102, 101,  99, 116, 
     95,  80,  83,  66,  97, 115, 
    105,  99,  80, 105, 120, 101, 
    108,  76, 105, 103, 104, 116, 
    105, 110, 103,  84, 120,  46, 
    112, 100,  98
};
