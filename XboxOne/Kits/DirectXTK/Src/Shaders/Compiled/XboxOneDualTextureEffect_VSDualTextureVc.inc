#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     zw        2     NONE   float     zw
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[107]
// Embedded Data:
//  0x0000006b - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000066 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output_siv o3.xyzw, position
mul o0.xyzw, v3.xyzw, cb0[0].xyzw
dp4_sat o1.w, v0.xyzw, cb0[2].xyzw
mov o1.xyz, l(0,0,0,0)
mov o2.xy, v1.xyxx
mov o2.zw, v2.xxxy
dp4 o3.x, v0.xyzw, cb0[3].xyzw
dp4 o3.y, v0.xyzw, cb0[4].xyzw
dp4 o3.z, v0.xyzw, cb0[5].xyzw
dp4 o3.w, v0.xyzw, cb0[6].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[107], bundle is:[166] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTextureVc.pdb
// Shader Semantic Hash      : 0xaed42ef964973273
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 168 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x08         // 00000000000C: C3020108
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x18         // 000000000010: C28A0118
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s7, v7                          // 00000000001C: 0E000E07
  v_mul_legacy_f32  v1, s11, v7                         // 000000000020: 0E020E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000024: 0E040E0F
  v_mul_legacy_f32  v3, s19, v7                         // 000000000028: 0E060E13
  v_mul_legacy_f32  v7, s23, v7                         // 00000000002C: 0E0E0E17
  v_mac_f32     v0, s6, v6                              // 000000000030: 3E000C06
  v_mac_legacy_f32  v1, s10, v6                         // 000000000034: 0C020C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000038: 0C040C0E
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v7, s22, v6                         // 000000000040: 0C0E0C16
  v_mac_f32     v0, s5, v5                              // 000000000044: 3E000A05
  v_mac_legacy_f32  v1, s9, v5                          // 000000000048: 0C020A09
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v3, s17, v5                         // 000000000050: 0C060A11
  v_mac_legacy_f32  v7, s21, v5                         // 000000000054: 0C0E0A15
  v_mul_legacy_f32  v5, s0, v16                         // 000000000058: 0E0A2000
  v_mul_legacy_f32  v6, s1, v17                         // 00000000005C: 0E0C2201
  v_mul_legacy_f32  v10, s2, v18                        // 000000000060: 0E142402
  v_mul_legacy_f32  v11, s3, v19                        // 000000000064: 0E162603
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 000000000068: D2800800 04000904
  v_mac_legacy_f32  v1, s8, v4                          // 000000000070: 0C020808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000074: 0C04080C
  v_mac_legacy_f32  v3, s16, v4                         // 000000000078: 0C060810
  v_mac_legacy_f32  v7, s20, v4                         // 00000000007C: 0C0E0814
  v_mov_b32     v4, 0                                   // 000000000080: 7E080280
  exp           pos0, v1, v2, v3, v7 done               // 000000000084: F80008CF 07030201
  exp           param0, v5, v6, v10, v11                // 00000000008C: F800020F 0B0A0605
  exp           param1, v4, v4, v4, v0                  // 000000000094: F800021F 00040404
  exp           param2, v8, v9, v12, v13                // 00000000009C: F800022F 0D0C0908
  s_endpgm                                              // 0000000000A4: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  168
//Assembler Counts:
//  num_32bit_ops                     : 32
//  num_64bit_ops                     : 5
//  num_alu                           : 25
//  num_fc                            : 8
//  num_inst_exp                      : 4
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 23
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 4
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 168
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 32
// num_64bit_ops                     : 5
// num_alu                           : 25
// num_fc                            : 8
// num_inst_exp                      : 4
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 23
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 4
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[275], bundle is:[181] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTextureVc.pdb
// Shader Semantic Hash      : 0xaed42ef964973273
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 276 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 34;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x08       // 00000000000C: C3060908
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x18        // 000000000010: C28E0918
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000014: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000018: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 00000000001C: C080030C
  v_mac_legacy_f32  v0, s18, v6                         // 000000000020: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000024: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x00         // 000000000028: C2840900
  v_mac_legacy_f32  v0, s17, v5                         // 00000000002C: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 000000000030: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000034: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000038: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 00000000003C: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 000000000040: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000044: 0E060E1F
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  v_mac_legacy_f32  v3, s28, v4                         // 00000000005C: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000060: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000064: E0704030 04400000
  v_mul_legacy_f32  v0, s8, v16                         // 00000000006C: 0E002008
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 000000000070: E0704034 04400100
  v_mul_legacy_f32  v1, s9, v17                         // 000000000078: 0E022209
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 00000000007C: E0704038 04400200
  v_mul_legacy_f32  v2, s10, v18                        // 000000000084: 0E04240A
  buffer_store_dword  v3, v0, s[0:3], s4 offset:60 glc slc // 000000000088: E070403C 04400300
  v_mul_legacy_f32  v3, s11, v19                        // 000000000090: 0E06260B
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000094: E0704000 04400000
  v_mul_legacy_f32  v0, s15, v7                         // 00000000009C: 0E000E0F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 0000000000A0: E0704004 04400100
  v_mov_b32     v1, 0                                   // 0000000000A8: 7E020280
  v_mac_legacy_f32  v0, s14, v6                         // 0000000000AC: 0C000C0E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 0000000000B0: E0704008 04400200
  v_mac_legacy_f32  v0, s13, v5                         // 0000000000B8: 0C000A0D
  s_nop         0x0000                                  // 0000000000BC: BF800000
  buffer_store_dword  v3, v0, s[0:3], s4 offset:12 glc slc // 0000000000C0: E070400C 04400300
  v_mad_legacy_f32  v0, v4, s12, v0 clamp               // 0000000000C8: D2800800 04001904
  buffer_store_dword  v1, v0, s[0:3], s4 offset:16 glc slc // 0000000000D0: E0704010 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000D8: E0704014 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 0000000000E0: E0704018 04400100
  buffer_store_dword  v0, v0, s[0:3], s4 offset:28 glc slc // 0000000000E8: E070401C 04400000
  buffer_store_dword  v8, v0, s[0:3], s4 offset:32 glc slc // 0000000000F0: E0704020 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:36 glc slc // 0000000000F8: E0704024 04400900
  buffer_store_dword  v12, v0, s[0:3], s4 offset:40 glc slc // 000000000100: E0704028 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:44 glc slc // 000000000108: E070402C 04400D00
  s_endpgm                                              // 000000000110: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   34
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   84
//  CycleSimNWaves:             84
//  Code Size:                  276
//Assembler Counts:
//  num_32bit_ops                     : 35
//  num_64bit_ops                     : 17
//  num_alu                           : 25
//  num_fc                            : 11
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 16
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 23
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 16
//  num_vmem_group                    : 9
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 34
// m_uSCCodeSize                     : 276
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 84
// m_uCycleSimNWaves                 : 84

// Assembler Counts:
// num_32bit_ops                     : 35
// num_64bit_ops                     : 17
// num_alu                           : 25
// num_fc                            : 11
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 16
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 23
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 5
// constant_literal_operands         : 0
// num_tex                           : 16
// num_vmem_group                    : 9
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[458], bundle is:[174] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTextureVc.pdb
// Shader Semantic Hash      : 0xaed42ef964973273
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 212 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x00           // 00000000000C: C2820100
  s_buffer_load_dwordx16  s[8:23], s[0:3], 0x08         // 000000000010: C3040108
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x18           // 000000000014: C2800118
  s_mov_b32     m0, 0x00010000                          // 000000000018: BEFC03FF 00010000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s4, v16                         // 000000000024: 0E002004
  v_mul_legacy_f32  v2, s5, v17                         // 000000000028: 0E042205
  v_mul_legacy_f32  v3, s6, v18                         // 00000000002C: 0E062406
  v_mul_legacy_f32  v10, s7, v19                        // 000000000030: 0E142607
  v_mul_legacy_f32  v11, s11, v7                        // 000000000034: 0E160E0B
  v_mac_legacy_f32  v11, s10, v6                        // 000000000038: 0C160C0A
  v_mac_legacy_f32  v11, s9, v5                         // 00000000003C: 0C160A09
  v_mad_legacy_f32  v11, v4, s8, v11 clamp              // 000000000040: D280080B 042C1104
  v_mul_legacy_f32  v14, s15, v7                        // 000000000048: 0E1C0E0F
  v_mac_legacy_f32  v14, s14, v6                        // 00000000004C: 0C1C0C0E
  v_mac_legacy_f32  v14, s13, v5                        // 000000000050: 0C1C0A0D
  v_mac_legacy_f32  v14, s12, v4                        // 000000000054: 0C1C080C
  v_mul_legacy_f32  v15, s19, v7                        // 000000000058: 0E1E0E13
  v_mac_legacy_f32  v15, s18, v6                        // 00000000005C: 0C1E0C12
  v_mac_legacy_f32  v15, s17, v5                        // 000000000060: 0C1E0A11
  v_mac_legacy_f32  v15, s16, v4                        // 000000000064: 0C1E0810
  v_mul_legacy_f32  v16, s23, v7                        // 000000000068: 0E200E17
  v_mac_legacy_f32  v16, s22, v6                        // 00000000006C: 0C200C16
  v_mac_legacy_f32  v16, s21, v5                        // 000000000070: 0C200A15
  v_mac_legacy_f32  v16, s20, v4                        // 000000000074: 0C200814
  v_mul_legacy_f32  v7, s3, v7                          // 000000000078: 0E0E0E03
  v_mac_legacy_f32  v7, s2, v6                          // 00000000007C: 0C0E0C02
  v_mac_legacy_f32  v7, s1, v5                          // 000000000080: 0C0E0A01
  v_mac_legacy_f32  v7, s0, v4                          // 000000000084: 0C0E0800
  v_lshlrev_b32  v1, 6, v1                              // 000000000088: 34020286
  ds_write2_b32  v1, v14, v15 offset0:12 offset1:13     // 00000000008C: D8380D0C 000F0E01
  ds_write2_b32  v1, v16, v7 offset0:14 offset1:15      // 000000000094: D8380F0E 00071001
  ds_write2_b32  v1, v0, v2 offset1:1                   // 00000000009C: D8380100 00020001
  ds_write2_b32  v1, v3, v10 offset0:2 offset1:3        // 0000000000A4: D8380302 000A0301
  v_mov_b32     v0, 0                                   // 0000000000AC: 7E000280
  ds_write2_b32  v1, v0, v0 offset0:4 offset1:5         // 0000000000B0: D8380504 00000001
  ds_write2_b32  v1, v0, v11 offset0:6 offset1:7        // 0000000000B8: D8380706 000B0001
  ds_write2_b32  v1, v8, v9 offset0:8 offset1:9         // 0000000000C0: D8380908 00090801
  ds_write2_b32  v1, v12, v13 offset0:10 offset1:11     // 0000000000C8: D8380B0A 000D0C01
  s_endpgm                                              // 0000000000D0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   88
//  CycleSimNWaves:             88
//  Code Size:                  212
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 9
//  num_alu                           : 26
//  num_fc                            : 9
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 8
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 24
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 8
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 212
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 88
// m_uCycleSimNWaves                 : 88

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 9
// num_alu                           : 26
// num_fc                            : 9
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 8
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 24
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 8
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DualTextureEffect_VSDualTextureVc[] =
{
     68,  88,  66,  67, 183,  94, 
     66,  85, 116, 141, 139, 114, 
    198, 171,  72, 155, 152, 186, 
    226, 140,   1,   0,   0,   0, 
    214,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    192,   0,   0,   0, 100,   1, 
      0,   0,  84,  11,   0,   0, 
    100,  11,   0,   0,  73,  83, 
     71,  78, 132,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   3,   3, 
      0,   0, 116,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 125,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 134,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      3,  12,   0,   0, 134,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
     12,   3,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    232,   9,   0,   0,  80,   0, 
      1,   0, 122,   2,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 107,   0,   0,   0, 
     80,   0,   1,   0, 102,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      7,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 194,  32,  16,   0, 
      2,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      3,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,  32, 
      0,   8, 130,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
     50,  32,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 194,  32,  16,   0, 
      2,   0,   0,   0,   6,  20, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 168,   0, 
      0,   0,  23,   0,   1,   0, 
     32, 207,  22,   0, 120,   1, 
    237, 152,  61,  76,  20,  65, 
     20, 199, 223, 206, 205, 205, 
    237, 237,  13, 115,   7,  28, 
    199, 161,  32, 104, 208,  88, 
      8, 126,  52,  38, 198,  16, 
     17, 140,   5,   5, 137, 119, 
     33,  20, 155, 152, 131,  91, 
      2,  17, 228, 114,   7,   9, 
    149, 158, 218,  25,  99, 235, 
     71, 109,  97, 101,  97, 109, 
    132,  64, 171,  33,  49, 150, 
    246, 182,  22,  22, 152, 152, 
    232, 255,  45, 187, 122,  57, 
    164, 214, 196, 249, 101, 127, 
    243, 181,  59, 187, 111, 103, 
    166, 122, 187,   5,  10, 249, 
     60,  50, 112, 145, 235,  47, 
    125, 143,  95,  63, 117, 136, 
    146, 220,   1, 146,  11,  80, 
    203, 115,  73, 180, 216, 195, 
     37, 209, 105,  46, 240,  28, 
      9,  34, 190, 117,   4, 190, 
    132,  87,  32, 223, 139, 125, 
    255, 238, 251, 248, 243, 103, 
    137, 171, 103, 208,  46,  66, 
    126, 182,  20,  57,   4, 249, 
     59, 125, 208, 133, 241, 183, 
     90,  73, 112,   1, 248,  83, 
    173, 112, 191,  23, 182,  18, 
    207,  63, 240, 158,  10,  23, 
    127, 230,  36, 228, 152,  14, 
    131,  99, 139, 225, 247, 114, 
    156,  12, 255, 239, 191,   6, 
    175,  73, 188,  79,  12, 239, 
     71,  43,   6, 198, 235,  89, 
    140, 246, 145, 231,  48, 229, 
    168, 207, 211, 249, 223, 182, 
    224,  97, 252,   0, 237, 107, 
     28, 247, 185,  86,  52, 125, 
     78,  57,  15, 114,  74, 236, 
    228,  84,  34, 123,  94,  97, 
     80,  97, 163, 149, 130,  41, 
    136,  69,  84, 105, 232, 193, 
     12, 212, 176,   3,  34,  64, 
    149, 133,  57, 216,   9, 187, 
     96,  55,  68,  80,  10, 241, 
     41, 156,  85, 133,  77,  87, 
     56,  72,  10,  27, 163,  16, 
    168,  58,  10, 251, 225,   0, 
     60,   6,   7, 247, 255,  17, 
    159,  10,  81, 206, 254,  31, 
     42, 129, 131, 250,  31, 193, 
    107,  16, 159,  85, 222,  19, 
     54, 166, 181, 109, 177,  88, 
     44,  22, 139, 197,  98, 177, 
     88,  44,  22, 139, 197, 242, 
    183,  16, 199, 239, 191, 165, 
     68, 115, 235,  46,  61, 218, 
    116,  29, 177,  83, 116,  30, 
    110, 147, 211, 220, 174, 161, 
    159,  50, 100,  50,  70, 152, 
    172, 145, 166, 219,  40, 211, 
    107, 140,  81, 154, 198,  60, 
     45, 180, 209,  82, 119, 105, 
    165,  11, 104,  37,  61,  26, 
     75, 123,  66, 119, 120,  82, 
    119, 122,  74, 247, 120,  70, 
    211, 144, 103, 156,  19, 218, 
    136, 225, 188,  73, 156,  42, 
     24, 114, 155,  31, 100, 154, 
    164, 235,  10, 173,  93, 169, 
    115, 174, 210, 121, 215, 232, 
    166, 112, 239, 236, 186, 180, 
    231, 136,  68,  42,  43, 104, 
     47, 169, 188, 204,  32, 106, 
     41,  37, 157,  69, 237, 166, 
    117,   7, 209, 189, 205,  48, 
    109,  38, 194, 235,  23, 125, 
    156, 114, 106,  27, 203, 113, 
    209,  54,  22, 182, 229, 126, 
    126,  42, 230,  69, 248,  66, 
    162, 102,  84,  15, 195,  52, 
    116, 194, 140,  14,  81,  10, 
    202,  40, 187, 213, 184, 240, 
    164, 250, 109, 244, 227,  43, 
    110,  51, 159, 162,  57, 111, 
    162, 154, 243, 171,  26, 254, 
    166, 201, 197,   1, 100, 148, 
      3, 254,  26, 205, 227,  88, 
     57,  71, 100, 226,  44,  48, 
     39,  14, 193, 112, 244,  92, 
    127,  84, 115, 126,  41,   3, 
    219, 227, 184,  28, 221, 191, 
      5,  57, 210, 137,  75, 254, 
    141, 160, 182, 218, 240, 103, 
    231,  86,  55,  70, 198, 203, 
    215,  71,  74, 149, 149, 218, 
    114, 208, 240, 167, 150, 214, 
     26, 254, 228,  82,  61, 152, 
     95, 155,  45,  79, 249, 141, 
    250, 188,  95,  90, 172,  84, 
    131, 122, 195, 159,  88,  93, 
    169,  45,  45,   7, 213, 112, 
    210, 244, 237,  96, 114, 189, 
    178,  92,  14,  54, 214, 214, 
    235, 193, 181, 133,   5,  76, 
    184,  57,  83, 106,  25, 155, 
    153,  31, 173,  85, 231, 232, 
     39,  96,   3, 105, 168,   0, 
     53,  16,   0,   0, 183,   0, 
      0,   0,  23,   0,   1,   0, 
     16,  79,  23,   0, 120,   1, 
    237, 152, 191,  79,  83,  81, 
     20, 199,  79,  95, 175, 151, 
    215, 114, 185,  20,  40, 208, 
    242,  91, 108,  12, 131,  16, 
     52,  12, 198,  48,  60,   1, 
    227, 192,  64,  34,  13,  97, 
    120, 137,  41, 244,  17, 137, 
     32,  77,  91,  18,  38, 173, 
    218, 201,  24,  38,  19,  29, 
     28,  28, 156,  29, 156, 141, 
     16,  88, 117,  49, 252,   1, 
    142, 142, 174,  78, 250,  61, 
    175, 247,  53,  77, 197,  89, 
     99, 238,  39, 253, 222, 115, 
    238, 125, 231, 222, 158, 251, 
     99,  58,  43, 131,  20, 242, 
    226, 217, 155,  57, 182, 223, 
    179, 135, 239,  95, 197, 136, 
     46, 112,   7,  56, 220, 128, 
     82, 154,  91, 162, 111, 253, 
    220,  18,  77, 113, 131,  56, 
     14, 224,  79, 147,  80,  26, 
    125,  15, 150, 191,  69, 250, 
    252, 105, 102, 129, 104, 110, 
     97,   9, 254,  40, 148, 130, 
    242,  70, 151, 160,  30,  40, 
     11, 117,  66, 237, 112, 108, 
    148,   7, 255,  85,  43, 220, 
     55, 169,  55, 137,  98, 121, 
     94,   2, 106,  82, 224, 230, 
    124, 120, 211, 102, 107, 231, 
    194, 185, 241, 122,  17,  81, 
    158, 188, 223, 127,  13,  62, 
    147, 232, 158,  24, 190, 143, 
     86,  52,  36,  32, 166, 110, 
    238,  49,  10,  57,  51, 125, 
    158, 206, 123,  59, 134, 254, 
    196,  79,  16, 173, 195, 176, 
     31,  62,  30, 192, 190, 164, 
    149,  89,  25, 123, 154, 146, 
    206, 105,  74, 198, 187, 175, 
     74,  12,  74,  92, 142, 148, 
     80,   7, 228,  66, 184,  32, 
    153, 132, 112, 160,  82,  65, 
     93,  16,  18, 148, 221,  16, 
     14,  92, 226,  97, 200,  94, 
    168,  15,  66,  82,  18, 249, 
    201,   1,   8, 151,  46,  51, 
     16,  46,  70,  14,  65, 195, 
    208,   8, 132, 199,  37, 199, 
    160, 241,  70,  14,  20, 143, 
    115, 139,  92,  26, 200,  88, 
     99, 167, 210, 137,  94, 244, 
    255,  13, 159,   1, 142, 185, 
     73, 120,  38,   6, 126, 207, 
     44, 139, 197,  98, 177,  88, 
     44,  22, 139, 197,  98, 177, 
     88,  44, 150, 191, 137, 115, 
    241, 201,  71, 138, 215, 143, 
     31, 209, 243,  35,  55,  33, 
     79,  51, 137, 195, 147,  18, 
    252,  62,  77,  90, 197, 107, 
    199, 189, 138, 212, 160, 118, 
     52,  37, 234,  39,  61,  73, 
     82,   3, 202,  81, 195,  90, 
    232, 148,  75, 170,  63, 233, 
    168,  33,  37, 212, 184, 150, 
     58, 237,  58,  42, 155,  20, 
    106,  76,  73, 149, 113, 133, 
     26,  77,  74,  53, 226,  74, 
    197, 235, 206, 122, 165, 175, 
     68, 158, 112,  39,  72, 207, 
    177,  31, 243,  68,  98, 210, 
    209, 215, 217, 119,  60, 145, 
    204,   9,  61, 207, 126, 220, 
     19, 157, 151, 165,  38, 246, 
     17, 223, 141,  28,   4, 251, 
    136, 175,  57, 206,  67, 141, 
     92,  92, 238,  99,  78,  23, 
    114,  33, 170,  29,  41, 238, 
     99,  30, 185, 181,  47,  34, 
     75,  34, 197, 125, 196, 167, 
    141, 205,  24,  59, 194,  22, 
    107,  78, 176, 117,  61, 145, 
     99, 155, 240, 196,  20,  91, 
    229, 137,  43, 108, 187, 176, 
     14,  61,  62,  10,  75, 116, 
     78, 248, 107, 146, 229, 178, 
     86, 219,  88, 134, 155, 182, 
    177, 176, 222, 211,  54,  22, 
    250, 162,  81,  23, 139, 200, 
     13, 112,  11, 140, 205,  65, 
     92,  75, 141,  81, 163, 158, 
    214,   1,   9,  83,  85, 171, 
     92, 123,  89, 252,  49, 115, 
    246, 142, 125, 198,  55, 115, 
    230, 141, 157, 128, 112,  24, 
     45, 112, 117, 248, 119, 234, 
     38, 190, 106,  44, 231, 202, 
    245,  42,  29,  85, 116, 185, 
    112,   9, 222, 154, 239, 175, 
    141, 229, 250,  22, 215,  99, 
    219, 243, 248,  96, 190, 223, 
    135,  56, 211, 197,  27, 254, 
    157, 160, 180,  87, 241, 215, 
     55, 246,  14, 166, 111, 230, 
    111,  79, 175,  22, 118,  75, 
     59,  65, 197,  95, 222, 174, 
     86, 252, 165, 237, 114, 176, 
     89,  93, 207,  47, 251, 149, 
    242, 166, 191, 122, 175,  80, 
     12, 202,  21, 127, 113, 111, 
    183, 180, 189,  19,  20, 195, 
     73,  43,  15, 130, 165, 253, 
    194,  78,  62,  56, 168, 238, 
    151, 131,  91,  91,  91, 152, 
    112, 119, 109, 181, 101, 108, 
    109, 115, 166,  84, 220, 160, 
     95,  30,  65, 134, 179,   0, 
     53,  16,   0,   0, 176,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 251,  22,   0, 120,   1, 
    237, 152, 207,  79,  19,  65, 
     20, 199, 223, 254,  96, 186, 
    221,  78, 167, 229,  87,   1, 
    173, 117,  37, 104,  76,  20, 
    130, 226, 193, 112,  82, 192, 
    104, 194,   1,  35, 132, 112, 
    216, 196,  20, 186,   4,  34, 
     72, 211,  66, 194,  73,  43, 
     38, 158, 140,  39,  19,  61, 
    248,  39,  24,  15, 254,   1, 
     64, 224,  31,  48, 134, 131, 
    127, 130,  71, 175,  70,  19, 
    252, 190, 101,  86,  75, 131, 
    241, 168,  49, 243,  73, 191, 
    243, 118, 103, 246, 205, 188, 
    121,  51, 189, 188, 111,   5, 
    138,  25, 125, 163, 206, 179, 
    253, 210, 247, 226, 253, 107, 
    139, 168, 141,  95, 154, 168, 
    118, 113,  75, 244, 178, 155, 
     91, 162, 139, 220, 224,  59, 
    178, 137, 120, 232,  20, 116, 
      0, 221, 128, 120,  44,  17, 
     81, 199, 216, 200,  72, 207, 
     24,  63, 245,  66,  29, 208, 
    156,  86,  63, 148, 134, 216, 
    151,  45, 227, 113, 211, 132, 
    195,  13, 192,  50, 199, 224, 
    165, 121, 190, 102,  92, 110, 
     64, 235,  28,  84, 230, 230, 
    100,  46,  65, 122, 107,  39, 
    194, 177,  49, 201, 156,  73, 
    156,  73, 255, 191,   4, 231, 
     36,  57,  39, 134, 207, 163, 
     25,   5,  37, 249, 156, 208, 
    231, 200,  62,  76,  67, 191, 
    179,  59, 239, 109,  23, 250, 
     29, 135,  32, 201, 117,  66, 
    242, 206,  86, 208, 212, 176, 
    176, 158, 230, 133, 189, 159, 
     23,  78, 238, 138,  64, 167, 
    192, 133,  18,   2,  74,  65, 
     72, 166,  64,  34, 133,  15, 
    101,  32,   9, 101,  33,   4, 
     40, 114,  80,  30, 106, 135, 
    112,  89,  68,  39, 132, 160, 
      4, 226,  19, 184, 171, 162, 
      7, 194, 193, 139,  62,   8, 
    129, 138, 211,  80,  17,  58, 
      3, 149, 160, 179,  58,  22, 
    231, 104, 167,  88,  50,  70, 
     88,  71,  59,  21, 118, 235, 
     77, 250,  63, 225,  28,  36, 
    119, 150, 137, 115,   2,  56, 
     11,  72, 111,  12, 255,  87, 
     13,   6, 131, 193,  96,  48, 
     24,  12,   6, 131, 193,  96, 
     48,  24, 254,  22, 246, 185, 
    173, 109, 114,  26, 187, 143, 
    233, 249,  14,  89,  91, 123, 
    158, 229, 238, 247,  90, 141, 
    189,  67, 231, 251,  54,  87, 
     49, 170, 232, 119,   3,  82, 
    109, 253, 174,  18,   3,  66, 
    165,  46, 116, 169, 140,  42, 
     40,  95,  22, 100, 218,  47, 
    200, 140, 215, 248, 232, 182, 
     95, 118, 115, 170, 168, 148, 
     44, 202, 172,  95, 148, 210, 
     43, 202,  78,  85,  82,  29, 
    178,  36, 219, 253, 146, 204, 
    123,  37, 217, 163,   2,  85, 
    144, 129, 236, 246,   3, 217, 
    229,   5, 210,  81,  74, 217, 
     82,  73, 203,  87, 146,  60, 
     37, 159, 217, 246,  53, 153, 
    189, 254, 201,  82,  57,  82, 
     57, 216, 124,  10, 203, 195, 
    146,  77, 182,   3, 235, 248, 
    212, 176, 233, 145, 219, 198, 
    125,  68,  34, 197,  54,  67, 
     94,  26, 214,  75, 147, 159, 
    129, 149,  89, 140,  60, 217, 
    137,  75, 108, 118, 252, 251, 
     73,  31,  59, 181, 244, 197, 
    245, 153, 150, 190, 248, 217, 
    229, 143, 127, 241,  33, 158, 
    144, 232, 173, 182,   3,  16, 
    215,  39,  45,  93, 229,  67, 
    164, 228, 234,  10,  88, 253, 
    234, 171, 202, 215, 161, 131, 
    119, 252, 204, 120, 186, 238, 
    251,  89, 251,   6, 144, 132, 
    254, 196, 176, 246,  11, 180, 
    229,  88, 185, 182, 164, 146, 
    138,  49,  23,  25, 193,  93, 
     61, 126,  71,  91, 174,  69, 
    101, 160, 214,  56, 150, 244, 
    248,   3, 136,  35,  29,  31, 
     13, 239,  69, 213, 181, 122, 
     56,  55, 191, 182,  57, 120, 
    115, 230, 246, 224, 116, 121, 
    181, 186,  18, 213, 195, 201, 
    229, 245, 122,  56, 177,  92, 
    139,  22, 214, 231, 102,  38, 
    195, 122, 109,  33, 156,  94, 
     42,  87, 162,  90,  61,  28, 
     95,  91, 173,  46, 175,  68, 
    149, 216, 105, 234,  97,  52, 
    177,  81,  94, 153, 137,  54, 
    215,  55, 106, 209, 173, 197, 
     69,  56, 220, 159, 157, 110, 
    234, 155,  93,  24, 170,  86, 
    230, 233,   7,   7, 142, 111, 
      2,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 115,  50, 
    151, 100, 249,  46, 212, 174, 
     88,  80,  68,  80, 106,   0, 
      0,   0,  67,  58,  92,  82, 
    101, 112, 111, 115,  92,  88, 
     98, 111, 120,  45,  65,  84, 
     71,  45,  83,  97, 109, 112, 
    108, 101, 115,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  68, 
    117,  97, 108,  84, 101, 120, 
    116, 117, 114, 101,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  68, 117,  97, 108,  84, 
    101, 120, 116, 117, 114, 101, 
     86,  99,  46, 112, 100,  98
};
