#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[96]
// Embedded Data:
//  0x00000060 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x0000005b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
mul o0.xyzw, v2.xyzw, cb0[0].xyzw
dp4_sat o1.w, v0.xyzw, cb0[3].xyzw
mov o1.xyz, l(0,0,0,0)
mov o2.xy, v1.xyxx
dp4 o3.x, v0.xyzw, cb0[4].xyzw
dp4 o3.y, v0.xyzw, cb0[5].xyzw
dp4 o3.z, v0.xyzw, cb0[6].xyzw
dp4 o3.w, v0.xyzw, cb0[7].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[96], bundle is:[164] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneAlphaTestEffect_VSAlphaTestVc.pdb
// Shader Semantic Hash      : 0x9e2fd3de8ca7c898
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 172 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x0c         // 00000000000C: C302010C
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x1c         // 000000000010: C28A011C
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s7, v7                          // 00000000001C: 0E000E07
  v_mul_legacy_f32  v1, s11, v7                         // 000000000020: 0E020E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000024: 0E040E0F
  v_mul_legacy_f32  v3, s19, v7                         // 000000000028: 0E060E13
  v_mul_legacy_f32  v7, s23, v7                         // 00000000002C: 0E0E0E17
  v_mac_f32     v0, s6, v6                              // 000000000030: 3E000C06
  v_mac_legacy_f32  v1, s10, v6                         // 000000000034: 0C020C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000038: 0C040C0E
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v7, s22, v6                         // 000000000040: 0C0E0C16
  v_mac_f32     v0, s5, v5                              // 000000000044: 3E000A05
  v_mac_legacy_f32  v1, s9, v5                          // 000000000048: 0C020A09
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v3, s17, v5                         // 000000000050: 0C060A11
  v_mac_legacy_f32  v7, s21, v5                         // 000000000054: 0C0E0A15
  v_mul_legacy_f32  v5, s0, v12                         // 000000000058: 0E0A1800
  v_mul_legacy_f32  v6, s1, v13                         // 00000000005C: 0E0C1A01
  v_mul_legacy_f32  v10, s2, v14                        // 000000000060: 0E141C02
  v_mul_legacy_f32  v11, s3, v15                        // 000000000064: 0E161E03
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 000000000068: D2800800 04000904
  v_mac_legacy_f32  v1, s8, v4                          // 000000000070: 0C020808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000074: 0C04080C
  v_mac_legacy_f32  v3, s16, v4                         // 000000000078: 0C060810
  v_mac_legacy_f32  v7, s20, v4                         // 00000000007C: 0C0E0814
  v_mov_b32     v4, 0                                   // 000000000080: 7E080280
  v_mov_b32     v12, 1.0                                // 000000000084: 7E1802F2
  exp           pos0, v1, v2, v3, v7 done               // 000000000088: F80008CF 07030201
  exp           param0, v5, v6, v10, v11                // 000000000090: F800020F 0B0A0605
  exp           param1, v4, v4, v4, v0                  // 000000000098: F800021F 00040404
  exp           param2, v8, v9, v4, v12                 // 0000000000A0: F800022F 0C040908
  s_endpgm                                              // 0000000000A8: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  172
//Assembler Counts:
//  num_32bit_ops                     : 33
//  num_64bit_ops                     : 5
//  num_alu                           : 26
//  num_fc                            : 8
//  num_inst_exp                      : 4
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 23
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 4
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 172
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 33
// num_64bit_ops                     : 5
// num_alu                           : 26
// num_fc                            : 8
// num_inst_exp                      : 4
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 2
// num_inst_vop2                     : 23
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 4
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[262], bundle is:[177] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneAlphaTestEffect_VSAlphaTestVc.pdb
// Shader Semantic Hash      : 0x9e2fd3de8ca7c898
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 256 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 34;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x0c       // 00000000000C: C306090C
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x1c        // 000000000010: C28E091C
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000014: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000018: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 00000000001C: C080030C
  v_mac_legacy_f32  v0, s18, v6                         // 000000000020: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000024: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x00         // 000000000028: C2840900
  v_mac_legacy_f32  v0, s17, v5                         // 00000000002C: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 000000000030: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000034: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000038: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 00000000003C: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 000000000040: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000044: 0E060E1F
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  v_mac_legacy_f32  v3, s28, v4                         // 00000000005C: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000060: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000064: E0704030 04400000
  v_mul_legacy_f32  v0, s8, v12                         // 00000000006C: 0E001808
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 000000000070: E0704034 04400100
  v_mul_legacy_f32  v1, s9, v13                         // 000000000078: 0E021A09
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 00000000007C: E0704038 04400200
  v_mul_legacy_f32  v2, s10, v14                        // 000000000084: 0E041C0A
  buffer_store_dword  v3, v0, s[0:3], s4 offset:60 glc slc // 000000000088: E070403C 04400300
  v_mul_legacy_f32  v3, s11, v15                        // 000000000090: 0E061E0B
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000094: E0704000 04400000
  v_mul_legacy_f32  v0, s15, v7                         // 00000000009C: 0E000E0F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 0000000000A0: E0704004 04400100
  v_mov_b32     v1, 0                                   // 0000000000A8: 7E020280
  v_mac_legacy_f32  v0, s14, v6                         // 0000000000AC: 0C000C0E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 0000000000B0: E0704008 04400200
  v_mac_legacy_f32  v0, s13, v5                         // 0000000000B8: 0C000A0D
  buffer_store_dword  v3, v0, s[0:3], s4 offset:12 glc slc // 0000000000BC: E070400C 04400300
  v_mad_legacy_f32  v0, v4, s12, v0 clamp               // 0000000000C4: D2800800 04001904
  buffer_store_dword  v1, v0, s[0:3], s4 offset:16 glc slc // 0000000000CC: E0704010 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000D4: E0704014 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 0000000000DC: E0704018 04400100
  buffer_store_dword  v0, v0, s[0:3], s4 offset:28 glc slc // 0000000000E4: E070401C 04400000
  buffer_store_dword  v8, v0, s[0:3], s4 offset:32 glc slc // 0000000000EC: E0704020 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:36 glc slc // 0000000000F4: E0704024 04400900
  s_endpgm                                              // 0000000000FC: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   34
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  256
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 15
//  num_alu                           : 25
//  num_fc                            : 10
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 14
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 23
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 14
//  num_vmem_group                    : 9
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 34
// m_uSCCodeSize                     : 256
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 15
// num_alu                           : 25
// num_fc                            : 10
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 14
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 23
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 5
// constant_literal_operands         : 0
// num_tex                           : 14
// num_vmem_group                    : 9
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[441], bundle is:[172] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneAlphaTestEffect_VSAlphaTestVc.pdb
// Shader Semantic Hash      : 0x9e2fd3de8ca7c898
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 204 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x00           // 00000000000C: C2820100
  s_buffer_load_dwordx16  s[8:23], s[0:3], 0x0c         // 000000000010: C304010C
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x1c           // 000000000014: C280011C
  s_mov_b32     m0, 0x00010000                          // 000000000018: BEFC03FF 00010000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s4, v12                         // 000000000024: 0E001804
  v_mul_legacy_f32  v2, s5, v13                         // 000000000028: 0E041A05
  v_mul_legacy_f32  v3, s6, v14                         // 00000000002C: 0E061C06
  v_mul_legacy_f32  v10, s7, v15                        // 000000000030: 0E141E07
  v_mul_legacy_f32  v11, s11, v7                        // 000000000034: 0E160E0B
  v_mac_legacy_f32  v11, s10, v6                        // 000000000038: 0C160C0A
  v_mac_legacy_f32  v11, s9, v5                         // 00000000003C: 0C160A09
  v_mad_legacy_f32  v11, v4, s8, v11 clamp              // 000000000040: D280080B 042C1104
  v_mul_legacy_f32  v12, s15, v7                        // 000000000048: 0E180E0F
  v_mac_legacy_f32  v12, s14, v6                        // 00000000004C: 0C180C0E
  v_mac_legacy_f32  v12, s13, v5                        // 000000000050: 0C180A0D
  v_mac_legacy_f32  v12, s12, v4                        // 000000000054: 0C18080C
  v_mul_legacy_f32  v13, s19, v7                        // 000000000058: 0E1A0E13
  v_mac_legacy_f32  v13, s18, v6                        // 00000000005C: 0C1A0C12
  v_mac_legacy_f32  v13, s17, v5                        // 000000000060: 0C1A0A11
  v_mac_legacy_f32  v13, s16, v4                        // 000000000064: 0C1A0810
  v_mul_legacy_f32  v14, s23, v7                        // 000000000068: 0E1C0E17
  v_mac_legacy_f32  v14, s22, v6                        // 00000000006C: 0C1C0C16
  v_mac_legacy_f32  v14, s21, v5                        // 000000000070: 0C1C0A15
  v_mac_legacy_f32  v14, s20, v4                        // 000000000074: 0C1C0814
  v_mul_legacy_f32  v7, s3, v7                          // 000000000078: 0E0E0E03
  v_mac_legacy_f32  v7, s2, v6                          // 00000000007C: 0C0E0C02
  v_mac_legacy_f32  v7, s1, v5                          // 000000000080: 0C0E0A01
  v_mac_legacy_f32  v7, s0, v4                          // 000000000084: 0C0E0800
  v_lshlrev_b32  v1, 6, v1                              // 000000000088: 34020286
  ds_write2_b32  v1, v12, v13 offset0:12 offset1:13     // 00000000008C: D8380D0C 000D0C01
  ds_write2_b32  v1, v14, v7 offset0:14 offset1:15      // 000000000094: D8380F0E 00070E01
  ds_write2_b32  v1, v0, v2 offset1:1                   // 00000000009C: D8380100 00020001
  ds_write2_b32  v1, v3, v10 offset0:2 offset1:3        // 0000000000A4: D8380302 000A0301
  v_mov_b32     v0, 0                                   // 0000000000AC: 7E000280
  ds_write2_b32  v1, v0, v0 offset0:4 offset1:5         // 0000000000B0: D8380504 00000001
  ds_write2_b32  v1, v0, v11 offset0:6 offset1:7        // 0000000000B8: D8380706 000B0001
  ds_write2_b32  v1, v8, v9 offset0:8 offset1:9         // 0000000000C0: D8380908 00090801
  s_endpgm                                              // 0000000000C8: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   82
//  CycleSimNWaves:             82
//  Code Size:                  204
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 8
//  num_alu                           : 26
//  num_fc                            : 9
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 7
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 24
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 7
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 204
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 82
// m_uCycleSimNWaves                 : 82

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 8
// num_alu                           : 26
// num_fc                            : 9
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 7
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 24
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 7
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE AlphaTestEffect_VSAlphaTestVc[] =
{
     68,  88,  66,  67, 122,   0, 
    103, 135,  77, 205, 161,  26, 
     30, 181, 193, 109, 218, 151, 
     57,  35,   1,   0,   0,   0, 
     86,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  52,   1, 
      0,   0, 216,  10,   0,   0, 
    232,  10,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   3,   3, 
      0,   0, 101,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78, 132,   0, 
      0,   0,   4,   0,   0,   0, 
      8,   0,   0,   0, 104,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 104,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 110,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      3,  12,   0,   0, 119,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    156,   9,   0,   0,  80,   0, 
      1,   0, 103,   2,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  96,   0,   0,   0, 
     80,   0,   1,   0,  91,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      2,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      2,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,  32, 
      0,   8, 130,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
     50,  32,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0,  17,   0, 
      0,   8,  18,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     17,   0,   0,   8,  34,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,  17,   0,   0,   8, 
     66,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      6,   0,   0,   0,  17,   0, 
      0,   8, 130,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   7,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 166,   0,   0,   0, 
     23,   0,   1,   0,  32, 207, 
     22,   0, 120,   1, 237, 152, 
     61, 111,  19,  49,  24, 199, 
    159, 115,  92, 247, 114, 113, 
    221, 247,  87,  66,  95,  36, 
    132, 186, 148, 150, 149, 161, 
    234,  11, 136, 161,  67,  37, 
     18,  85,  29,  78,  66, 105, 
    115, 161, 149,  82, 122, 106, 
     58,  48, 149, 240, 178, 128, 
    250,   1, 128, 129,  21,   6, 
     62,   3, 173, 202, 194,  86, 
      9, 118, 196,   7,  96,  98, 
    234,   6, 255, 231, 114, 174, 
     78,  41, 157,  65, 194,  63, 
    229, 103, 251, 124, 103, 251, 
    137, 237, 233,  57,  29, 162, 
    132, 114,  88, 120, 193, 245, 
    143, 254,  82,  80, 247, 136, 
     58, 248,   1,  72,  46,  64, 
     60, 192,  37,  81, 125, 144, 
     75, 162, 105,  46, 240,  29, 
      9, 162,  30,  84,  99, 240, 
      3,  92, 128, 252, 206,  90, 
    171, 169, 165,  55, 175,  11, 
     75,  55, 209,  30, 129, 125, 
    176, 148,  58,   5, 121,  29, 
     30, 235,  67, 187,  86, 150, 
     28,  23, 128, 151, 202, 130, 
    101, 105,  24, 102, 177, 227, 
     47, 204,  83, 225, 226, 207, 
     92, 135,  28, 255, 101, 112, 
    108,  22, 158, 151, 227, 100, 
    178, 253, 255,  10, 188,  71, 
    246, 156,  24,  62, 143,  44, 
      6, 218, 253,  44, 166, 231, 
    104, 247, 117,  61, 125, 182, 
    103, 121,  12,  47, 227,  23, 
    104, 223,  99, 251, 204, 243, 
     43,  90, 157,  83, 222, 179, 
     30,  37,  78, 231,  20,  58, 
     20,  94,  42,  28, 180,  82, 
    176,  19,  98,  19,  85,  30, 
      6, 176,   0,  53, 236, 130, 
      8,  80, 117,  67,   4, 161, 
    122,  33,  46, 139, 234, 135, 
    248,  79,  10, 241,  41, 220, 
     85, 133,  67,  87, 184,  72, 
    106,  20,  34,  80, 117,   5, 
     22, 225,  85,  56,  14,  39, 
    108,  12,  45, 148, 215, 250, 
    135,  74, 240, 141, 249, 127, 
    224,  61, 176, 119, 149, 207, 
    134, 181, 100, 219,  14, 135, 
    195, 225, 112,  56,  28,  14, 
    135, 195, 225, 112,  56,  28, 
    127,  11,  49, 245, 244,  35, 
    229, 154, 199, 143, 233, 240, 
     72, 123, 226,  83, 209, 123, 
    121,  66,  94, 243,  36, 198, 
    115, 167,  33,  83,  48, 194, 
    116,  27, 105, 250, 141,  50, 
    195, 198,  24, 165, 105,  62, 
    208,  66,  27,  45, 117, 159, 
     86, 122,   8, 173, 142, 128, 
    230, 243, 129, 208,  93, 129, 
    212, 189, 129, 210, 131, 129, 
    209,  52,  18,  24, 111,  76, 
     27,  81,  28,  48, 185, 241, 
     33,  67, 126, 243, 139, 204, 
    147, 244, 125, 161, 181,  47, 
    117, 143, 175, 244, 128, 111, 
    116,  83, 248,   7,  63, 197, 
    200, 193, 169,  79, 103, 158, 
    200, 117, 118,  11,  58, 235, 
     80,  65,  97,   2, 181, 148, 
    146, 102,  81, 251, 121, 169, 
    137, 158,  28,  37, 169,  51, 
    145, 252, 206,  25, 229, 180, 
     83,  91,  31, 231, 214, 218, 
    251, 146, 182, 108, 229, 168, 
     44, 239, 147,   9, 137, 158, 
    167, 245,  53, 152, 135,  94, 
    146, 213, 105, 229, 117, 100, 
    154, 225, 122, 245, 249, 221, 
    225, 183, 175, 179, 111, 185, 
    205, 124,  79, 199,  28, 167, 
    245,  36,  68, 144,  25, 154, 
     92,  92, 192,  79, 243, 192, 
    103, 233,  56, 142, 149, 243, 
     68, 198, 102, 130,  57, 121, 
      8, 166, 211, 239,  38, 211, 
    154,  99,  41, 192, 246,  56, 
     22, 210, 247,  15,  32,  71, 
    186, 124,  43, 188,  23, 197, 
    187, 141, 112, 125,  99, 247, 
    209, 204,  98, 249, 238,  76, 
    169, 178,  19, 215, 163,  70, 
    184, 178, 189, 223,   8, 111, 
    111, 239,  69, 155, 251, 235, 
    229, 149, 176, 177, 183,  25, 
    150, 182,  42, 213, 104, 175, 
     17,  46, 239, 238, 196, 219, 
    245, 168, 154,  12,  90, 125, 
     24,  45, 214, 227, 173,  74, 
     57, 106, 236, 223, 169, 213, 
    240, 249, 253, 181, 210, 121, 
    207, 218, 230, 141, 184, 186, 
     65, 191,   1, 232,  26, 103, 
    228,   0,  53,  16,   0,   0, 
    179,   0,   0,   0,  23,   0, 
      1,   0,  16,  55,  23,   0, 
    120,   1, 237, 152, 191,  79, 
     20,  65,  20, 199, 223, 205, 
    141, 227, 222,  50,  12, 199, 
    239,  59,  56, 126, 104, 136, 
     82, 136,  98,  66, 162,  49, 
     22,  11, 104,  52, 161,  32, 
    241, 144,  88, 108, 162,   7, 
     44,  66, 114, 200, 134, 163, 
    176,  82,  84,  10,  11,  98, 
     44, 173, 108, 245,  95, 176, 
    145,  11,  54,  22,  26,  19, 
    181,  54, 254,   1, 252,  15, 
    250, 125, 203, 236,  73,  78, 
    169,  53, 102,  62, 185, 239, 
    123, 111, 102, 223, 236, 189, 
    153, 217, 234,  93, 232, 165, 
    132, 224, 205, 202, 105, 246, 
    251, 157, 101, 191, 154,  33, 
     58, 198,   3,  32, 216, 128, 
    184, 139,  45, 209, 215, 110, 
    182,  68, 163, 108, 144, 199, 
      9, 121, 184, 147,  16, 143, 
      3,  56, 126, 150, 234, 227, 
    135,  83,  83,  68, 103, 166, 
     96, 104,   0,  50, 208,  77, 
     43,  94, 211,   6,  21,  33, 
     31, 106, 134, 115,  37, 196, 
    240,  95,  29, 134, 199, 182, 
    244,   6, 105, 205, 188,  46, 
      7,  53, 168, 176, 249,  51, 
    231,  33, 174, 255,  40, 184, 
     54, 126,  95,  74,  90, 103, 
    178, 223, 127,  12,  62, 147, 
    244, 158,  18, 120, 226,  16, 
    188, 143, 244,  60,  99, 123, 
    143, 105,  74, 221, 142, 211, 
    187, 172,  67,  71, 241,   3, 
    164, 239,  97,  56, 158, 128, 
    152,  44, 164, 104, 118,  92, 
    101, 158, 228, 149, 248,  52, 
    174,  48, 161, 144, 160, 112, 
     57,  74,  65, 199,  33,  15, 
    194,   5,  41,  28, 166, 106, 
    129,  52, 212,  10, 161,  64, 
    133,  15,  66, 161,   8, 213, 
     14, 117,  64, 157,  16, 246, 
    164,  80, 159, 234, 129, 112, 
    233, 170,   0, 225,  98,  84, 
     31, 212,  15, 149,  32, 124, 
     92, 106,  16,  26, 178, 123, 
    204, 114,  37,  24, 179,   1, 
     42, 115, 176,  83,  37, 210, 
     47, 250, 255, 134, 207,   0, 
    199, 220,  32,  57,  19,  11, 
    223,  49, 203, 225, 112,  56, 
     28,  14, 135, 195, 225, 112, 
     56,  28,  14, 135, 227, 111, 
     34,  78,  60, 126,  75, 217, 
    237, 250,  67, 218, 217, 213, 
     57, 245, 174, 148, 123, 182, 
     23,  35, 238,  52, 100, 116, 
    118, 171, 222, 161,  73, 247, 
     26,  97,  40, 183, 189, 215, 
    238, 147, 238, 209,  66, 247, 
     27, 105, 242,  30, 233, 110, 
     95, 232,  62,  45, 245, 144, 
     81, 166, 203,  19, 186, 232, 
     75,  61, 168, 149,  46, 120, 
     82,  15, 248,  74, 151,  60, 
    165, 249, 189, 227,  65, 252, 
    157,  40, 144,  94, 129, 204, 
      4, 199, 153,  64, 230, 250, 
    132, 185, 200, 177,   8, 164, 
     95, 146, 230,  50, 199, 217, 
     64, 182,  12,  42,  67,  28, 
     35, 191,  13,  53,  72, 142, 
    145, 191,  37, 196,   3, 131, 
     90,  60,  30,  99,  77,  43, 
    106, 209,  28,  99,  13, 121, 
     91, 159, 101, 145, 100, 158, 
    199, 200, 237, 178, 190,  96, 
    125, 137,  61, 222,  55, 204, 
    222,  11, 228,   8, 251,  28, 
    214, 209, 163, 221, 164,  29, 
     39, 146,  95, 131,  34, 183, 
    176, 154, 230,  10, 108, 154, 
    230, 146, 222,  78, 211,  92, 
     18, 203, 131,  30,  88,  74, 
    190, 135,  45, 209, 126, 242, 
    103,  68,  35,  16, 247,  77, 
     51,  73,  23, 239, 160, 127, 
     36, 109,   7, 237, 197, 251, 
     87,  59, 223, 190, 156, 123, 
    201,  49, 115, 221, 174,  29, 
    181, 126,  24, 210, 208,  47, 
    184,  19, 252,  59, 177, 205, 
    191,  99,  61, 215, 202, 189, 
     41, 147, 118, 111, 185,  73, 
      9, 158, 219, 231,  79, 173, 
    231,  90,  90, 160, 230,  58, 
     94, 219, 231, 119,  33, 174, 
    116, 250,  82, 120,  35, 138, 
    215, 107, 225, 173, 133, 245, 
    251,  99, 147, 115, 215, 198, 
    202, 149, 181, 184,  26, 213, 
    194, 153, 213, 205,  90, 120, 
    101, 117,  35,  90, 220, 188, 
     53,  55,  19, 214,  54,  22, 
    195, 242,  74, 101,  41, 218, 
    168, 133, 211, 235, 107, 241, 
    106,  53,  90,  74,  22, 205, 
    222, 139,  38, 171, 241,  74, 
    101,  46, 170, 109,  94,  93, 
     94,  70, 250, 237, 249, 114, 
     99, 102, 126, 241, 108, 188, 
    180,  64,  63,   1, 127, 175, 
    126, 252,   0,   0,  53,  16, 
      0,   0, 174,   0,   0,   0, 
     23,   0,   1,   0,   0, 239, 
     22,   0, 120,   1, 237, 152, 
     59, 107,  20,  81,  20, 199, 
    207,  60, 114, 119,  50, 123, 
    247, 230, 177, 201, 102, 178, 
    142, 241, 129,  69,  16, 163, 
    129,  88, 136,  88, 228, 161, 
     40, 164,   8, 100,  67,  72, 
     49, 160, 155, 100,  98,   2, 
     27,  51, 236, 166,  72, 165, 
    107,   4, 171, 124,   0,  65, 
    176,  18, 252,  22,  73, 136, 
     77,  10,  65, 208, 198,  74, 
    252,   0, 130, 173, 133,  16, 
    255, 103, 188,  19, 215, 197, 
     96, 169, 200, 253, 177, 255, 
    115, 230, 190, 207, 156,  59, 
    219, 156,  47,  37,  74, 249, 
    250, 188,  94, 103, 255, 185, 
     88, 241, 107,  22,  81,   7, 
     55,  90,  72, 250, 216,  18, 
    237, 244, 179,  37,  26, 102, 
    131, 121, 100,  19, 117, 195, 
    149, 161,  55, 208,  56, 196, 
     99, 153, 136, 212, 228, 216, 
     88, 113, 146, 159,   2, 136, 
    231, 206, 106, 157, 135,  60, 
    136, 215, 118,  66,  76, 142, 
     77,  11,  14,  27, 128,  99, 
    126, 129, 143, 230, 253,  90, 
    113, 217, 128, 246,  61, 168, 
    202, 230, 247,  92, 132,  56, 
    166, 147, 224, 216, 152, 108, 
    207,  44, 206, 172, 255,  95, 
    130, 115, 146, 221,  19, 195, 
    247, 209, 138, 130, 178, 124, 
    222, 208, 247, 200, 107, 152, 
     45, 221, 230,  92, 240, 187, 
    237,  67,  39, 113,   4, 178, 
     92, 103, 100, 109, 222,  95, 
    208, 204, 168, 176, 158, 116, 
     11, 251, 237, 168,  64, 135, 
    192, 160, 192,   7,  37,   4, 
    132,  68,  10,  92, 186,  64, 
     34, 133,  15, 229,  33,   9, 
     21,  32,   4,  40, 186,  32, 
      4,  33, 122, 160,  94, 168, 
      8, 225, 157,   4, 226,  19, 
    248,  86, 197,   0, 132, 139, 
     23, 131,  16,   2,  21, 167, 
    160,  16,  58,  13,  13,  65, 
    103, 116,  44,  14,  71, 130, 
     54,  27,  32, 172,  31, 111, 
     42, 236, 246,  47, 233, 255, 
    132, 115, 192, 255, 173, 140, 
     52,  39, 128, 179, 192, 119, 
    204, 240, 127, 213,  96,  48, 
     24,  12,   6, 131, 193,  96, 
     48,  24,  12,   6, 131, 225, 
    111,  97, 159, 219, 222,  37, 
    167, 185, 255, 136, 118, 246, 
    200, 218,  62, 144, 150, 251, 
     58, 180, 154,   7,  71, 206, 
    183,  93, 174,  98,  36, 232, 
    119,   3,  82,  29, 101,  87, 
    137,  80, 168, 220,  80, 159, 
    202, 171, 146, 242, 101,  73, 
    118, 250,  37, 153, 247, 154, 
    239, 220, 158,  75, 110, 151, 
     10, 148, 146, 129,  44, 248, 
    129, 148,  94,  32, 139, 170, 
    172, 122, 101,  89, 246, 248, 
    101, 217, 237, 149, 229, 128, 
     10,  85,  73, 134, 178, 223, 
     15, 101, 159,  23,  74,  71, 
     41, 101,  75,  37,  45,  95, 
     73, 242, 148, 124, 106, 219, 
     87, 101, 225, 218,   7,  75, 
     22,  72, 117, 193, 171,  28, 
    142, 135,  39, 155, 108,   7, 
    222, 241, 169, 105, 211,  67, 
    183, 131, 251, 136,  68, 142, 
    125, 158, 188,  78, 120, 143, 
    171, 133, 143, 247, 210, 210, 
    154, 157, 254, 142,  25, 228, 
    201, 109, 125, 105,  93, 166, 
    173,  47, 125, 118, 121, 242, 
     79,  14, 211,  13, 137,  94, 
    106, 127,   1, 226, 147,  44, 
     93, 221, 227, 186, 143, 171, 
     43,  95, 207,  14,  95, 237, 
    124, 124, 127, 229,   5,  63, 
    167, 232, 122, 239,  39, 189, 
    246,  44,  36, 161,  63,  49, 
    172, 215,   5, 218, 115, 172, 
     92,  83,  82,  89, 165, 152, 
    139, 139, 224, 142,  30,  31, 
    215, 158,  99, 201,  67, 237, 
    113, 220, 211, 227, 247,  33, 
    142, 116, 234, 122,  52,  27, 
     39,  27, 141, 104,  97, 113, 
     99, 107, 100,  98, 238, 246, 
     72, 165, 186, 158, 212, 226, 
     70,  52, 189, 182, 217, 136, 
    110, 174, 213, 227, 165, 205, 
    133, 185, 233, 168,  81,  95, 
    138,  42, 171, 213, 229, 184, 
    222, 136, 166,  54, 214, 147, 
    181,  90, 188, 156,  46, 154, 
    121,  16,  79, 212, 146, 213, 
    234,  92, 220, 216, 188, 181, 
    178, 130, 233, 119, 231,  43, 
    199,  61, 243,  75, 151, 147, 
    229,  69, 250,  14,  33, 234, 
    108, 189,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    152, 200, 167, 140, 222, 211, 
     47, 158,  88,  80,  68,  80, 
    102,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  65, 108, 112, 104,  97, 
     84, 101, 115, 116,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  65, 108, 112, 104,  97, 
     84, 101, 115, 116,  86,  99, 
     46, 112, 100,  98
};
