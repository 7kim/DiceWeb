#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[197]
// Embedded Data:
//  0x000000c5 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000c0 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB2[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_temps 1
dp4 o0.x, v0.xyzw, cb2[4].xyzw
dp4 o0.y, v0.xyzw, cb2[5].xyzw
dp4 o0.z, v0.xyzw, cb2[6].xyzw
dp4 o0.w, v0.xyzw, cb2[7].xyzw
mul o1.xyzw, v3.xyzw, cb0[1].xyzw
mov r0.xy, v4.xyxx
mov r0.z, l(1.000000)
dp3 o2.x, r0.xyzx, cb2[16].xywx
dp3 o2.y, r0.xyzx, cb2[17].xywx
dp3 o3.x, v1.xyzx, cb2[0].xyzx
dp3 o3.y, v1.xyzx, cb2[1].xyzx
dp3 o3.z, v1.xyzx, cb2[2].xyzx
dp4 r0.x, v0.xyzw, cb2[0].xyzw
dp4 r0.y, v0.xyzw, cb2[1].xyzw
dp4 r0.z, v0.xyzw, cb2[2].xyzw
mov o4.xyz, r0.xyzx
add o5.xyz, -r0.xyzx, cb2[20].xyzx
mov o6.xyzw, v2.xyzw
mov o7.xyz, v1.xyzx
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[197], bundle is:[204] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_mainVc.pdb
// Shader Semantic Hash      : 0x1b73191bd80ca9a1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
;   [4] generic, usageIdx  4, channelMask  3, v[20:21]
; Output Semantic Mappings
;   [0] generic,  usageIdx 1, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 2, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 3, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 4, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 5, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 6, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 7, paramIdx 6, paramSlot 0

codeLenInByte        = 316 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 28;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x0000000C
SVOC:VS_EXPORT_COUNT        = 6
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[0:7], s[2:3], 0x00                  // 000000000004: C0C00300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx8  s[8:15], s[4:7], 0x00          // 00000000000C: C2C40500
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x08         // 000000000010: C2880508
  s_buffer_load_dwordx16  s[20:35], s[4:7], 0x10        // 000000000014: C30A0510
  s_buffer_load_dwordx8  s[36:43], s[4:7], 0x40         // 000000000018: C2D20540
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04           // 00000000001C: C2800104
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x50           // 000000000020: C2820550
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000024: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 000000000028: 0E000E0B
  v_mul_legacy_f32  v1, s15, v7                         // 00000000002C: 0E020E0F
  v_mul_legacy_f32  v2, s19, v7                         // 000000000030: 0E040E13
  v_mul_legacy_f32  v3, s23, v7                         // 000000000034: 0E060E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000038: 0E160E1B
  v_mul_legacy_f32  v22, s31, v7                        // 00000000003C: 0E2C0E1F
  v_mul_legacy_f32  v7, s35, v7                         // 000000000040: 0E0E0E23
  v_mac_f32     v0, s10, v6                             // 000000000044: 3E000C0A
  v_mac_f32     v1, s14, v6                             // 000000000048: 3E020C0E
  v_mac_f32     v2, s18, v6                             // 00000000004C: 3E040C12
  v_mac_legacy_f32  v3, s22, v6                         // 000000000050: 0C060C16
  v_mac_legacy_f32  v11, s26, v6                        // 000000000054: 0C160C1A
  v_mac_legacy_f32  v22, s30, v6                        // 000000000058: 0C2C0C1E
  v_mac_legacy_f32  v7, s34, v6                         // 00000000005C: 0C0E0C22
  v_mov_b32     v6, s39                                 // 000000000060: 7E0C0227
  v_mov_b32     v23, s43                                // 000000000064: 7E2E022B
  v_mul_legacy_f32  v24, s10, v10                       // 000000000068: 0E30140A
  v_mul_legacy_f32  v25, s14, v10                       // 00000000006C: 0E32140E
  v_mul_legacy_f32  v26, s18, v10                       // 000000000070: 0E341412
  v_mac_f32     v0, s9, v5                              // 000000000074: 3E000A09
  v_mac_f32     v1, s13, v5                             // 000000000078: 3E020A0D
  v_mac_f32     v2, s17, v5                             // 00000000007C: 3E040A11
  v_mac_legacy_f32  v3, s21, v5                         // 000000000080: 0C060A15
  v_mac_legacy_f32  v11, s25, v5                        // 000000000084: 0C160A19
  v_mac_legacy_f32  v22, s29, v5                        // 000000000088: 0C2C0A1D
  v_mac_legacy_f32  v7, s33, v5                         // 00000000008C: 0C0E0A21
  v_mac_f32     v6, s37, v21                            // 000000000090: 3E0C2A25
  v_mac_f32     v23, s41, v21                           // 000000000094: 3E2E2A29
  v_mac_f32     v24, s9, v9                             // 000000000098: 3E301209
  v_mac_f32     v25, s13, v9                            // 00000000009C: 3E32120D
  v_mac_f32     v26, s17, v9                            // 0000000000A0: 3E341211
  v_mac_f32     v0, s8, v4                              // 0000000000A4: 3E000808
  v_mac_f32     v1, s12, v4                             // 0000000000A8: 3E02080C
  v_mac_f32     v2, s16, v4                             // 0000000000AC: 3E040810
  v_mac_legacy_f32  v3, s20, v4                         // 0000000000B0: 0C060814
  v_mac_legacy_f32  v11, s24, v4                        // 0000000000B4: 0C160818
  v_mac_legacy_f32  v22, s28, v4                        // 0000000000B8: 0C2C081C
  v_mac_legacy_f32  v7, s32, v4                         // 0000000000BC: 0C0E0820
  v_mul_legacy_f32  v4, s0, v16                         // 0000000000C0: 0E082000
  v_mul_legacy_f32  v5, s1, v17                         // 0000000000C4: 0E0A2201
  v_mul_legacy_f32  v16, s2, v18                        // 0000000000C8: 0E202402
  v_mul_legacy_f32  v17, s3, v19                        // 0000000000CC: 0E222603
  v_mac_f32     v6, s36, v20                            // 0000000000D0: 3E0C2824
  v_mac_f32     v23, s40, v20                           // 0000000000D4: 3E2E2828
  v_mac_f32     v24, s8, v8                             // 0000000000D8: 3E301008
  v_mac_f32     v25, s12, v8                            // 0000000000DC: 3E32100C
  v_mac_f32     v26, s16, v8                            // 0000000000E0: 3E341010
  v_sub_f32     v18, s4, v0                             // 0000000000E4: 08240004
  v_sub_f32     v19, s5, v1                             // 0000000000E8: 08260205
  v_sub_f32     v20, s6, v2                             // 0000000000EC: 08280406
  v_mov_b32     v21, 0                                  // 0000000000F0: 7E2A0280
  v_mov_b32     v27, 1.0                                // 0000000000F4: 7E3602F2
  exp           pos0, v3, v11, v22, v7 done             // 0000000000F8: F80008CF 07160B03
  exp           param0, v4, v5, v16, v17                // 000000000100: F800020F 11100504
  exp           param1, v6, v23, v21, v27               // 000000000108: F800021F 1B151706
  exp           param2, v24, v25, v26, v27              // 000000000110: F800022F 1B1A1918
  exp           param3, v0, v1, v2, v27                 // 000000000118: F800023F 1B020100
  exp           param4, v18, v19, v20, v27              // 000000000120: F800024F 1B141312
  exp           param5, v12, v13, v14, v15              // 000000000128: F800025F 0F0E0D0C
  exp           param6, v8, v9, v10, v27                // 000000000130: F800026F 1B0A0908
  s_endpgm                                              // 000000000138: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   28
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   84
//  CycleSimNWaves:             84
//  Code Size:                  316
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 8
//  num_alu                           : 52
//  num_fc                            : 11
//  num_inst_exp                      : 8
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 4
//  num_inst_vop2                     : 48
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 8
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 28
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 316
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 84
// m_uCycleSimNWaves                 : 84

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 8
// num_alu                           : 52
// num_fc                            : 11
// num_inst_exp                      : 8
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 4
// num_inst_vop2                     : 48
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 8
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[403], bundle is:[219] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_mainVc.pdb
// Shader Semantic Hash      : 0x1b73191bd80ca9a1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
;   [4] generic, usageIdx  4, channelMask  3, v[20:21]
; Output Semantic Mappings
;   [0] position,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 4, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 6, paramIdx 6, paramSlot 0
;   [7] generic,  usageIdx 7, paramIdx 7, paramSlot 0

codeLenInByte        = 468 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 22;
NumSgprs             = 42;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 32
; esGsRingItemSize          = 32

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[8:15], s[2:3], 0x00                 // 000000000004: C0C40300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[16:31], s[12:15], 0x10      // 00000000000C: C3080D10
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000014: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x10                  // 000000000018: C0800310
  v_mac_legacy_f32  v0, s18, v6                         // 00000000001C: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000020: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x04         // 000000000024: C2840904
  v_mac_legacy_f32  v0, s17, v5                         // 000000000028: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 00000000002C: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000030: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000034: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 000000000038: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 00000000003C: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000040: 0E060E1F
  s_buffer_load_dwordx8  s[32:39], s[12:15], 0x40       // 000000000044: C2D00D40
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  s_buffer_load_dwordx8  s[16:23], s[12:15], 0x00       // 00000000005C: C2C80D00
  v_mac_legacy_f32  v3, s28, v4                         // 000000000060: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000068: E0704000 04400000
  v_mul_legacy_f32  v0, s8, v16                         // 000000000070: 0E002008
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 000000000074: E0704004 04400100
  s_buffer_load_dwordx4  s[24:27], s[12:15], 0x08       // 00000000007C: C28C0D08
  v_mul_legacy_f32  v1, s9, v17                         // 000000000080: 0E022209
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 000000000084: E0704008 04400200
  v_mul_legacy_f32  v2, s10, v18                        // 00000000008C: 0E04240A
  v_mov_b32     v11, s35                                // 000000000090: 7E160223
  buffer_store_dword  v3, v0, s[0:3], s4 offset:12 glc slc // 000000000094: E070400C 04400300
  v_mul_legacy_f32  v3, s11, v19                        // 00000000009C: 0E06260B
  v_mac_legacy_f32  v11, s33, v21                       // 0000000000A0: 0C162A21
  v_mov_b32     v16, s39                                // 0000000000A4: 7E200227
  buffer_store_dword  v0, v0, s[0:3], s4 offset:16 glc slc // 0000000000A8: E0704010 04400000
  v_mac_legacy_f32  v11, s32, v20                       // 0000000000B0: 0C162820
  v_mac_legacy_f32  v16, s37, v21                       // 0000000000B4: 0C202A25
  v_mul_legacy_f32  v0, s18, v10                        // 0000000000B8: 0E001412
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000BC: E0704014 04400100
  v_mac_legacy_f32  v16, s36, v20                       // 0000000000C4: 0C202824
  v_mac_legacy_f32  v0, s17, v9                         // 0000000000C8: 0C001211
  v_mul_legacy_f32  v1, s22, v10                        // 0000000000CC: 0E021416
  buffer_store_dword  v2, v0, s[0:3], s4 offset:24 glc slc // 0000000000D0: E0704018 04400200
  v_mac_legacy_f32  v0, s16, v8                         // 0000000000D8: 0C001010
  v_mac_legacy_f32  v1, s21, v9                         // 0000000000DC: 0C021215
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  v_mul_legacy_f32  v2, s26, v10                        // 0000000000E4: 0E04141A
  v_mul_legacy_f32  v17, s19, v7                        // 0000000000E8: 0E220E13
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 0000000000EC: E070401C 04400300
  s_buffer_load_dwordx4  s[8:11], s[12:15], 0x50        // 0000000000F4: C2840D50
  v_mac_legacy_f32  v1, s20, v8                         // 0000000000F8: 0C021014
  v_mac_legacy_f32  v2, s25, v9                         // 0000000000FC: 0C041219
  v_mac_legacy_f32  v17, s18, v6                        // 000000000100: 0C220C12
  v_mul_legacy_f32  v3, s23, v7                         // 000000000104: 0E060E17
  buffer_store_dword  v11, v0, s[0:3], s4 offset:32 glc slc // 000000000108: E0704020 04400B00
  v_mac_legacy_f32  v2, s24, v8                         // 000000000110: 0C041018
  v_mac_legacy_f32  v17, s17, v5                        // 000000000114: 0C220A11
  v_mac_legacy_f32  v3, s22, v6                         // 000000000118: 0C060C16
  v_mul_legacy_f32  v7, s27, v7                         // 00000000011C: 0E0E0E1B
  buffer_store_dword  v16, v0, s[0:3], s4 offset:36 glc slc // 000000000120: E0704024 04401000
  v_mac_legacy_f32  v17, s16, v4                        // 000000000128: 0C220810
  v_mac_legacy_f32  v3, s21, v5                         // 00000000012C: 0C060A15
  v_mac_legacy_f32  v7, s26, v6                         // 000000000130: 0C0E0C1A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000134: E0704030 04400000
  v_mac_legacy_f32  v3, s20, v4                         // 00000000013C: 0C060814
  v_mac_legacy_f32  v7, s25, v5                         // 000000000140: 0C0E0A19
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 000000000144: E0704034 04400100
  v_mac_legacy_f32  v7, s24, v4                         // 00000000014C: 0C0E0818
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000150: E0704038 04400200
  s_waitcnt     lgkmcnt(0)                              // 000000000158: BF8C007F
  v_sub_f32     v0, s8, v17                             // 00000000015C: 08002208
  buffer_store_dword  v17, v0, s[0:3], s4 offset:64 glc slc // 000000000160: E0704040 04401100
  v_sub_f32     v1, s9, v3                              // 000000000168: 08020609
  buffer_store_dword  v3, v0, s[0:3], s4 offset:68 glc slc // 00000000016C: E0704044 04400300
  v_sub_f32     v2, s10, v7                             // 000000000174: 08040E0A
  buffer_store_dword  v7, v0, s[0:3], s4 offset:72 glc slc // 000000000178: E0704048 04400700
  buffer_store_dword  v0, v0, s[0:3], s4 offset:80 glc slc // 000000000180: E0704050 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:84 glc slc // 000000000188: E0704054 04400100
  buffer_store_dword  v2, v0, s[0:3], s4 offset:88 glc slc // 000000000190: E0704058 04400200
  buffer_store_dword  v12, v0, s[0:3], s4 offset:96 glc slc // 000000000198: E0704060 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:100 glc slc // 0000000001A0: E0704064 04400D00
  buffer_store_dword  v14, v0, s[0:3], s4 offset:104 glc slc // 0000000001A8: E0704068 04400E00
  buffer_store_dword  v15, v0, s[0:3], s4 offset:108 glc slc // 0000000001B0: E070406C 04400F00
  buffer_store_dword  v8, v0, s[0:3], s4 offset:112 glc slc // 0000000001B8: E0704070 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:116 glc slc // 0000000001C0: E0704074 04400900
  buffer_store_dword  v10, v0, s[0:3], s4 offset:120 glc slc // 0000000001C8: E0704078 04400A00
  s_endpgm                                              // 0000000001D0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   22
//  NumSRegs:                   42
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   110
//  CycleSimNWaves:             110
//  Code Size:                  468
//Assembler Counts:
//  num_32bit_ops                     : 65
//  num_64bit_ops                     : 26
//  num_alu                           : 50
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 26
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 48
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 26
//  num_vmem_group                    : 16
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 22
// m_uNumSRegs                       : 42
// m_uSCCodeSize                     : 468
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 110
// m_uCycleSimNWaves                 : 110

// Assembler Counts:
// num_32bit_ops                     : 65
// num_64bit_ops                     : 26
// num_alu                           : 50
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 26
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 2
// num_inst_vop2                     : 48
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 26
// num_vmem_group                    : 16
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[624], bundle is:[215] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_mainVc.pdb
// Shader Semantic Hash      : 0x1b73191bd80ca9a1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
;   [4] generic, usageIdx  4, channelMask  3, v[20:21]
; Output Semantic Mappings
;   [0] position,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 4, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 6, paramIdx 6, paramSlot 0
;   [7] generic,  usageIdx 7, paramIdx 7, paramSlot 0

codeLenInByte        = 380 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 27;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 32
; lsStride                  = 128

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[0:7], s[2:3], 0x00                  // 000000000004: C0C00300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[8:23], s[4:7], 0x10         // 00000000000C: C3040510
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04           // 000000000010: C2800104
  s_buffer_load_dwordx8  s[24:31], s[4:7], 0x40         // 000000000014: C2CC0540
  s_buffer_load_dwordx8  s[32:39], s[4:7], 0x00         // 000000000018: C2D00500
  s_buffer_load_dwordx4  s[40:43], s[4:7], 0x08         // 00000000001C: C2940508
  s_mov_b32     m0, 0x00010000                          // 000000000020: BEFC03FF 00010000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000028: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 00000000002C: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000030: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 000000000034: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000038: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 00000000003C: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000040: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 000000000044: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000048: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 00000000004C: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000050: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 000000000054: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000058: 0C060810
  v_mul_legacy_f32  v11, s23, v7                        // 00000000005C: 0E160E17
  v_mac_legacy_f32  v11, s22, v6                        // 000000000060: 0C160C16
  v_mac_legacy_f32  v11, s21, v5                        // 000000000064: 0C160A15
  v_mac_legacy_f32  v11, s20, v4                        // 000000000068: 0C160814
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x50           // 00000000006C: C2820550
  v_mul_legacy_f32  v16, s0, v16                        // 000000000070: 0E202000
  v_mul_legacy_f32  v17, s1, v17                        // 000000000074: 0E222201
  v_mul_legacy_f32  v18, s2, v18                        // 000000000078: 0E242402
  v_mul_legacy_f32  v19, s3, v19                        // 00000000007C: 0E262603
  v_mov_b32     v22, s27                                // 000000000080: 7E2C021B
  v_mac_legacy_f32  v22, s25, v21                       // 000000000084: 0C2C2A19
  v_mac_legacy_f32  v22, s24, v20                       // 000000000088: 0C2C2818
  v_mov_b32     v23, s31                                // 00000000008C: 7E2E021F
  v_mac_legacy_f32  v23, s29, v21                       // 000000000090: 0C2E2A1D
  v_mac_legacy_f32  v23, s28, v20                       // 000000000094: 0C2E281C
  v_mul_legacy_f32  v20, s34, v10                       // 000000000098: 0E281422
  v_mac_legacy_f32  v20, s33, v9                        // 00000000009C: 0C281221
  v_mac_legacy_f32  v20, s32, v8                        // 0000000000A0: 0C281020
  v_mul_legacy_f32  v21, s38, v10                       // 0000000000A4: 0E2A1426
  v_mac_legacy_f32  v21, s37, v9                        // 0000000000A8: 0C2A1225
  v_mac_legacy_f32  v21, s36, v8                        // 0000000000AC: 0C2A1024
  v_mul_legacy_f32  v24, s42, v10                       // 0000000000B0: 0E30142A
  v_mac_legacy_f32  v24, s41, v9                        // 0000000000B4: 0C301229
  v_mac_legacy_f32  v24, s40, v8                        // 0000000000B8: 0C301028
  v_mul_legacy_f32  v25, s35, v7                        // 0000000000BC: 0E320E23
  v_mac_legacy_f32  v25, s34, v6                        // 0000000000C0: 0C320C22
  v_mac_legacy_f32  v25, s33, v5                        // 0000000000C4: 0C320A21
  v_mac_legacy_f32  v25, s32, v4                        // 0000000000C8: 0C320820
  v_mul_legacy_f32  v26, s39, v7                        // 0000000000CC: 0E340E27
  v_mac_legacy_f32  v26, s38, v6                        // 0000000000D0: 0C340C26
  v_mac_legacy_f32  v26, s37, v5                        // 0000000000D4: 0C340A25
  v_mac_legacy_f32  v26, s36, v4                        // 0000000000D8: 0C340824
  v_mul_legacy_f32  v7, s43, v7                         // 0000000000DC: 0E0E0E2B
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000E0: 0C0E0C2A
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000E4: 0C0E0A29
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000E8: 0C0E0828
  s_waitcnt     lgkmcnt(0)                              // 0000000000EC: BF8C007F
  v_sub_f32     v4, s4, v25                             // 0000000000F0: 08083204
  v_sub_f32     v5, s5, v26                             // 0000000000F4: 080A3405
  v_sub_f32     v6, s6, v7                              // 0000000000F8: 080C0E06
  v_lshlrev_b32  v1, 7, v1                              // 0000000000FC: 34020287
  ds_write2_b32  v1, v0, v2 offset1:1                   // 000000000100: D8380100 00020001
  ds_write2_b32  v1, v3, v11 offset0:2 offset1:3        // 000000000108: D8380302 000B0301
  ds_write2_b32  v1, v16, v17 offset0:4 offset1:5       // 000000000110: D8380504 00111001
  ds_write2_b32  v1, v18, v19 offset0:6 offset1:7       // 000000000118: D8380706 00131201
  ds_write2_b32  v1, v22, v23 offset0:8 offset1:9       // 000000000120: D8380908 00171601
  ds_write2_b32  v1, v20, v21 offset0:12 offset1:13     // 000000000128: D8380D0C 00151401
  ds_write_b32  v1, v24 offset:56                       // 000000000130: D8340038 00001801
  ds_write2_b32  v1, v25, v26 offset0:16 offset1:17     // 000000000138: D8381110 001A1901
  ds_write_b32  v1, v7 offset:72                        // 000000000140: D8340048 00000701
  ds_write2_b32  v1, v4, v5 offset0:20 offset1:21       // 000000000148: D8381514 00050401
  ds_write_b32  v1, v6 offset:88                        // 000000000150: D8340058 00000601
  ds_write2_b32  v1, v12, v13 offset0:24 offset1:25     // 000000000158: D8381918 000D0C01
  ds_write2_b32  v1, v14, v15 offset0:26 offset1:27     // 000000000160: D8381B1A 000F0E01
  ds_write2_b32  v1, v8, v9 offset0:28 offset1:29       // 000000000168: D8381D1C 00090801
  ds_write_b32  v1, v10 offset:120                      // 000000000170: D8340078 00000A01
  s_endpgm                                              // 000000000178: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   27
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   140
//  CycleSimNWaves:             140
//  Code Size:                  380
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 15
//  num_alu                           : 51
//  num_fc                            : 13
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 15
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 49
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 15
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 27
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 380
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 140
// m_uCycleSimNWaves                 : 140

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 15
// num_alu                           : 51
// num_fc                            : 13
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 15
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 2
// num_inst_vop2                     : 49
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 15
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLEffect_mainVc[] =
{
     68,  88,  66,  67, 236, 117, 
    198, 212,   5,  49,   0, 229, 
     52, 237,   9, 194, 212,  10, 
     80, 209,   1,   0,   0,   0, 
    114,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    232,   0,   0,   0, 212,   1, 
      0,   0,   0,  15,   0,   0, 
     16,  15,   0,   0,  73,  83, 
     71,  78, 172,   0,   0,   0, 
      5,   0,   0,   0,   8,   0, 
      0,   0, 128,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 140,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 147,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,  15,  15, 
      0,   0, 155,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0, 161,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  65,  78, 
     71,  69,  78,  84,   0,  67, 
     79,  76,  79,  82,   0,  84, 
     69,  88,  67,  79,  79,  82, 
     68,   0, 171, 171,  79,  83, 
     71,  78, 228,   0,   0,   0, 
      8,   0,   0,   0,   8,   0, 
      0,   0, 200,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 212,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,  12, 
      0,   0, 218,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   7,   8, 
      0,   0, 218,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   7,   8, 
      0,   0, 218,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,   7,   8, 
      0,   0, 218,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      6,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   0,   0,   0,   7,   8, 
      0,   0,  83,  86,  95,  80, 
     79,  83,  73,  84,  73,  79, 
     78,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     83,  72,  69,  88,  36,  13, 
      0,   0,  80,   0,   1,   0, 
     73,   3,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
    197,   0,   0,   0,  80,   0, 
      1,   0, 192,   0,   0,   0, 
    106,   8,   0,   1,  89,   0, 
      0,   4,  70, 142,  32,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,  89,   0,   0,   4, 
     70, 142,  32,   0,   2,   0, 
      0,   0,  21,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   2,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   4,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   0,   0,   0,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      3,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      4,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      5,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      6,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      7,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   4,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   2,   0,   0,   0, 
      5,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   6,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   7,   0, 
      0,   0,  56,   0,   0,   8, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      3,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   5,  50,   0,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   4,   0,   0,   0, 
     54,   0,   0,   5,  66,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  16,   0,   0,   8, 
     18,  32,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 131, 
     32,   0,   2,   0,   0,   0, 
     16,   0,   0,   0,  16,   0, 
      0,   8,  34,  32,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 131,  32,   0,   2,   0, 
      0,   0,  17,   0,   0,   0, 
     16,   0,   0,   8,  18,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,  16,   0,   0,   8, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   2,   0,   0,   0, 
      1,   0,   0,   0,  16,   0, 
      0,   8,  66,  32,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,  17,   0,   0,   8, 
     34,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   2,   0,   0,   0, 
      1,   0,   0,   0,  17,   0, 
      0,   8,  66,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   2,   0,   0,   0, 
     54,   0,   0,   5, 114,  32, 
     16,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,   0,   0,   0,   9, 
    114,  32,  16,   0,   5,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      2,   0,   0,   0,  20,   0, 
      0,   0,  54,   0,   0,   5, 
    242,  32,  16,   0,   6,   0, 
      0,   0,  70,  30,  16,   0, 
      2,   0,   0,   0,  54,   0, 
      0,   5, 114,  32,  16,   0, 
      7,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 206,   0,   0,   0, 
     23,   0,   1,   0,  32, 115, 
     23,   0, 120,   1, 237, 152, 
     65,  79,  19,  65,  20, 199, 
    167, 211, 221,  97, 186,  76, 
    167, 219,  82,  10, 101,  65, 
     10,  86, 172,  88, 106,  37, 
    141,   7,  99,   6,   4,  12, 
      7,  76,  48,  66,  12, 137, 
     77,  72, 161,  37,  54,   1, 
    218,  80,  14, 158,  42, 224, 
     65,  15,  30, 188, 234, 205, 
    155,  38, 126,   0,  79,  66, 
    170, 241,  40, 198,  19,  31, 
    193, 163, 241, 196,  77, 223, 
    219, 221,  98,  83, 228, 172, 
     49, 251,  75, 255, 239, 205, 
    236, 236, 206, 254, 103, 102, 
    123, 121, 181,  30,  98, 243, 
    249,  83, 105,  27, 115,  49, 
     48,  53,  67, 252, 132, 232, 
    216,   1,  52,  12,  64,  53, 
    138, 145,  16,  51, 134, 145, 
    144,  36,   6,  31, 136,  18, 
    210,  15,  41,   3, 186,   1, 
    253,  73, 200,  56, 150, 114, 
     69, 200, 238, 212, 203,  23, 
    143, 167, 150, 161, 149,   5, 
     37,  64, 139, 174,  38,  64, 
     28, 148,   3, 117, 130, 176, 
    221,  14,  88, 177, 193,  87, 
    181, 130, 190, 112, 190,  86, 
     58,  48,   0, 167, 230,  41, 
     96, 248,  51, 179,  32, 244, 
    127,  22, 232, 173,   9, 206, 
    139,  62,  17,  92, 239, 191, 
      6, 158,  89, 243, 156,  16, 
     60, 143,  86,  36, 168, 185, 
    159, 111, 187,  49, 218, 199, 
    103, 243, 205, 237,  55, 207, 
    242,   0, 116,  22,  63, 129, 
    246,  61, 110, 246, 209,   3, 
     35, 243,  89, 230, 123, 146, 
     96, 244,  48, 203, 252, 161, 
    171,  76, 155,  14,  51,  24, 
     96,  12,   4, 135, 196, 224, 
    102,  22,   0,  25,  32, 216, 
     80,  38,  64,  65,  16,  24, 
    100,  33, 144,   9,  10, 131, 
     34, 160,  46,  16, 172, 137, 
    129,  63,   6, 223,  30, 131, 
    239, 149, 245, 130, 226, 160, 
     62, 144,   5,   2, 211, 108, 
      0, 116,  14,  52, 232, 124, 
      7, 204,  93,  59, 163,  78, 
    131, 249, 157, 149,  50, 205, 
    217,   1, 166,  59,  95,  54, 
     67,  99,   0, 235,   0, 115, 
    255,  17, 184,   7, 205,  51, 
    129, 237,  61, 249,  31,  35, 
    173, 109,  15,  15,  15,  15, 
     15,  15,  15,  15,  15,  15, 
     15,  15,  15,  15,  15, 143, 
    191,   5,  29, 218, 123,  79, 
    252,   7,   7, 143, 200, 179, 
    125, 162, 127, 108, 112, 253, 
    105, 195, 212, 141,  15, 147, 
    250, 215, 134, 230, 219, 105, 
    220, 209, 247,  26,  85,  24, 
    235, 148,  68, 134,  36, 149, 
     93,  82, 147,  61, 146,  73, 
     75, 198, 228, 160,  76, 203, 
    243,  82,  74,  67,  16,  37, 
      5,  85,  17, 161, 169, 152, 
     96, 162,  79, 196, 196,  57, 
    145,  22, 195,  66, 138, 139, 
     84, 212,  47, 211,  76, 221, 
    136, 102, 165, 140, 142, 203, 
     72,  52,  39,   3,   6,  81, 
     65, 131, 170, 176, 161, 169, 
    110, 131, 137, 184,  17,  19, 
      3,  70,  90,  12,  25,  82, 
     92,  24,  21, 234, 210, 104, 
     70,   5,  34,  89,  21, 140, 
    140, 171, 112,  36, 167,  56, 
     39,  74, 112, 170,  76, 174, 
    169,  40, 103, 162, 151, 199, 
     68,  63,  79, 139,   4, 151, 
    130,  64, 240,  13,  27, 146, 
     38,  19, 210,  63,  50,  44, 
    147,  41, 161,  82, 169, 140, 
    226, 102,  86,   9, 115,  92, 
    153, 102,  78, 105,  36, 201, 
    117,  58, 194, 153, 150, 226, 
     59, 116, 180, 254, 131,  94, 
    171,  31, 114, 114, 236, 239, 
    140, 117, 132,  40,  57, 214, 
    116,  51,  60,   8, 153, 245, 
    116,  91,  87,  32, 247, 198, 
    251, 172,   9, 200, 196,  71, 
    173, 121, 200, 145, 174, 168, 
    181,  12,  89,   4, 101, 168, 
      2, 153,   7,  12, 139, 144, 
    221, 125, 187, 148,  71, 237, 
    223,   9, 113,  44, 131, 181, 
     93,  51,  49, 180,  93, 179, 
    219, 154,  83,  51, 107,  66, 
    241,  34,  92, 107, 173,  27, 
     45, 185, 117, 224, 148, 155, 
    177,  22,  27,   0, 249, 136, 
    223, 158,   3,  61,  96,  27, 
    193,  10, 155,  70, 156, 250, 
    218, 171,  55, 226, 200, 138, 
    215, 192, 167, 195, 115, 247, 
    249, 170, 155, 177,  62, 140, 
    245, 170, 223, 236,  96,  56, 
    197,  59, 247, 254, 215, 110, 
    198, 181, 160,  63, 105, 191, 
     13, 192,  98,  39, 112, 228, 
    142, 127, 113,  51, 214, 196, 
    176, 134, 219, 238, 227, 187, 
     59, 126,  31, 132,  78, 167, 
    175, 231, 239, 150, 170, 149, 
     90, 126, 105, 165, 242, 112, 
    236, 230, 226, 236, 216,  66, 
     97, 163, 186,  94, 170, 229, 
    231, 202, 219, 181, 252,  76, 
    121, 171, 180, 186, 189, 180, 
     56, 151, 175, 109, 173, 230, 
     23,  30,  20, 138, 165, 173, 
     90, 126, 186, 178,  81,  45, 
    175, 151, 138, 246,  67, 243, 
    155, 165, 153, 217, 133, 219, 
    183, 214, 214, 224, 206, 229, 
    141,  66, 121, 243, 222, 106, 
    166,  90,  92,  33, 191,   0, 
    106, 118, 123,  91,   0,   0, 
     53,  16,   0,   0, 221,   0, 
      0,   0,  23,   0,   1,   0, 
     16,  31,  24,   0, 120,   1, 
    237, 152, 205, 107,  19,  65, 
     24, 198,  39, 155, 113, 186, 
    217,  78, 166, 155,  52,  77, 
    147,  38, 218,  53,  86,  45, 
    133,  74,  43,  30,  68,  60, 
    172, 109,  68,  65,  65, 177, 
     65,  10,   6, 180,  54, 145, 
     22, 250,  17, 154,  30, 122, 
    144, 250,  65, 193,  75, 143, 
     94,   4,  47,  30,  60, 248, 
     15, 120,  18,  45,  81, 208, 
    155,  30,  60, 120, 244, 226, 
    223, 161, 207, 179, 221, 180, 
     33, 218, 179,  34, 251,  35, 
    207, 188,  51, 239, 236, 204, 
    188, 239,  76,  78, 239, 112, 
     78,   4, 252, 120, 241, 178, 
     68,  91,  75,  76, 149,  69, 
     92, 136,  67,  28,   0, 139, 
     13, 104, 100, 216,  10, 241, 
     38, 203,  86, 136,  81,  54, 
     49,   8,  31, 208,  53,   6, 
    125, 197, 216, 135, 229,  92, 
     91, 197, 143, 207, 166,  94, 
    223, 121,  62, 213,  68, 127, 
     18, 226, 183,  43, 161,  46, 
     64,  67, 208, 105, 168,  15, 
    234, 134, 115,  10,  34,  60, 
    170,  19, 198,  53,   1, 117, 
     98, 179,   1,  92, 231,  66, 
    123, 204, 177, 249,  51, 183, 
     32, 198, 116,  16, 140, 141, 
    251, 181, 105, 199, 201, 124, 
    255,  53, 248, 102, 237, 119, 
     34, 124, 143,  78,  12,  36, 
     33,  82,  14, 147, 230,  61, 
    146, 167, 225, 152, 134, 185, 
    237,  64,   7, 241,  19, 180, 
    239, 154, 176, 127,  22,  34, 
    140,  65, 137, 107,  19,  42, 
    246, 196,  83, 214, 231,   9, 
     21, 239, 155,  84, 114,  58, 
    165,  48, 161, 240, 152, 170, 
      7, 194,   2, 149, 128,  28, 
    168,  23, 210,  80,  18,  66, 
    128,  10,  23, 172, 240, 120, 
     42,   5, 165, 161, 126,   8, 
     57, 169,   1,   8, 193, 169, 
     65,   8, 255,  89, 149, 135, 
    240,  48, 170,   0,  21, 161, 
    195, 208,  17, 104, 120, 255, 
    127,  64,  84, 108, 247,  18, 
    148, 181, 155, 169, 138, 227, 
    207,  13, 148, 220, 189,   9, 
    117, 136,  17, 195,  50,  56, 
    160, 122,  16, 224, 127,   0, 
    239, 160, 243,  30, 218, 239, 
     78, 188,  80,  17,  17,  17, 
     17,  17,  17,  17,  17,  17, 
     17,  17,  17,  17,  17,  17, 
     17, 127,  19, 235, 232, 227, 
    183,  34, 254,  97, 231, 129, 
    216, 126, 231,  38, 237, 247, 
     13, 216, 126,  35, 140,  27, 
    127, 184, 147, 214,  66,  15, 
     26, 203, 200, 196,  86,  43, 
    229,   8, 157, 213, 150,  46, 
     24, 105,  92,  91, 232,   1, 
    199, 210,  67,  90, 234,  97, 
    163, 140, 159, 252, 210, 202, 
    216, 150, 206,  59,  82,  31, 
    209,  74, 231, 108, 169,  15, 
     59,  74, 139, 228, 167,  86, 
    209,  86, 154, 123,  11, 191, 
    241,  93,   8,  95, 218, 158, 
     48, 146, 253,  24, 250, 201, 
    237,  86, 162, 100,  25, 155, 
     99, 203, 151, 206, 136,  52, 
    199, 172, 236, 166, 230,  56, 
    238, 203, 222,  19, 202,  28, 
     29, 203, 234, 147, 150, 183, 
    233, 210, 135, 245, 222, 104, 
     86,  31,  31, 243, 116,  58, 
     35,  76, 134,  62, 236,  51, 
     50, 234, 233,  84,  26, 241, 
    101,  44, 147, 163,  15, 123, 
    185,  46,  98,  76,  91, 193, 
    217,  67,  25, 105, 250,  77, 
    201,  20,  57, 135, 125, 175, 
     39, 183,  90,  25,  23, 241, 
    166, 165,  78, 235,  18, 114, 
     84, 198, 227,  92, 175,  47, 
    115, 174, 212,  41, 167, 132, 
     92,  21, 114,  53, 102, 132, 
    126,  23, 251, 217,  37, 228, 
    172, 144, 179, 209,  19, 244, 
     33, 150,  12, 114, 203,  59, 
     70, 159, 225,  24, 113, 228, 
    108, 163, 207, 178, 143, 243, 
    121, 174,  93,  18, 182, 207, 
    113, 202, 151,   9, 101, 217, 
    101, 246, 113, 190,  99, 164, 
    125, 153, 253,  30, 196,  66, 
    139, 189,  42, 180, 216,  99, 
    150,  22, 235, 239, 208, 106, 
     95, 214, 104, 147, 190,  92, 
    160,  53, 190,  92, 162, 237, 
    243, 101, 131, 214, 246, 229, 
     58, 109, 194, 151,  27, 180, 
    142,  47, 133, 120, 244, 110, 
     32, 120, 216, 224, 183,  71, 
    158, 229, 185,  46,  95,  80, 
    146, 238, 242,   5, 245, 220, 
     46,  95, 208, 151, 187, 245, 
    189,  54,  65, 153,  15, 190, 
    206, 122, 151,  28, 100,  43, 
    196,  87,  22,  55,   1, 235, 
    198,   9,  40,  38, 226, 193, 
     30, 140, 139, 125, 194, 106, 
    160,  12, 171, 206,  47,  94, 
    233, 111, 133, 124, 179, 192, 
     62,  57,  31, 238,  83,  12, 
     45, 107, 104,  26, 218, 135, 
    213, 239, 223, 169, 133, 223, 
     87,  66, 203,  92,  24, 159, 
      9,  78,   3,  44, 204, 130, 
    173, 112, 254, 126, 104,  89, 
    191, 235, 133, 186, 227, 120, 
     30, 206, 179, 118, 205,  72, 
    167, 207,  85, 111, 212,  27, 
    171, 205, 234, 236, 221, 213, 
    141, 241,  11, 149,  75, 227, 
     51, 115, 203, 141, 165, 122, 
    179, 122, 101, 113, 189,  89, 
     45,  47, 174, 213, 231, 215, 
    103,  43,  87, 170, 205, 181, 
    249, 234, 204, 194,  92, 173, 
    190, 214, 172,  78, 175,  46, 
     55,  22, 151, 234, 181,  96, 
    209, 181, 149, 122, 249, 210, 
    204, 213, 139, 247, 238, 225, 
    203, 219, 203, 115, 139,  43, 
     55, 231,  79,  53, 106, 119, 
    197,  47, 137, 171, 164,  34, 
      0,   0,  53,  16,   0,   0, 
    217,   0,   0,   0,  23,   0, 
      1,   0,   0, 179,  23,   0, 
    120,   1, 237, 152, 207,  79, 
     27,  87,  16, 199, 103, 127, 
     61, 214, 203, 240,  88,  27, 
     99, 108, 126,  52, 134,  58, 
    116, 113, 193, 114,  92,  31, 
     80,  79,  20, 168,  18,  41, 
    145, 136,  10, 138, 144,  98, 
    169,  34,  96,   4,  18,  63, 
     44, 204, 129,  67,  75, 105, 
     84,   9,  85,  66,  61, 245, 
    208, 107, 143, 189,  85, 106, 
    207,   9, 114, 175, 145, 146, 
     35, 247,  92, 122, 232,  31, 
    208,  67, 164, 244,  59, 235, 
    117, 112,  81, 162,  28, 147, 
     72, 251, 145, 191,  51,  59, 
    251, 222, 238, 206, 155, 247, 
    124, 153,  63, 134,  40, 100, 
    236, 199, 197,  63, 197, 111, 
     36, 230,  23, 201,  34, 114, 
     36, 232, 162, 145,  22,  75, 
    116,  55,  35, 150, 168,  32, 
    198, 128,  76, 162,  17, 184, 
     18, 244,  13, 226,  57, 120, 
     25,  11,  34, 253, 244, 252, 
    135, 249, 224, 219, 211, 121, 
     92,  82,  25,  26, 133, 206, 
     34, 201, 220, 126, 232,  51, 
    168,  15,  18,  36, 238, 198, 
     22,   3, 240, 153, 255,  33, 
    241,  13, 168, 155,  30,  49, 
    224, 234,  59, 104,  77, 204, 
    235,  89, 130,  36, 255,  55, 
     33, 185,   9, 157, 119, 118, 
    242, 148, 245, 190, 111, 200, 
    158, 117, 246,  73, 144, 253, 
    232,  70,  67, 216, 218, 144, 
    127,   6, 197,  94, 214,  53, 
    136, 246, 181, 179, 151, 231, 
    208, 155, 120,   9,  92, 185, 
    232, 162,  19,  75,  14, 138, 
    150, 202, 202,  56, 205,  43, 
    243, 105,  89,  89, 253,  55, 
    148, 189, 144,  84,  24,  80, 
     10, 194,  38,  41,  76,  86, 
      9, 200, 131, 122,  33, 134, 
     80,  88, 133,   4,  21,  10, 
    173, 124,  40,   9, 165, 160, 
      1,   8, 107,  82, 200,  87, 
     33,  71, 133, 243, 170, 178, 
     80,  14,  26, 134, 144, 176, 
    194, 161,  82,  99, 208,  71, 
    208, 181, 203,  92,   4, 101, 
    180, 139, 160, 204, 246,  74, 
    149, 213, 174, 128, 178, 219, 
     39,  75,  57, 146,  49, 188, 
     36,   7,  84,  79, 231,  20, 
    125, 216,  72,  13, 186, 235, 
    208, 249,  31,  73,  53, 242, 
    144, 112,  34,  38,  38,  38, 
     38,  38,  38,  38,  38,  38, 
     38,  38,  38,  38,  38,  38, 
     38, 230,  29,  97, 142,  63, 
    124,  68, 214, 249, 249, 119, 
    116, 246, 216, 119, 236, 191, 
    108, 227, 164,  53, 231,  60, 
    105, 145, 243, 172, 229,  58, 
     63, 183,  94,  90,  47,  30, 
     73,  55, 163, 129, 241,  94, 
     77, 218,  99, 226, 132,  71, 
    236, 186, 196, 253, 218, 214, 
    154, 109, 238, 243, 108, 102, 
    215, 230,   1, 173, 116, 138, 
     21,  39,  61, 197, 190, 171, 
    120,  72, 103, 116, 134,  51, 
     60, 232, 101,  56, 237, 102, 
    248, 174, 243, 176,  69, 249, 
    188,  54,  38,  38, 180,  89, 
     40, 104, 107, 114,  82, 143, 
    152, 211, 199, 185, 226,  52, 
    103, 131, 105, 190, 102, 150, 
    142, 199, 138,  37,  30,  13, 
     74,  60, 145,  14, 244, 120, 
     42, 224, 188,  31, 240, 100, 
    186, 168, 175, 167, 138,  92, 
    240, 139,  92,  76, 151, 245, 
     84, 170, 204, 129,  95, 230, 
    143, 117,  69,  79, 112, 133, 
    199, 189,  10, 231, 221,  10, 
    127, 162, 171, 122, 146, 171, 
    124, 221, 171, 114, 193, 173, 
    242, 167,  90, 235,  34, 107, 
    158, 242,  52,   7, 174, 102, 
     89, 163,  93, 113,  93, 167, 
    234, 185,  74, 179, 123, 106, 
    154,  85,  50, 102,  47,  12, 
     50, 201, 180, 224, 173,  94, 
    178,  29, 120,  63,  73, 170, 
      7,  62,  53,  64, 110,   2, 
     62,  51,  68, 220,   7, 159, 
     30, 164,  89, 170,  94,  24, 
     89,  34,  63, 137,  56,  55, 
     76, 183,  36, 238,  33,  74, 
     15,  34, 182,  29,  90, 149, 
     88,  17, 101, 115, 136, 185, 
    143, 134,  71, 224, 117,  63, 
    141, 142, 193, 187,   9,  58, 
    146, 113,  79,  42, 255, 253, 
    227, 176,  53, 104, 134, 191, 
     87, 228, 164, 113, 116, 229, 
    158,  47, 230, 202, 189, 240, 
    218, 150, 201, 151, 132, 173, 
     55, 220, 235, 244, 160, 132, 
     95, 162, 126, 227,  86, 228, 
    165,  55, 156, 128,  12, 178, 
    194, 119,  72,  14, 114,  45, 
     72, 135, 206, 166, 118, 127, 
    238, 215, 223, 248,  98,  36, 
    215, 148,  54, 101, 200, 179, 
    232, 249, 223,  35,  47, 189, 
     45, 134, 222, 198, 191, 209, 
    252, 191,  35,  47, 107, 145, 
    252, 116, 248,  53,  32, 205, 
     82, 144, 141, 250, 227, 126, 
    228, 165, 167, 214,  11,  93, 
    205, 163,  28, 141, 223, 135, 
     36, 211, 133, 207, 107,  95, 
    213,  27, 251, 205, 218, 234, 
    131, 253, 163, 153,  47,  86, 
    110, 206,  44, 175, 237,  54, 
    118, 234, 205, 218, 237, 237, 
    195, 102, 109, 113, 251, 160, 
    190, 126, 184, 186, 114, 187, 
    214,  60,  88, 175,  45, 111, 
    173, 109, 212,  15, 154, 181, 
    133, 253, 221, 198, 246,  78, 
    125,  35, 124, 104, 105, 175, 
    190, 120, 115, 249, 206, 151, 
    155, 155, 152, 249, 245, 238, 
    218, 246, 222, 189, 245,  82, 
     99, 227,   1, 253,   7,  58, 
    249, 132,  26,   0,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0, 161, 169,  12, 216, 
     27,  25, 115,  27,  88,  80, 
     68,  80,  90,   0,   0,   0, 
     67,  58,  92,  82, 101, 112, 
    111, 115,  92,  88,  98, 111, 
    120,  45,  65,  84,  71,  45, 
     83,  97, 109, 112, 108, 101, 
    115,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68,  71,  83, 
     76,  69, 102, 102, 101,  99, 
    116,  95, 109,  97, 105, 110, 
     86,  99,  46, 112, 100,  98
};
