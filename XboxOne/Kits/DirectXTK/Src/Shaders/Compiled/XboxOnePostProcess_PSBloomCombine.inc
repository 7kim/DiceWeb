#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[151]
// Embedded Data:
//  0x00000097 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000092 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[32], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
dp3 r1.x, r0.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
add r0.xyzw, r0.xyzw, -r1.xxxx
mad r0.xyzw, cb0[16].xxxx, r0.xyzw, r1.xxxx
mul r0.xyzw, r0.xyzw, cb0[17].xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t1.xyzw, s0
dp3 r2.x, r1.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
add r1.xyzw, r1.xyzw, -r2.xxxx
mad r1.xyzw, cb0[16].yyyy, r1.xyzw, r2.xxxx
mul r1.xyzw, r1.xyzw, cb0[18].xyzw
mov_sat r2.xyzw, r1.xyzw
add r2.xyzw, -r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad o0.xyzw, r0.xyzw, r2.xyzw, r1.xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[151], bundle is:[199] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePostProcess_PSBloomCombine.pdb
// Shader Semantic Hash      : 0xdc33f7aa56a6ac47
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 1, channelMask  3, param0, paramSlot1, DefaultVal={0,0,0,0}

codeLenInByte        = 332 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 1, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_SAMPLER 0, offset 0x10:19 dwords
;  extUserElements 1[3] = IMM_CONST_BUFFER 0, offset 0x14:23 dwords
NumVgprs             = 12;
NumSgprs             = 32;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000001
SPIC:NUM_INTERP             = 1
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x138, dwords=0x4E)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, off, off, off done vm         // 000000000008: F8001801 00000002
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, off, off done vm          // 000000000008: F8001803 00000302
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v0, off, off done vm          // 000000000008: F8001803 00000002
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 000000000000: 5E020702
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 000000000004: 5E000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v2, v3                      // 000000000000: 5C020702
  v_cvt_pknorm_u16_f32  v0, v4, v0                      // 000000000004: 5C000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v2, v3                      // 000000000000: 5A020702
  v_cvt_pknorm_i16_f32  v0, v4, v0                      // 000000000004: 5A000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v2, v3                          // 000000000000: 60020702
  v_cvt_pk_u16_u32  v0, v4, v0                          // 000000000004: 60000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v2, v3                          // 000000000000: 62020702
  v_cvt_pk_i16_i32  v0, v4, v0                          // 000000000004: 62000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, v4, v0 done vm            // 000000000008: F800180F 00040302
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[28:29], exec                          // 000000000000: BE9C047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx16  s[4:19], s[0:1], 0x00                // 000000000008: C1020100
  s_load_dwordx8  s[20:27], s[0:1], 0x10                // 00000000000C: C0CA0110
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v6, v0, attr0.x                      // 000000000014: C8180000
  v_interp_p1_f32  v7, v0, attr0.y                      // 000000000018: C81C0100
  v_interp_p2_f32  v6, v1, attr0.x                      // 00000000001C: C8190001
  v_interp_p2_f32  v7, v1, attr0.y                      // 000000000020: C81D0101
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[6:7], s[12:19], s[20:23] dmask:0xf // 000000000028: F0800F00 00A30206
  image_sample  v[6:9], v[6:7], s[4:11], s[20:23] dmask:0xf // 000000000030: F0800F00 00A10606
  s_buffer_load_dwordx2  s[0:1], s[24:27], 0x40         // 000000000038: C2401940
  s_buffer_load_dwordx8  s[4:11], s[24:27], 0x44        // 00000000003C: C2C21944
  s_waitcnt     vmcnt(1)                                // 000000000040: BF8C0F71
  v_mul_legacy_f32  v0, 0x3d93a92a, v4                  // 000000000044: 0E0008FF 3D93A92A
  v_madmk_f32   v0, v3, 0x3f372474, v0                  // 00000000004C: 40000103 3F372474
  s_waitcnt     vmcnt(0)                                // 000000000054: BF8C0F70
  v_mul_legacy_f32  v1, 0x3d93a92a, v8                  // 000000000058: 0E0210FF 3D93A92A
  v_madmk_f32   v0, v2, 0x3e59999a, v0                  // 000000000060: 40000102 3E59999A
  v_madmk_f32   v1, v7, 0x3f372474, v1                  // 000000000068: 40020307 3F372474
  v_sub_f32     v2, v2, v0                              // 000000000070: 08040102
  v_sub_f32     v3, v3, v0                              // 000000000074: 08060103
  v_sub_f32     v4, v4, v0                              // 000000000078: 08080104
  v_sub_f32     v5, v5, v0                              // 00000000007C: 080A0105
  v_madmk_f32   v1, v6, 0x3e59999a, v1                  // 000000000080: 40020306 3E59999A
  s_waitcnt     lgkmcnt(0)                              // 000000000088: BF8C007F
  v_mad_f32     v2, s1, v2, v0                          // 00000000008C: D2820002 04020401
  v_mad_f32     v3, s1, v3, v0                          // 000000000094: D2820003 04020601
  v_mad_f32     v4, s1, v4, v0                          // 00000000009C: D2820004 04020801
  v_mac_f32     v0, s1, v5                              // 0000000000A4: 3E000A01
  v_sub_f32     v5, v6, v1                              // 0000000000A8: 080A0306
  v_sub_f32     v6, v7, v1                              // 0000000000AC: 080C0307
  v_sub_f32     v7, v8, v1                              // 0000000000B0: 080E0308
  v_sub_f32     v8, v9, v1                              // 0000000000B4: 08100309
  v_mul_legacy_f32  v2, s8, v2                          // 0000000000B8: 0E040408
  v_mul_legacy_f32  v3, s9, v3                          // 0000000000BC: 0E060609
  v_mul_legacy_f32  v4, s10, v4                         // 0000000000C0: 0E08080A
  v_mul_legacy_f32  v0, s11, v0                         // 0000000000C4: 0E00000B
  v_mad_f32     v5, s0, v5, v1                          // 0000000000C8: D2820005 04060A00
  v_mad_f32     v6, s0, v6, v1                          // 0000000000D0: D2820006 04060C00
  v_mad_f32     v7, s0, v7, v1                          // 0000000000D8: D2820007 04060E00
  v_mac_f32     v1, s0, v8                              // 0000000000E0: 3E021000
  v_max_f32     v8, v2, v2 clamp                        // 0000000000E4: D2200808 00020502
  v_max_f32     v9, v3, v3 clamp                        // 0000000000EC: D2200809 00020703
  v_max_f32     v10, v4, v4 clamp                       // 0000000000F4: D220080A 00020904
  v_max_f32     v11, v0, v0 clamp                       // 0000000000FC: D220080B 00020100
  v_mul_legacy_f32  v5, s4, v5                          // 000000000104: 0E0A0A04
  v_mul_legacy_f32  v6, s5, v6                          // 000000000108: 0E0C0C05
  v_mul_legacy_f32  v7, s6, v7                          // 00000000010C: 0E0E0E06
  v_mul_legacy_f32  v1, s7, v1                          // 000000000110: 0E020207
  v_sub_f32     v8, 1.0, v8                             // 000000000114: 081010F2
  v_sub_f32     v9, 1.0, v9                             // 000000000118: 081212F2
  v_sub_f32     v10, 1.0, v10                           // 00000000011C: 081414F2
  v_sub_f32     v11, 1.0, v11                           // 000000000120: 081616F2
  v_mac_f32     v2, v5, v8                              // 000000000124: 3E041105
  v_mac_f32     v3, v6, v9                              // 000000000128: 3E061306
  v_mac_f32     v4, v7, v10                             // 00000000012C: 3E081507
  v_mac_f32     v0, v1, v11                             // 000000000130: 3E001701
  s_mov_b64     exec, s[28:29]                          // 000000000134: BEFE041C
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 000000000138: 5E020702
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 00000000013C: 5E000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000140: F8001C0F 00000001
  s_endpgm                                              // 000000000148: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   12
//  NumSRegs:                   32
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  332
//Assembler Counts:
//  num_32bit_ops                     : 51
//  num_64bit_ops                     : 13
//  num_alu                           : 48
//  num_fc                            : 13
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 2
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 34
//  num_inst_vop3                     : 4
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 4
//  constant_literal_operands         : 0
//  num_tex                           : 3
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 12
// m_uNumSRegs                       : 32
// m_uSCCodeSize                     : 332
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 51
// num_64bit_ops                     : 13
// num_alu                           : 48
// num_fc                            : 13
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 2
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 34
// num_inst_vop3                     : 4
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 4
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 3
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE PostProcess_PSBloomCombine[] =
{
     68,  88,  66,  67, 188, 193, 
    210, 151, 232,  88, 214,   7, 
     50,  69, 252,  51, 194, 137, 
     26,   9,   1,   0,   0,   0, 
    195,   6,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    140,   0,   0,   0, 192,   0, 
      0,   0,  72,   6,   0,   0, 
     88,   6,   0,   0,  73,  83, 
     71,  78,  80,   0,   0,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0,  56,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  68,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
    171, 171,  79,  83,  71,  78, 
     44,   0,   0,   0,   1,   0, 
      0,   0,   8,   0,   0,   0, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
     83,  86,  95,  84,  97, 114, 
    103, 101, 116,   0, 171, 171, 
     83,  72,  69,  88, 128,   5, 
      0,   0,  80,   0,   0,   0, 
     96,   1,   0,   0,  53,  16, 
      0,   0,   5,   0,   0,   0, 
    151,   0,   0,   0,  80,   0, 
      0,   0, 146,   0,   0,   0, 
    106,   8,   0,   1,  89,   0, 
      0,   4,  70, 142,  32,   0, 
      0,   0,   0,   0,  32,   0, 
      0,   0,  90,   0,   0,   3, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   0,   0, 
      0,   0,  85,  85,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   1,   0,   0,   0, 
     85,  85,   0,   0,  98,  16, 
      0,   3,  50,  16,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   3,   0,   0,   0, 
     69,   0,   0, 139, 194,   0, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   0,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0,  70, 126, 
     16,   0,   0,   0,   0,   0, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,  10, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0, 154, 153,  89,  62, 
    116,  36,  55,  63,  42, 169, 
    147,  61,   0,   0,   0,   0, 
      0,   0,   0,   8, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,   6,   0,  16, 128, 
     65,   0,   0,   0,   1,   0, 
      0,   0,  50,   0,   0,  10, 
    242,   0,  16,   0,   0,   0, 
      0,   0,   6, 128,  32,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   8, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  14,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      1,   0,   0,   0,  70,  16, 
     16,   0,   1,   0,   0,   0, 
     70, 126,  16,   0,   1,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  16,   0, 
      0,  10,  18,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0, 154, 153, 
     89,  62, 116,  36,  55,  63, 
     42, 169, 147,  61,   0,   0, 
      0,   0,   0,   0,   0,   8, 
    242,   0,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      1,   0,   0,   0,   6,   0, 
     16, 128,  65,   0,   0,   0, 
      2,   0,   0,   0,  50,   0, 
      0,  10, 242,   0,  16,   0, 
      1,   0,   0,   0,  86, 133, 
     32,   0,   0,   0,   0,   0, 
     16,   0,   0,   0,  70,  14, 
     16,   0,   1,   0,   0,   0, 
      6,   0,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   8, 
    242,   0,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      1,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     18,   0,   0,   0,  54,  32, 
      0,   5, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  14, 
     16,   0,   1,   0,   0,   0, 
      0,   0,   0,  11, 242,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  14,  16, 128,  65,   0, 
      0,   0,   2,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0, 128,  63,   0,   0, 
    128,  63,  50,   0,   0,   9, 
    242,  32,  16,   0,   0,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   2,   0,   0,   0, 
     70,  14,  16,   0,   1,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 201,   0, 
      0,   0,  23,   0,   1,   0, 
     41, 168,  16,   0, 120,   1, 
    237,  87,  65, 107,  19,  65, 
     20, 126,  51,  59, 153, 157, 
    108, 227,  38, 214,  90,  27, 
    136,  80, 196, 131,   8,  21, 
    161,   7,  65,  48, 198, 182, 
    208,  66,  69, 139, 169,  82, 
    203,  82, 219,  52,  91,  12, 
    180,  77, 204, 230, 224, 169, 
     86,  17, 188, 244,  32, 120, 
     81, 233,  69,  20,  81,  17, 
    252,   3, 146, 212, 158, 138, 
     88,  15, 197, 163, 222, 250, 
      3,  36,  23, 123,  40, 173, 
    239, 109, 118, 106, 106, 237, 
     45, 160,  96,  62, 248, 230, 
    205, 247, 230, 237, 219, 183, 
     59, 187,  48, 239,  85,  12, 
    124,  60,  16, 159,  15, 144, 
    189, 250, 237, 221, 234,   0, 
      7,   8, 225, 156,  33, 201, 
     18,  30, 251, 171,   0,   3, 
     81,  26,   1,  78, 208,  64, 
      1,  24,  27,  65, 211, 137, 
    188, 136,  58, 133, 150, 214, 
     52, 167, 166, 198, 122,  86, 
     63,  77, 245, 224,  20, 226, 
     72,  74, 147,  14, 216, 141, 
     36, 125,  58, 176, 148, 142, 
    128,  41, 119, 160, 239,  47, 
    104, 248,  13, 199, 144, 218, 
     79,  86, 207,  13, 164, 206, 
    229, 195, 165, 225, 207, 160, 
    122, 169, 254, 253,  64, 181, 
    233, 122,  40,  39, 213,  73, 
    160, 231, 253, 219, 168,  61, 
    227, 175, 145, 168, 247, 137, 
     64, 251,  81,  15,  27, 169, 
     93, 235,  36,  16, 250, 157, 
    109,   4,  90, 239, 229,  18, 
    114,  63, 108,  35,  58, 104, 
     82,   7, 173,  41, 191, 100, 
    184,   3,  10,  39, 255,  41, 
    244,  59, 165, 119,  65, 223, 
     14, 253,  98, 193, 111, 227, 
     67, 175,  95, 162,   1, 230, 
     43, 196, 135,  29, 176,  65, 
     74, 107, 134, 186, 246, 221, 
    213, 180,  65, 154,  62, 236, 
    122, 141, 138, 155, 124,  76, 
     48,  24, 139,  38,  96, 195, 
    191, 159, 201,  29, 212,  78, 
    157,  30,  69,  61,  90, 167, 
    199,  81, 143, 215, 233,  12, 
    234, 140, 214,  58, 127, 212, 
    191, 159, 240, 247,  26, 157, 
    115, 255,  50, 155,  53,  54, 
    134, 205,  26,  27, 195, 102, 
    141, 141,  97, 179, 198, 198, 
    176,  89,  99,  99, 216, 172, 
    177,  49, 108, 214, 216,  48, 
    194, 156,  88,  44, 207,  89, 
     91, 101,  96, 252,  67, 140, 
    125,  92, 226, 198, 102,  25, 
     79, 227,  43, 192,  18,  43, 
     12, 226,  43, 140,  29,  93, 
    185,   3,  11,  21, 136, 206, 
    127, 151, 252,  57,  30,  68, 
    209, 202, 103, 144, 138, 167, 
    150, 251, 226, 203, 203, 183, 
    162,  11, 149, 109,   5, 246, 
    201, 215, 143, 206,  25,  12, 
     82, 165, 227, 103, 206,  23, 
    200,  23, 227, 190, 143, 163, 
    239, 233, 147, 235,  73, 211, 
    224, 254,  26, 103,  66,  25, 
     76,  42, 193, 148,  10,  49, 
     75,  73, 244, 211,  58, 221, 
    131, 195, 189,  53,  38, 184, 
     48, 200,  74,  46,   4,  89, 
    197,   5, 179,  32,  41,  13, 
     75, 153,  70,  68,  41, 195, 
     86,  97,  35, 166, 148,  16, 
    118,  88,  74, 219,  82, 202, 
    110, 193, 214,  36, 132, 177, 
     96,  73,  33, 201,  70, 164, 
     48, 201, 218,  82,  64, 140, 
     39, 149, 234,  92, 227,  33, 
     14,  97, 180, 134, 201, 193, 
     66,  43, 194,  28,  90, 208, 
    226, 115, 131, 176,  44,  59, 
     20, 137, 216, 210, 182, 109, 
    147, 115, 187,  26, 139, 169, 
    106, 107, 171, 170, 182, 181, 
    169, 106, 123, 187,  10,  29, 
     20,  73, 121,  72,  38, 205, 
    195,  42, 201, 142,  64,  50, 
     33, 182, 202, 120, 238, 221, 
    117, 110,   6, 184,  91, 137, 
    211, 164, 118, 232, 222,  13, 
     85, 139, 216,   1,  73, 244, 
    213, 183,  56, 126,   4,  38, 
     12, 218, 105,  31, 126,  42, 
    244, 181, 145,  13, 112,  63, 
    104,   4, 198,   3, 123,  28, 
     25,  70,  50, 191, 107, 173, 
    245,  94,   2,  36, 142,   0, 
    253, 111,  95,  94, 123, 243, 
    163, 251,  43, 205,   9, 239, 
    131, 107,  22,   3,  75, 177, 
    187, 123, 215,  23,  52, 236, 
    193, 122,  16, 255,  37, 176, 
     84,  35, 245,  32, 182, 238, 
    174, 117,  47,  24,  20, 191, 
     25, 196, 209, 243, 225, 222, 
    236, 169,  35,  17, 196, 101, 
    145,  84, 105, 239,  89, 231, 
    138,  91, 200, 123, 206,  72, 
     38, 127, 187, 235, 194, 112, 
    127,  87, 122,  98, 166,  48, 
    237, 122, 206,  96, 174, 228, 
     57, 125, 185, 162,  59,  89, 
     26,  25,  30, 116, 188, 226, 
    164, 147, 190,  57, 145, 117, 
    139, 158, 211, 155, 159,  41, 
    228, 166, 221, 172, 127, 209, 
    229,  89, 119,  40, 239, 149, 
    134, 138, 249,  73, 215, 243, 
    110,  12, 165, 123, 166, 243, 
    249,  25,  12, 201, 228, 102, 
    221,  83, 133, 108,   6, 126, 
      2, 144, 138,  13, 123,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0,  71, 172, 166,  86, 
    170, 247,  51, 220,  88,  80, 
     68,  80,  99,   0,   0,   0, 
     67,  58,  92,  82, 101, 112, 
    111, 115,  92,  88,  98, 111, 
    120,  45,  65,  84,  71,  45, 
     83,  97, 109, 112, 108, 101, 
    115,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  80, 111, 115, 
    116,  80, 114, 111,  99, 101, 
    115, 115,  95,  80,  83,  66, 
    108, 111, 111, 109,  67, 111, 
    109,  98, 105, 110, 101,  46, 
    112, 100,  98
};
