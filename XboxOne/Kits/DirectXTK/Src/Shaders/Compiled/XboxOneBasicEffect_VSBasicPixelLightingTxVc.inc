#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[168]
// Embedded Data:
//  0x000000a8 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000a3 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 1
mov o0.xy, v2.xyxx
dp4 o1.x, v0.xyzw, cb0[15].xyzw
dp4 o1.y, v0.xyzw, cb0[16].xyzw
dp4 o1.z, v0.xyzw, cb0[17].xyzw
dp4_sat o1.w, v0.xyzw, cb0[14].xyzw
dp3 r0.x, v1.xyzx, cb0[19].xyzx
dp3 r0.y, v1.xyzx, cb0[20].xyzx
dp3 r0.z, v1.xyzx, cb0[21].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mul o3.w, v3.w, cb0[0].w
mov o3.xyz, v3.xyzx
dp4 o4.x, v0.xyzw, cb0[22].xyzw
dp4 o4.y, v0.xyzw, cb0[23].xyzw
dp4 o4.z, v0.xyzw, cb0[24].xyzw
dp4 o4.w, v0.xyzw, cb0[25].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[168], bundle is:[198] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 296 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 21;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x54           // 00000000000C: C2820154
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x50          // 000000000010: C2840150
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x4c         // 000000000014: C286014C
  s_buffer_load_dwordx16  s[16:31], s[0:3], 0x38        // 000000000018: C3080138
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 00000000001C: C3100158
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s6, v10                         // 000000000024: 0E001406
  v_mul_legacy_f32  v1, s10, v10                        // 000000000028: 0E02140A
  v_mac_f32     v0, s5, v9                              // 00000000002C: 3E001205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000030: C2000103
  v_mul_legacy_f32  v2, s14, v10                        // 000000000034: 0E04140E
  v_mac_f32     v1, s9, v9                              // 000000000038: 3E021209
  v_mac_f32     v0, s4, v8                              // 00000000003C: 3E001004
  v_mac_f32     v2, s13, v9                             // 000000000040: 3E04120D
  v_mac_f32     v1, s8, v8                              // 000000000044: 3E021008
  v_mul_legacy_f32  v3, v0, v0                          // 000000000048: 0E060100
  v_mul_legacy_f32  v9, s23, v7                         // 00000000004C: 0E120E17
  v_mul_legacy_f32  v10, s27, v7                        // 000000000050: 0E140E1B
  v_mul_legacy_f32  v11, s31, v7                        // 000000000054: 0E160E1F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000058: 0E1C0E13
  v_mac_f32     v2, s12, v8                             // 00000000005C: 3E04100C
  v_mac_f32     v3, v1, v1                              // 000000000060: 3E060301
  v_mul_legacy_f32  v8, s35, v7                         // 000000000064: 0E100E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000068: 0E1E0E27
  v_mul_legacy_f32  v20, s43, v7                        // 00000000006C: 0E280E2B
  v_mul_legacy_f32  v7, s47, v7                         // 000000000070: 0E0E0E2F
  v_mac_f32     v9, s22, v6                             // 000000000074: 3E120C16
  v_mac_f32     v10, s26, v6                            // 000000000078: 3E140C1A
  v_mac_f32     v11, s30, v6                            // 00000000007C: 3E160C1E
  v_mac_f32     v14, s18, v6                            // 000000000080: 3E1C0C12
  v_mac_f32     v3, v2, v2                              // 000000000084: 3E060502
  v_mac_legacy_f32  v8, s34, v6                         // 000000000088: 0C100C22
  v_mac_legacy_f32  v15, s38, v6                        // 00000000008C: 0C1E0C26
  v_mac_legacy_f32  v20, s42, v6                        // 000000000090: 0C280C2A
  v_mac_legacy_f32  v7, s46, v6                         // 000000000094: 0C0E0C2E
  v_mac_f32     v9, s21, v5                             // 000000000098: 3E120A15
  v_mac_f32     v10, s25, v5                            // 00000000009C: 3E140A19
  v_mac_f32     v11, s29, v5                            // 0000000000A0: 3E160A1D
  v_mac_f32     v14, s17, v5                            // 0000000000A4: 3E1C0A11
  v_rsq_f32     v3, v3                                  // 0000000000A8: 7E065D03
  v_mac_legacy_f32  v8, s33, v5                         // 0000000000AC: 0C100A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000B0: 0C1E0A25
  v_mac_legacy_f32  v20, s41, v5                        // 0000000000B4: 0C280A29
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000B8: 0C0E0A2D
  v_mac_f32     v9, s20, v4                             // 0000000000BC: 3E120814
  v_mac_f32     v10, s24, v4                            // 0000000000C0: 3E140818
  v_mac_f32     v11, s28, v4                            // 0000000000C4: 3E16081C
  v_mad_legacy_f32  v14, v4, s16, v14 clamp             // 0000000000C8: D280080E 04382104
  v_mul_legacy_f32  v2, v2, v3                          // 0000000000D0: 0E040702
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000D4: 0E020701
  v_mul_legacy_f32  v0, v0, v3                          // 0000000000D8: 0E000700
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  v_mul_legacy_f32  v3, s0, v19                         // 0000000000E0: 0E062600
  v_mac_legacy_f32  v8, s32, v4                         // 0000000000E4: 0C100820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000E8: 0C1E0824
  v_mac_legacy_f32  v20, s40, v4                        // 0000000000EC: 0C280828
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000F0: 0C0E082C
  v_mov_b32     v4, 0                                   // 0000000000F4: 7E080280
  v_mov_b32     v5, 1.0                                 // 0000000000F8: 7E0A02F2
  exp           pos0, v8, v15, v20, v7 done             // 0000000000FC: F80008CF 07140F08
  exp           param0, v12, v13, v4, v5                // 000000000104: F800020F 05040D0C
  exp           param1, v9, v10, v11, v14               // 00000000010C: F800021F 0E0B0A09
  exp           param2, v2, v1, v0, v5                  // 000000000114: F800022F 05000102
  exp           param3, v16, v17, v18, v3               // 00000000011C: F800023F 03121110
  s_endpgm                                              // 000000000124: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  296
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 6
//  num_alu                           : 51
//  num_fc                            : 12
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 296
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 6
// num_alu                           : 51
// num_fc                            : 12
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[368], bundle is:[210] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 392 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 58;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x58       // 00000000000C: C3060958
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx16  s[28:43], s[8:11], 0x38       // 000000000018: C30E0938
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x54        // 00000000001C: C2960954
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x50        // 00000000002C: C2980950
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[52:55], s[8:11], 0x4c        // 00000000003C: C29A094C
  v_mac_legacy_f32  v0, s12, v4                         // 000000000040: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000044: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 000000000048: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 00000000004C: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000050: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000054: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 000000000058: 0C060C1A
  v_mac_legacy_f32  v2, s20, v4                         // 00000000005C: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 000000000060: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v11, s35, v7                        // 000000000068: 0E160E23
  v_mul_legacy_f32  v14, s46, v10                       // 00000000006C: 0E1C142E
  v_mac_legacy_f32  v3, s24, v4                         // 000000000070: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000074: E0704040 04400000
  v_mac_legacy_f32  v11, s34, v6                        // 00000000007C: 0C160C22
  v_mul_legacy_f32  v0, s39, v7                         // 000000000080: 0E000E27
  v_mul_legacy_f32  v15, s50, v10                       // 000000000084: 0E1E1432
  v_mac_legacy_f32  v14, s45, v9                        // 000000000088: 0C1C122D
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 00000000008C: E0704044 04400100
  v_mac_legacy_f32  v11, s33, v5                        // 000000000094: 0C160A21
  v_mac_legacy_f32  v0, s38, v6                         // 000000000098: 0C000C26
  v_mul_legacy_f32  v1, s43, v7                         // 00000000009C: 0E020E2B
  v_mul_legacy_f32  v10, s54, v10                       // 0000000000A0: 0E141436
  v_mac_legacy_f32  v15, s49, v9                        // 0000000000A4: 0C1E1231
  v_mac_legacy_f32  v14, s44, v8                        // 0000000000A8: 0C1C102C
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000AC: E0704048 04400200
  v_mac_legacy_f32  v11, s32, v4                        // 0000000000B4: 0C160820
  v_mac_legacy_f32  v0, s37, v5                         // 0000000000B8: 0C000A25
  v_mac_legacy_f32  v1, s42, v6                         // 0000000000BC: 0C020C2A
  v_mul_legacy_f32  v2, s31, v7                         // 0000000000C0: 0E040E1F
  v_mac_legacy_f32  v10, s53, v9                        // 0000000000C4: 0C141235
  v_mac_legacy_f32  v15, s48, v8                        // 0000000000C8: 0C1E1030
  v_mul_legacy_f32  v7, v14, v14                        // 0000000000CC: 0E0E1D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000D0: E070404C 04400300
  v_mac_legacy_f32  v0, s36, v4                         // 0000000000D8: 0C000824
  v_mac_legacy_f32  v1, s41, v5                         // 0000000000DC: 0C020A29
  v_mac_legacy_f32  v2, s30, v6                         // 0000000000E0: 0C040C1E
  v_mac_legacy_f32  v10, s52, v8                        // 0000000000E4: 0C141034
  v_mac_legacy_f32  v7, v15, v15                        // 0000000000E8: 0C0E1F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 0000000000EC: E0704000 04400C00
  v_mac_legacy_f32  v1, s40, v4                         // 0000000000F4: 0C020828
  v_mac_legacy_f32  v2, s29, v5                         // 0000000000F8: 0C040A1D
  v_mac_legacy_f32  v7, v10, v10                        // 0000000000FC: 0C0E150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000100: E0704004 04400D00
  v_mad_legacy_f32  v2, v4, s28, v2 clamp               // 000000000108: D2800802 04083904
  v_rsq_f32     v3, v7                                  // 000000000110: 7E065D07
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000114: E0704010 04400B00
  v_mul_legacy_f32  v4, v10, v3                         // 00000000011C: 0E08070A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000120: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000128: C2028903
  v_mul_legacy_f32  v0, v15, v3                         // 00000000012C: 0E00070F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000130: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v3                         // 000000000138: 0E02070E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:28 glc slc // 00000000013C: E070401C 04400200
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000144: E0704020 04400400
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 00000000014C: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000154: E0704028 04400100
  s_waitcnt     lgkmcnt(0)                              // 00000000015C: BF8C007F
  v_mul_legacy_f32  v0, s5, v19                         // 000000000160: 0E002605
  buffer_store_dword  v16, v0, s[0:3], s4 offset:48 glc slc // 000000000164: E0704030 04401000
  buffer_store_dword  v17, v0, s[0:3], s4 offset:52 glc slc // 00000000016C: E0704034 04401100
  buffer_store_dword  v18, v0, s[0:3], s4 offset:56 glc slc // 000000000174: E0704038 04401200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 00000000017C: E070403C 04400000
  s_endpgm                                              // 000000000184: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   58
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   88
//  CycleSimNWaves:             88
//  Code Size:                  392
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 18
//  num_alu                           : 49
//  num_fc                            : 14
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 11
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 58
// m_uSCCodeSize                     : 392
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 88
// m_uCycleSimNWaves                 : 88

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 18
// num_alu                           : 49
// num_fc                            : 14
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 11
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[580], bundle is:[207] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_VSBasicPixelLightingTxVc.pdb
// Shader Semantic Hash      : 0xfab87bc2d6a16fd4
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 348 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 21;
NumSgprs             = 50;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x38         // 00000000000C: C3020138
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x4c         // 000000000010: C28A014C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x50         // 000000000014: C28C0150
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x54         // 000000000018: C28E0154
  s_waitcnt     lgkmcnt(0)                              // 00000000001C: BF8C007F
  s_buffer_load_dword  s23, s[0:3], 0x03                // 000000000020: C20B8103
  s_buffer_load_dwordx16  s[32:47], s[0:3], 0x58        // 000000000024: C3100158
  s_mov_b32     m0, 0x00010000                          // 000000000028: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000030: BF8C0F70
  v_mul_legacy_f32  v0, s11, v7                         // 000000000034: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000038: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 00000000003C: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000040: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 000000000044: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000048: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000054: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000058: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 00000000005C: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mul_legacy_f32  v11, s7, v7                         // 000000000064: 0E160E07
  v_mac_legacy_f32  v11, s6, v6                         // 000000000068: 0C160C06
  v_mac_legacy_f32  v11, s5, v5                         // 00000000006C: 0C160A05
  v_mad_legacy_f32  v11, v4, s4, v11 clamp              // 000000000070: D280080B 042C0904
  v_mul_legacy_f32  v14, s22, v10                       // 000000000078: 0E1C1416
  v_mac_legacy_f32  v14, s21, v9                        // 00000000007C: 0C1C1215
  v_mac_legacy_f32  v14, s20, v8                        // 000000000080: 0C1C1014
  v_mul_legacy_f32  v15, s26, v10                       // 000000000084: 0E1E141A
  v_mac_legacy_f32  v15, s25, v9                        // 000000000088: 0C1E1219
  v_mac_legacy_f32  v15, s24, v8                        // 00000000008C: 0C1E1018
  v_mul_legacy_f32  v10, s30, v10                       // 000000000090: 0E14141E
  v_mac_legacy_f32  v10, s29, v9                        // 000000000094: 0C14121D
  v_mac_legacy_f32  v10, s28, v8                        // 000000000098: 0C14101C
  v_mul_legacy_f32  v8, v10, v10                        // 00000000009C: 0E10150A
  v_mac_legacy_f32  v8, v15, v15                        // 0000000000A0: 0C101F0F
  v_mac_legacy_f32  v8, v14, v14                        // 0000000000A4: 0C101D0E
  v_rsq_f32     v8, v8                                  // 0000000000A8: 7E105D08
  v_mul_legacy_f32  v9, v14, v8                         // 0000000000AC: 0E12110E
  v_mul_legacy_f32  v14, v15, v8                        // 0000000000B0: 0E1C110F
  v_mul_legacy_f32  v8, v10, v8                         // 0000000000B4: 0E10110A
  s_waitcnt     lgkmcnt(0)                              // 0000000000B8: BF8C007F
  v_mul_legacy_f32  v10, s23, v19                       // 0000000000BC: 0E142617
  v_mul_legacy_f32  v15, s35, v7                        // 0000000000C0: 0E1E0E23
  v_mac_legacy_f32  v15, s34, v6                        // 0000000000C4: 0C1E0C22
  v_mac_legacy_f32  v15, s33, v5                        // 0000000000C8: 0C1E0A21
  v_mac_legacy_f32  v15, s32, v4                        // 0000000000CC: 0C1E0820
  v_mul_legacy_f32  v19, s39, v7                        // 0000000000D0: 0E260E27
  v_mac_legacy_f32  v19, s38, v6                        // 0000000000D4: 0C260C26
  v_mac_legacy_f32  v19, s37, v5                        // 0000000000D8: 0C260A25
  v_mac_legacy_f32  v19, s36, v4                        // 0000000000DC: 0C260824
  v_mul_legacy_f32  v20, s43, v7                        // 0000000000E0: 0E280E2B
  v_mac_legacy_f32  v20, s42, v6                        // 0000000000E4: 0C280C2A
  v_mac_legacy_f32  v20, s41, v5                        // 0000000000E8: 0C280A29
  v_mac_legacy_f32  v20, s40, v4                        // 0000000000EC: 0C280828
  v_mul_legacy_f32  v7, s47, v7                         // 0000000000F0: 0E0E0E2F
  v_mac_legacy_f32  v7, s46, v6                         // 0000000000F4: 0C0E0C2E
  v_mac_legacy_f32  v7, s45, v5                         // 0000000000F8: 0C0E0A2D
  v_mac_legacy_f32  v7, s44, v4                         // 0000000000FC: 0C0E082C
  s_movk_i32    s0, 0x0050                              // 000000000100: B0000050
  s_nop         0x0000                                  // 000000000104: BF800000
  v_mul_lo_i32  v1, v1, s0                              // 000000000108: D2D60001 00000101
  ds_write2_b32  v1, v15, v19 offset0:16 offset1:17     // 000000000110: D8381110 00130F01
  ds_write2_b32  v1, v20, v7 offset0:18 offset1:19      // 000000000118: D8381312 00071401
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000120: D8380100 000D0C01
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000128: D8380504 00020001
  ds_write2_b32  v1, v3, v11 offset0:6 offset1:7        // 000000000130: D8380706 000B0301
  ds_write2_b32  v1, v9, v14 offset0:8 offset1:9        // 000000000138: D8380908 000E0901
  ds_write_b32  v1, v8 offset:40                        // 000000000140: D8340028 00000801
  ds_write2_b32  v1, v16, v17 offset0:12 offset1:13     // 000000000148: D8380D0C 00111001
  ds_write2_b32  v1, v18, v10 offset0:14 offset1:15     // 000000000150: D8380F0E 000A1201
  s_endpgm                                              // 000000000158: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   50
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   93
//  CycleSimNWaves:             93
//  Code Size:                  348
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 11
//  num_alu                           : 50
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 47
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 50
// m_uSCCodeSize                     : 348
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 93
// m_uCycleSimNWaves                 : 93

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 11
// num_alu                           : 50
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 1
// num_inst_vop2                     : 47
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_VSBasicPixelLightingTxVc[] =
{
     68,  88,  66,  67, 211,  89, 
    116, 235, 105, 230, 136, 168, 
    178, 155, 160, 206, 252, 138, 
    194, 220,   1,   0,   0,   0, 
     77,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    200,   0,   0,   0, 108,   1, 
      0,   0, 200,  13,   0,   0, 
    216,  13,   0,   0,  73,  83, 
     71,  78, 140,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 123,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 132,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,  12,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   7,   8,   0,   0, 
    137,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  67,  79,  76, 
     79,  82,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88,  84,  12,   0,   0, 
     80,   0,   1,   0,  21,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 168,   0, 
      0,   0,  80,   0,   1,   0, 
    163,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  26,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 114,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   3,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   4,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   1,   0,   0,   0, 
     54,   0,   0,   5,  50,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  16,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   0,  17,  32,   0,   8, 
    130,  32,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     14,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  19,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  20,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   0,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     21,   0,   0,   0,  16,   0, 
      0,   7, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  68,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,  32,  16,   0, 
      2,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   8, 
    130,  32,  16,   0,   3,   0, 
      0,   0,  58,  16,  16,   0, 
      3,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 114,  32,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     23,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  24,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  25,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 200,   0, 
      0,   0,  23,   0,   1,   0, 
     32,  82,  23,   0, 120,   1, 
    237, 152, 205,  79,  19,  65, 
     20, 192, 103, 183, 219, 233, 
    118,  25,  94, 151, 101,  41, 
     95, 165,  20,  69, 172,  31, 
    124, 168,  23,  98, 204, 168, 
    160, 241,   0,   9,   4,  42, 
    225, 176, 198, 148,  82, 160, 
      6, 104, 165, 196, 144, 152, 
     96,  37,  68,  47, 252,   1, 
     98, 188, 152, 120, 242,  47, 
     48, 209,   8,  41,  87, 141, 
    209,  16, 255,   6, 207, 158, 
    136,  23, 124, 175, 221,  77, 
     26, 192, 179, 198, 236,  47, 
    249, 205, 219, 153, 157, 221, 
    157, 121, 179, 167,  55, 209, 
    204,  42, 188, 125, 255, 117, 
    155,  98, 227,  97, 226, 193, 
    150, 202,  88, 144,  58, 136, 
     70,  13,  82, 176, 169, 101, 
    236,  71,  19, 181, 140, 117, 
     83, 163, 160,  56, 151, 134, 
     46, 163,  73, 236, 223, 160, 
    136, 210, 125, 138,  47, 183, 
     31,  14, 125, 254, 244, 104, 
    104,  12, 175,   7, 208,  40, 
    122, 215,  85, 162,  28, 189, 
    130,  10, 212, 251, 102,  45, 
    222, 247, 233,  83, 181,   4, 
    208, 126, 180, 150,  16,  53, 
    200, 177, 247, 164, 169,  57, 
    153,  91, 168, 187, 165,  19, 
    161, 181, 121, 208, 123, 105, 
    157,   4, 237, 247,  95, 131, 
    114, 228, 157,  19,  65, 231, 
     81,  11, 160, 148,  55, 226, 
    133, 187, 105, 111, 202, 190, 
    219, 167,  64, 123, 219,  69, 
    255, 196,  33, 226, 157, 139, 
    135, 215, 167, 200, 217, 216, 
      0,  87, 158,  39, 184, 186, 
    103, 242,  64, 228,  18, 199, 
     65, 142, 201, 227, 120, 216, 
     28,  15, 137, 235, 104,  24, 
     53, 208,  58,  20, 147, 202, 
    235,  81,  92,  32, 143, 160, 
     38, 218, 128,  90, 104,  35, 
    138, 123, 226, 184,  48, 142, 
     63,  15, 199, 255, 149, 183, 
    160, 173, 104,  27, 218, 142, 
    198, 208,  14,  52, 142, 118, 
    122, 107, 168, 194, 149, 234, 
     14, 185, 138,  63,  42, 194, 
      3,  94,   6, 254, 111,  40, 
      7, 152, 230,  10, 148,  11, 
    234, 123, 212,  94, 251, 248, 
    248, 248, 248, 248, 248, 248, 
    248, 248, 248, 248, 248, 248, 
    248, 248, 252,  45, 212, 174, 
    141, 143,  44,  80, 218, 125, 
    194, 182, 118,  82, 202,  70, 
    121,  92, 217,  44, 143,  42, 
    207, 202, 131, 138, 190,  55, 
    173, 152, 123,   5,  28, 231, 
     54,   3, 195,  86,  33, 104, 
     49,  25,  80,  88,  25, 108, 
     13, 194, 150,  42,  53, 147, 
    201, 122,  75, 147, 186, 169, 
     74, 166, 112, 104,   6,  11, 
    218, 193, 134,  78, 136,  66, 
     35, 196,  64, 152, 154,  84, 
      2,  92, 158,   6,  19, 206, 
     66,  28,  46,  64,  18, 250, 
      1,  32,  42,  44, 217,  38, 
    108,  25,  23,  81, 105, 137, 
    152,  84, 131,  92, 158,  18, 
    166, 232,  17, 113, 113,  94, 
     36,  69, 159,   0, 209, 100, 
     88, 178, 213, 176, 101, 135, 
     17, 149,  13,  70,  76,   6, 
    238, 241, 245,  46, 195,  20, 
    103, 140, 184,  56, 103,  36, 
     69, 175,   1, 194, 214,  45, 
    217, 162, 219,  50, 166,  71, 
     37, 232, 165, 111,  90, 215, 
    160, 166, 134,  52,  80,  66, 
     42, 176,  16,   3, 218,  19, 
    235, 225, 144, 208,  77, 209, 
    173, 199,  69,  82,  79, 138, 
    139,  58, 136, 146, 170, 175, 
    255,  84, 141, 245,  47,  58, 
     59, 208,  35, 118,  40, 162, 
    178,   3,  81, 175,   5,  59, 
     49, 134, 141,  58, 232, 199, 
    168,  42,  44, 120,  29, 163, 
    217,  96,   5,  24, 123, 186, 
     67, 245,  58, 170, 193,  86, 
    171,  91,  85,  90, 169, 228, 
    117, 100, 204, 164, 230, 200, 
     88, 229,  90, 171, 214, 199, 
     60, 186, 169,  64,  75, 184, 
    145, 234, 184,  97,  84, 113, 
     43, 135, 109, 168, 230,  86, 
    215, 246, 243, 175, 191, 151, 
     31, 191, 251,  69, 215, 132, 
    227,  62, 115, 205, 141,   9, 
    212, 171, 151,  86,  41,  81, 
    115, 140,  77, 119, 254, 170, 
     27, 105, 173,  84, 163,   2, 
    175, 146,  75, 133,  75, 228, 
    141, 123, 255, 149,  27, 169, 
    190,  85, 135,  30,  93, 199, 
      7, 247, 254,  50,  74,  43, 
     29, 190, 234,  76, 100,  11, 
    249, 162,  51,  61, 147,  95, 
    235, 189, 153, 186, 211,  59, 
    153,  94,  42,  44, 102, 139, 
    206,  72, 110, 181, 232, 220, 
    202, 173, 100,  51, 171, 211, 
    169,  17, 167, 184, 146, 113, 
     38,  23, 210, 179, 217, 149, 
    162,  51, 156,  95,  42, 228, 
     22, 179, 179, 149, 135, 198, 
    150, 179,  67, 233,  98,  46, 
    115, 123, 110,  14, 167, 222, 
    159, 154, 172, 244, 198, 115, 
    107, 217, 197, 209, 220, 252, 
    194, 106, 110, 121,  62, 181, 
     54, 149, 233,  43, 204, 206, 
    176, 223, 161,  53, 132,   0, 
      0,   0,  53,  16,   0,   0, 
    212,   0,   0,   0,  23,   0, 
      1,   0,  16, 198,  23,   0, 
    120,   1, 237, 152, 205, 107, 
     19,  65,  24, 198,  39, 155, 
    113, 178, 137, 211, 201,  54, 
    221, 198, 180,  77, 211, 214, 
    207, 250,  81, 109, 165, 138, 
    138, 200, 218,  42,  10,  22, 
     90, 108,  41,  69,  35,  90, 
    219, 168, 145, 218, 134, 166, 
    135, 130, 224,  23, 130, 138, 
    197, 163, 136,  55, 175, 158, 
     60, 137,  39,  45,  41, 232, 
     85,  68,  61, 123, 244,  79, 
     16,  47, 250,  60, 217, 141, 
    150, 168, 103,  69, 246,  71, 
    158, 121, 231, 115, 231, 153, 
    157, 205, 229, 125, 189,  78, 
     84,  57, 245,  65,  61, 101, 
    108, 250, 214, 121, 121, 201, 
     18,  98,  13,  27,   0, 213, 
     42,  37, 151, 165,  16, 249, 
     52,  75,  33,  58,  89,  68, 
     32,  76, 224, 208,   1, 232, 
     46, 218,  30,  98,  55, 196, 
    113, 198, 236, 155, 251,   3, 
    207, 207,  61,  24,  56, 141, 
    250,  30, 136, 203,  39,   2, 
     29, 130,  82,  80,  31, 100, 
    160, 122,  26, 161, 154,  15, 
    110, 181,  26, 182, 119,  65, 
    171, 177,  89,   0, 174,  91, 
     11, 253,  96, 146, 197, 239, 
     25, 129, 130, 163, 253,  22, 
    122, 227, 243, 106, 212, 124, 
    242, 188, 255,  26, 124,  39, 
    181, 123,  34, 188, 143, 213, 
    208, 187, 132, 200, 151, 102, 
    150, 254,  26, 114,  60, 184, 
     87,  46, 231, 217, 150, 161, 
     63, 241,  13, 212, 158,  67, 
     88, 239, 135,   8, 235,  74, 
     12, 247, 170, 200, 157,  78, 
    101, 173,  56,  42, 154, 236, 
     83, 232,  84, 184,  72, 165, 
    160,  24, 132, 139,  82, 113, 
     40,   1, 225, 162, 148, 134, 
     26,  32,  24,  84,  73, 200, 
    129, 240, 210,  21,  62,  14, 
    213,   4, 193, 148, 130,  95, 
      5, 143,  10, 223, 171, 202, 
     64,  45,  80,  43, 212,   6, 
    101, 161, 118,  40,   7, 117, 
      4, 223, 140, 164,  19, 180, 
     89,   0,  21, 241,  79, 170, 
     44, 255, 139,  86, 209,  40, 
    195, 127,  11, 223,  65, 237, 
    255,  64, 252, 183, 225, 195, 
     59, 166,  66,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
     66,  66,  66,  66,  66,  66, 
    254,  38,  86, 215, 173, 151, 
     34, 122, 123, 249, 186,  88, 
    122,  53,  17,  87,  43,  37, 
    196, 164,  17, 102,  95, 220, 
    172, 140, 197,  31,  86, 116, 
    244, 198, 178, 209,  66,  55, 
     25, 203, 140, 196,  31,  85, 
     26,  18,  66, 167, 180, 165, 
    215,  25, 105, 134, 226, 143, 
     43, 218,  22, 186,  49,  97, 
    233, 180, 150, 186, 205,  40, 
    227, 216, 150, 110,  78,  72, 
    221, 170, 149, 118, 109, 169, 
     91,  18,  74, 243, 217,  27, 
     76, 218, 236, 116, 179,  38, 
     99,  43, 237, 121, 165,  79, 
     66, 120, 114,  61,  86, 109, 
    193,  94, 187, 221, 156, 233, 
     73, 101, 245,  17, 246,  71, 
     60, 217, 149,  72, 235, 205, 
    216, 115,  59, 246, 220, 235, 
    186, 166,  47, 149, 211,  59, 
    156, 172,  62, 206, 113, 203, 
    147, 157, 118,  90, 111, 130, 
    143, 109, 240, 209,   1,  31, 
    123,  82, 174, 238, 117, 114, 
    218, 180,  27,  51, 196,  57, 
     81,  79, 110, 132, 175, 173, 
    240, 149, 131, 175, 126, 199, 
    213, 201,  14, 156, 130,  99, 
    218, 147, 221, 240, 216,  14, 
    143, 137, 102, 163,  37, 251, 
     26,  60, 105, 217,  55, 222, 
    201, 253, 182, 140, 157,  81, 
    215,  28, 246, 173, 245, 100, 
     34, 102,  27, 151, 117, 120, 
    141, 222, 179,  42, 201, 152, 
     48,  25, 182, 225, 209, 196, 
     44, 147, 101, 157, 126,  24, 
     37, 246, 100, 196, 220, 110, 
     70, 204, 225, 185, 215, 108, 
     22, 166, 151, 109, 199, 147, 
    253, 140, 141, 158, 220, 199, 
    152, 242, 228,  65,  70, 204, 
     23, 226, 230, 171, 106, 154, 
    208, 170, 254, 126, 208, 194, 
     84,  90,  93,  95, 134,  69, 
     93, 159, 195, 162, 174, 175, 
     90, 151, 126,  46, 174, 198, 
    163,  32, 247, 184,  16, 196, 
    141,  80,  28, 138,   8,  63, 
     71, 215,  10, 201,  32, 147, 
    247, 126, 238, 201, 199, 202, 
    213,  23,  95,  89,  39, 111, 
    131,  53, 207, 130, 200, 188, 
    179, 134, 126, 194, 140, 244, 
    175, 124,   9, 230, 127,  14, 
     34, 189,  50,  71, 102, 252, 
    236, 161, 159,  44,   5, 153, 
     32,  63, 238,   4, 145,  57, 
     53, 230, 150, 235, 125, 244, 
      6, 227, 179,  16, 157,  14, 
     30, 200, 159,  44, 148, 230, 
    202, 249, 137, 243, 115, 139, 
     61, 135, 199, 142, 245, 140, 
     78,  94,  41, 205,  20, 202, 
    249,  19, 197, 133, 114, 254, 
     72, 113, 190,  48, 181,  48, 
     49, 118,  34,  95, 158, 159, 
    202, 143,  94, 154, 156,  46, 
    204, 151, 243, 131, 115,  87, 
     74, 197, 153, 194, 116, 117, 
    209, 240, 108,  97,  96, 178, 
     92, 156,  58, 122, 225,   2, 
    166, 158,  29,  31, 173, 182, 
     70, 138, 139, 133, 153, 161, 
    226, 197,  75,  11, 197, 217, 
    139,  99, 139, 227,  83,  59, 
     75, 211, 231, 197, 119,  99, 
     72, 157, 154,   0,  53,  16, 
      0,   0, 209,   0,   0,   0, 
     23,   0,   1,   0,   0, 134, 
     23,   0, 120,   1, 237, 152, 
     77,  79,  19,  81,  20, 134, 
    239, 180, 195, 101,  58,  61, 
    156,  78, 219, 161,  10, 150, 
      1,  21, 107, 253,  64, 212, 
    176,  32, 174,  20,  52,  46, 
     32, 161,  17,  36,  44, 198, 
     24, 132, 162,  53,   8,  13, 
    101,  65,  98, 162,  96, 162, 
     38, 134,  24, 255, 130,  59, 
    151,  46,  93,   9,  41,  91, 
     76, 212,  24, 195, 198, 255, 
    224, 218, 152, 224, 123, 218, 
    169,  54,  68, 226,  82,  99, 
    230,  73, 222, 115, 238, 189, 
    115, 103, 230, 220, 143, 213, 
    251, 228, 128, 170, 241, 197, 
    191, 254,  65, 114, 122, 183, 
    231, 238, 122,  68, 169,  22, 
    233,  52,  81, 118,  37,  42, 
    149, 205,  72,  84, 170,  87, 
    130,   1,  97, 110,  59, 210, 
    121, 200,  71, 255,  34, 114, 
     30, 146, 231, 146, 223, 109, 
     63,  26, 154, 155, 123,  60, 
    132, 166, 234, 131, 228, 119, 
     55,   2, 201, 220,  56,  36, 
    239,  58, 144,  16, 147, 208, 
    132, 150,   0, 240, 155, 159, 
    200, 111,  69, 253,  80,  51, 
    173,  18, 192, 222, 111, 168, 
    105,   9, 191, 103,   4, 146, 
    250, 247,  67, 106,  19,  26, 
    223, 108, 212, 217,  24, 255, 
    151, 144,  61, 105, 156, 147, 
     32, 231, 209,  12,  67,  81, 
     72, 216,  14,  22, 221, 152, 
     98,   5, 231,  42, 195, 178, 
    182,  77, 104,  63, 118, 129, 
     41, 141,  38,  26, 125, 201, 
     90, 141, 157, 213, 198, 211, 
     30,  29, 217, 114, 116,  52, 
    113,  78,  99,  80, 227,  66, 
    105,  28, 166, 198,  33, 105, 
     11, 194, 134, 106,  27, 194, 
      5, 208,   4, 181,  65,  40, 
     80,  39,  32, 108, 178,  78, 
     66,  41,  40,  13,  97,  77, 
     26, 133, 105, 212, 168, 113, 
    129, 244,  65, 168,   3, 234, 
    132,  14,  65,  89, 168,  11, 
    242, 160, 238, 224, 238, 154, 
     82,   9, 250,  18, 128,  54, 
    234,  43, 213, 145, 250,  77, 
    210, 209, 198,  78, 252, 159, 
    200,  30,  96, 155, 127,  82, 
    223, 141, 250, 121,  55, 174, 
     72,  65,  66,  72,  72,  72, 
     72,  72,  72,  72,  72,  72, 
     72,  72,  72,  72,  72,  72, 
    200,  95,  34, 114, 248, 209, 
     91,  21,  93, 221, 124, 168, 
    214,  55,   6, 141, 200, 214, 
    168, 241, 172,  90,  48, 214, 
    171,  19, 198, 243, 170, 140, 
     69, 215, 226, 213,  41, 195, 
    217, 218, 141, 126, 127,  43, 
    174,  70,  57, 177, 190,  17, 
    103, 197,  54,  41, 138, 217, 
    138,  44,  75,  81, 130,  77, 
    102,  50, 169, 205,  54, 137, 
     44, 147, 210, 172,  57,  69, 
    154, 146, 182,  38, 199, 210, 
    212, 202,  25, 214, 148, 161, 
     22,  59,  67, 113, 107, 245, 
    163,  25,  59, 109, 102, 220, 
     44, 183, 167, 178, 228,  58, 
     89, 234, 116,  61, 238,  72, 
    121, 116, 208, 241, 200, 115, 
     93, 238,  74, 185, 148, 117, 
     92, 178, 219,  29,  78, 116, 
     59, 196,  93,  14,  89,  55, 
    156,   7, 156,  76, 113,  34, 
    153, 101,  59, 233, 176, 212, 
    118,  32, 231, 242,  81, 246, 
    248,   8, 121, 116, 216, 246, 
    168, 199, 242, 232,  56, 231, 
     56,  71,  57,  58, 102, 231, 
    168, 215, 202, 209,  41, 206, 
    243,  73, 202, 211,   9,  59, 
     79, 121,  43,  79, 253, 204, 
    124, 134, 152, 250, 108, 166, 
    211,  22,  83,  65, 169, 215, 
     74, 173, 110,  24, 234, 243, 
     71, 177, 174, 156, 228, 224, 
    142, 145,  72, 171,  84,  26, 
    217, 109, 197, 146, 145, 169, 
     77, 153,  45, 200,  42, 162, 
    116,  43, 114,  52, 174, 172, 
     24, 114, 140,  85,  94,  13, 
    236,  24, 150,  82, 212, 134, 
    190, 147,  84, 156,  64,  78, 
    217, 216, 217, 181,  13, 241, 
    248, 196,  80, 173,  59,  97, 
    117,  58, 196,  24, 218,  51, 
     86, 243,  58, 247, 140, 213, 
    218, 166,  76, 254, 197,  84, 
    224,  29,  14,   4,  89, 188, 
     95, 241,  75, 141, 192, 109, 
    236, 132, 204, 192, 137, 251, 
    180, 248, 242, 115, 245, 254, 
    155, 111, 210,  22,  94,   4, 
    239, 148, 131, 220,   3,  17, 
    244,  39, 222,   4, 243,  95, 
      5,  89, 106,  21, 143, 139, 
    235, 238,  95, 221, 236,   4, 
     59, 193, 243, 247,  65,  22, 
     79,  76,  60, 231, 189, 117, 
    124,  13, 158,  47,  64,  82, 
    233, 240,   5, 255,  90, 177, 
    188,  88, 241, 167, 110,  45, 
    174, 244,  93, 154, 184, 218, 
     55,  62, 125, 175,  60,  95, 
    172, 248,  35, 165, 229, 138, 
    127, 185, 180,  84, 156,  89, 
    158, 154,  24, 241,  43,  75, 
     51, 254, 248, 157, 233, 217, 
    226,  82, 197,  31,  94, 188, 
     87,  46, 205,  23, 103, 107, 
     47, 141,  45,  20, 135, 166, 
     43, 165, 153,  43, 115, 115, 
    152, 122, 115, 114, 188, 214, 
     43, 148,  86, 138, 243, 163, 
    165, 219, 119, 150,  75,  11, 
    183,  39,  86,  38, 103, 206, 
    148, 103, 111, 169,  31,  24, 
    178, 140,  81,   0,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0, 212, 111, 161, 214, 
    194, 123, 184, 250,  88,  80, 
     68,  80, 109,   0,   0,   0, 
     67,  58,  92,  82, 101, 112, 
    111, 115,  92,  88,  98, 111, 
    120,  45,  65,  84,  71,  45, 
     83,  97, 109, 112, 108, 101, 
    115,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  66,  97, 115, 
    105,  99,  69, 102, 102, 101, 
     99, 116,  95,  86,  83,  66, 
     97, 115, 105,  99,  80, 105, 
    120, 101, 108,  76, 105, 103, 
    104, 116, 105, 110, 103,  84, 
    120,  86,  99,  46, 112, 100, 
     98
};
