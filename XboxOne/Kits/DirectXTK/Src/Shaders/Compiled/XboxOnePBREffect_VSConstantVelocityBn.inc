#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[210]
// Embedded Data:
//  0x000000d2 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000cd - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_output o5.xyzw
dcl_temps 2
mov o0.xy, v2.xyxx
dp4 r0.x, v0.xyzw, cb0[1].xyzw
dp4 r0.y, v0.xyzw, cb0[2].xyzw
dp4 r0.z, v0.xyzw, cb0[3].xyzw
mov r0.w, l(1.000000)
mov o1.xyzw, r0.xyzw
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r0.xyzx, cb0[5].xyzx
dp3 r1.y, r0.xyzx, cb0[6].xyzx
dp3 r1.z, r0.xyzx, cb0[7].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul o2.xyz, r0.xxxx, r1.xyzx
mov o3.xyzw, cb0[22].xyzw
dp4 o4.x, v0.xyzw, cb0[8].xyzw
dp4 o4.y, v0.xyzw, cb0[9].xyzw
dp4 o4.z, v0.xyzw, cb0[10].xyzw
dp4 o4.w, v0.xyzw, cb0[11].xyzw
dp4 o5.x, v0.xyzw, cb0[12].xyzw
dp4 o5.y, v0.xyzw, cb0[13].xyzw
dp4 o5.z, v0.xyzw, cb0[14].xyzw
dp4 o5.w, v0.xyzw, cb0[15].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[210], bundle is:[220] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_VSConstantVelocityBn.pdb
// Shader Semantic Hash      : 0x6047d357550882f5
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 5, paramIdx 4, paramSlot 0

codeLenInByte        = 396 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 22;
NumSgprs             = 62;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000008
SVOC:VS_EXPORT_COUNT        = 4
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x1c           // 00000000000C: C282011C
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x18          // 000000000010: C2840118
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x14         // 000000000014: C2860114
  s_buffer_load_dwordx8  s[16:23], s[0:3], 0x04         // 000000000018: C2C80104
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x0c         // 00000000001C: C28C010C
  s_buffer_load_dwordx16  s[28:43], s[0:3], 0x20        // 000000000020: C30E0120
  s_buffer_load_dwordx16  s[44:59], s[0:3], 0x30        // 000000000024: C3160130
  s_waitcnt     vmcnt(0)                                // 000000000028: BF8C0F70
  v_mad_f32     v0, v10, 2.0, -1.0                      // 00000000002C: D2820000 03CDE90A
  v_mad_f32     v1, v9, 2.0, -1.0                       // 000000000034: D2820001 03CDE909
  s_waitcnt     lgkmcnt(0)                              // 00000000003C: BF8C007F
  v_mul_legacy_f32  v2, s6, v0                          // 000000000040: 0E040006
  v_mad_f32     v3, v8, 2.0, -1.0                       // 000000000044: D2820003 03CDE908
  v_mul_legacy_f32  v8, s10, v0                         // 00000000004C: 0E10000A
  v_mac_f32     v2, s5, v1                              // 000000000050: 3E040205
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x58           // 000000000054: C2800158
  v_mul_legacy_f32  v0, s14, v0                         // 000000000058: 0E00000E
  v_mac_f32     v8, s9, v1                              // 00000000005C: 3E100209
  v_mac_f32     v2, s4, v3                              // 000000000060: 3E040604
  v_mac_f32     v0, s13, v1                             // 000000000064: 3E00020D
  v_mac_f32     v8, s8, v3                              // 000000000068: 3E100608
  v_mul_legacy_f32  v1, v2, v2                          // 00000000006C: 0E020502
  v_mul_legacy_f32  v9, s19, v7                         // 000000000070: 0E120E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000074: 0E140E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000078: 0E160E1B
  v_mac_f32     v0, s12, v3                             // 00000000007C: 3E00060C
  v_mac_f32     v1, v8, v8                              // 000000000080: 3E021108
  v_mul_legacy_f32  v3, s31, v7                         // 000000000084: 0E060E1F
  v_mul_legacy_f32  v14, s35, v7                        // 000000000088: 0E1C0E23
  v_mul_legacy_f32  v15, s39, v7                        // 00000000008C: 0E1E0E27
  v_mul_legacy_f32  v16, s43, v7                        // 000000000090: 0E200E2B
  v_mul_legacy_f32  v17, s47, v7                        // 000000000094: 0E220E2F
  v_mul_legacy_f32  v18, s51, v7                        // 000000000098: 0E240E33
  v_mul_legacy_f32  v19, s55, v7                        // 00000000009C: 0E260E37
  v_mul_legacy_f32  v7, s59, v7                         // 0000000000A0: 0E0E0E3B
  v_mac_f32     v9, s18, v6                             // 0000000000A4: 3E120C12
  v_mac_f32     v10, s22, v6                            // 0000000000A8: 3E140C16
  v_mac_f32     v11, s26, v6                            // 0000000000AC: 3E160C1A
  v_mac_f32     v1, v0, v0                              // 0000000000B0: 3E020100
  v_mac_legacy_f32  v3, s30, v6                         // 0000000000B4: 0C060C1E
  v_mac_legacy_f32  v14, s34, v6                        // 0000000000B8: 0C1C0C22
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000BC: 0C1E0C26
  v_mac_legacy_f32  v16, s42, v6                        // 0000000000C0: 0C200C2A
  v_mac_f32     v17, s46, v6                            // 0000000000C4: 3E220C2E
  v_mac_f32     v18, s50, v6                            // 0000000000C8: 3E240C32
  v_mac_f32     v19, s54, v6                            // 0000000000CC: 3E260C36
  v_mac_f32     v7, s58, v6                             // 0000000000D0: 3E0E0C3A
  v_mac_f32     v9, s17, v5                             // 0000000000D4: 3E120A11
  v_mac_f32     v10, s21, v5                            // 0000000000D8: 3E140A15
  v_mac_f32     v11, s25, v5                            // 0000000000DC: 3E160A19
  v_rsq_f32     v1, v1                                  // 0000000000E0: 7E025D01
  v_mac_legacy_f32  v3, s29, v5                         // 0000000000E4: 0C060A1D
  v_mac_legacy_f32  v14, s33, v5                        // 0000000000E8: 0C1C0A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000EC: 0C1E0A25
  v_mac_legacy_f32  v16, s41, v5                        // 0000000000F0: 0C200A29
  v_mac_f32     v17, s45, v5                            // 0000000000F4: 3E220A2D
  v_mac_f32     v18, s49, v5                            // 0000000000F8: 3E240A31
  v_mac_f32     v19, s53, v5                            // 0000000000FC: 3E260A35
  v_mac_f32     v7, s57, v5                             // 000000000100: 3E0E0A39
  v_mac_f32     v9, s16, v4                             // 000000000104: 3E120810
  v_mac_f32     v10, s20, v4                            // 000000000108: 3E140814
  v_mac_f32     v11, s24, v4                            // 00000000010C: 3E160818
  v_mul_legacy_f32  v0, v0, v1                          // 000000000110: 0E000300
  v_mul_legacy_f32  v5, v8, v1                          // 000000000114: 0E0A0308
  v_mul_legacy_f32  v1, v2, v1                          // 000000000118: 0E020302
  v_mac_legacy_f32  v3, s28, v4                         // 00000000011C: 0C06081C
  v_mac_legacy_f32  v14, s32, v4                        // 000000000120: 0C1C0820
  v_mac_legacy_f32  v15, s36, v4                        // 000000000124: 0C1E0824
  v_mac_legacy_f32  v16, s40, v4                        // 000000000128: 0C200828
  v_mac_f32     v17, s44, v4                            // 00000000012C: 3E22082C
  v_mac_f32     v18, s48, v4                            // 000000000130: 3E240830
  v_mac_f32     v19, s52, v4                            // 000000000134: 3E260834
  v_mac_f32     v7, s56, v4                             // 000000000138: 3E0E0838
  v_mov_b32     v2, 0                                   // 00000000013C: 7E040280
  v_mov_b32     v4, 1.0                                 // 000000000140: 7E0802F2
  s_waitcnt     lgkmcnt(0)                              // 000000000144: BF8C007F
  v_mov_b32     v6, s0                                  // 000000000148: 7E0C0200
  v_mov_b32     v8, s1                                  // 00000000014C: 7E100201
  v_mov_b32     v20, s2                                 // 000000000150: 7E280202
  v_mov_b32     v21, s3                                 // 000000000154: 7E2A0203
  exp           pos0, v3, v14, v15, v16 done            // 000000000158: F80008CF 100F0E03
  exp           param0, v12, v13, v2, v4                // 000000000160: F800020F 04020D0C
  exp           param1, v9, v10, v11, v4                // 000000000168: F800021F 040B0A09
  exp           param2, v0, v5, v1, v4                  // 000000000170: F800022F 04010500
  exp           param3, v6, v8, v20, v21                // 000000000178: F800023F 15140806
  exp           param4, v17, v18, v19, v7               // 000000000180: F800024F 07131211
  s_endpgm                                              // 000000000188: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   22
//  NumSRegs:                   62
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   87
//  CycleSimNWaves:             87
//  Code Size:                  396
//Assembler Counts:
//  num_32bit_ops                     : 81
//  num_64bit_ops                     : 9
//  num_alu                           : 69
//  num_fc                            : 15
//  num_inst_exp                      : 6
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 7
//  num_inst_vop2                     : 59
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 6
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 22
// m_uNumSRegs                       : 62
// m_uSCCodeSize                     : 396
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 87
// m_uCycleSimNWaves                 : 87

// Assembler Counts:
// num_32bit_ops                     : 81
// num_64bit_ops                     : 9
// num_alu                           : 69
// num_fc                            : 15
// num_inst_exp                      : 6
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 7
// num_inst_vop2                     : 59
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 9
// constant_literal_operands         : 0
// num_tex                           : 6
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[432], bundle is:[233] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_VSConstantVelocityBn.pdb
// Shader Semantic Hash      : 0x6047d357550882f5
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0

codeLenInByte        = 516 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 54;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 24
; esGsRingItemSize          = 24

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x20       // 00000000000C: C3060920
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx8  s[28:35], s[8:11], 0x04        // 000000000018: C2CE0904
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x1c        // 00000000001C: C292091C
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[40:43], s[8:11], 0x18        // 00000000002C: C2940918
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x0c        // 00000000003C: C296090C
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x14        // 000000000040: C2980914
  v_mac_legacy_f32  v0, s12, v4                         // 000000000044: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000048: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 00000000004C: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 000000000050: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000054: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000058: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 00000000005C: 0C060C1A
  v_mad_legacy_f32  v10, v10, 2.0, -1.0                 // 000000000060: D280000A 03CDE90A
  v_mac_legacy_f32  v2, s20, v4                         // 000000000068: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 00000000006C: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000070: BF8C007F
  v_mul_legacy_f32  v11, s31, v7                        // 000000000074: 0E160E1F
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 000000000078: D2800009 03CDE909
  v_mul_legacy_f32  v14, s38, v10                       // 000000000080: 0E1C1426
  v_mac_legacy_f32  v3, s24, v4                         // 000000000084: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000088: E0704040 04400000
  v_mac_legacy_f32  v11, s30, v6                        // 000000000090: 0C160C1E
  v_mul_legacy_f32  v0, s35, v7                         // 000000000094: 0E000E23
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000098: D2800008 03CDE908
  v_mul_legacy_f32  v15, s42, v10                       // 0000000000A0: 0E1E142A
  v_mac_legacy_f32  v14, s37, v9                        // 0000000000A4: 0C1C1225
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 0000000000A8: E0704044 04400100
  v_mac_legacy_f32  v11, s29, v5                        // 0000000000B0: 0C160A1D
  v_mac_legacy_f32  v0, s34, v6                         // 0000000000B4: 0C000C22
  v_mul_legacy_f32  v1, s47, v7                         // 0000000000B8: 0E020E2F
  v_mul_legacy_f32  v10, s50, v10                       // 0000000000BC: 0E141432
  v_mac_legacy_f32  v15, s41, v9                        // 0000000000C0: 0C1E1229
  v_mac_legacy_f32  v14, s36, v8                        // 0000000000C4: 0C1C1024
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000C8: E0704048 04400200
  v_mac_legacy_f32  v11, s28, v4                        // 0000000000D0: 0C16081C
  v_mac_legacy_f32  v0, s33, v5                         // 0000000000D4: 0C000A21
  v_mac_legacy_f32  v1, s46, v6                         // 0000000000D8: 0C020C2E
  v_mac_legacy_f32  v10, s49, v9                        // 0000000000DC: 0C141231
  v_mac_legacy_f32  v15, s40, v8                        // 0000000000E0: 0C1E1028
  v_mul_legacy_f32  v2, v14, v14                        // 0000000000E4: 0E041D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000E8: E070404C 04400300
  v_mac_legacy_f32  v0, s32, v4                         // 0000000000F0: 0C000820
  v_mac_legacy_f32  v1, s45, v5                         // 0000000000F4: 0C020A2D
  v_mac_legacy_f32  v10, s48, v8                        // 0000000000F8: 0C141030
  v_mac_legacy_f32  v2, v15, v15                        // 0000000000FC: 0C041F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 000000000100: E0704000 04400C00
  s_buffer_load_dwordx4  s[12:15], s[8:11], 0x58        // 000000000108: C2860958
  v_mac_legacy_f32  v1, s44, v4                         // 00000000010C: 0C02082C
  v_mac_legacy_f32  v2, v10, v10                        // 000000000110: 0C04150A
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000114: E0704004 04400D00
  s_buffer_load_dwordx16  s[16:31], s[8:11], 0x30       // 00000000011C: C3080930
  v_rsq_f32     v2, v2                                  // 000000000120: 7E045D02
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000124: E0704010 04400B00
  v_mov_b32     v3, 1.0                                 // 00000000012C: 7E0602F2
  v_mul_legacy_f32  v8, v10, v2                         // 000000000130: 0E10050A
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 000000000134: E0704014 04400000
  v_mul_legacy_f32  v0, v15, v2                         // 00000000013C: 0E00050F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 000000000140: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v2                         // 000000000148: 0E02050E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 00000000014C: E070401C 04400300
  buffer_store_dword  v8, v0, s[0:3], s4 offset:32 glc slc // 000000000154: E0704020 04400800
  s_waitcnt     lgkmcnt(0)                              // 00000000015C: BF8C007F
  v_mov_b32     v2, s12                                 // 000000000160: 7E04020C
  v_mul_legacy_f32  v3, s19, v7                         // 000000000164: 0E060E13
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000168: E0704024 04400000
  v_mov_b32     v0, s13                                 // 000000000170: 7E00020D
  v_mac_legacy_f32  v3, s18, v6                         // 000000000174: 0C060C12
  v_mul_legacy_f32  v8, s23, v7                         // 000000000178: 0E100E17
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 00000000017C: E0704028 04400100
  v_mov_b32     v1, s14                                 // 000000000184: 7E02020E
  v_mac_legacy_f32  v3, s17, v5                         // 000000000188: 0C060A11
  v_mac_legacy_f32  v8, s22, v6                         // 00000000018C: 0C100C16
  v_mul_legacy_f32  v9, s27, v7                         // 000000000190: 0E120E1B
  buffer_store_dword  v2, v0, s[0:3], s4 offset:48 glc slc // 000000000194: E0704030 04400200
  v_mov_b32     v2, s15                                 // 00000000019C: 7E04020F
  v_mac_legacy_f32  v3, s16, v4                         // 0000000001A0: 0C060810
  v_mac_legacy_f32  v8, s21, v5                         // 0000000001A4: 0C100A15
  v_mac_legacy_f32  v9, s26, v6                         // 0000000001A8: 0C120C1A
  v_mul_legacy_f32  v7, s31, v7                         // 0000000001AC: 0E0E0E1F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:52 glc slc // 0000000001B0: E0704034 04400000
  v_mac_legacy_f32  v8, s20, v4                         // 0000000001B8: 0C100814
  v_mac_legacy_f32  v9, s25, v5                         // 0000000001BC: 0C120A19
  v_mac_legacy_f32  v7, s30, v6                         // 0000000001C0: 0C0E0C1E
  buffer_store_dword  v1, v0, s[0:3], s4 offset:56 glc slc // 0000000001C4: E0704038 04400100
  v_mac_legacy_f32  v9, s24, v4                         // 0000000001CC: 0C120818
  v_mac_legacy_f32  v7, s29, v5                         // 0000000001D0: 0C0E0A1D
  buffer_store_dword  v2, v0, s[0:3], s4 offset:60 glc slc // 0000000001D4: E070403C 04400200
  v_mac_legacy_f32  v7, s28, v4                         // 0000000001DC: 0C0E081C
  buffer_store_dword  v3, v0, s[0:3], s4 offset:80 glc slc // 0000000001E0: E0704050 04400300
  buffer_store_dword  v8, v0, s[0:3], s4 offset:84 glc slc // 0000000001E8: E0704054 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:88 glc slc // 0000000001F0: E0704058 04400900
  buffer_store_dword  v7, v0, s[0:3], s4 offset:92 glc slc // 0000000001F8: E070405C 04400700
  s_endpgm                                              // 000000000200: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   54
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   93
//  CycleSimNWaves:             93
//  Code Size:                  516
//Assembler Counts:
//  num_32bit_ops                     : 81
//  num_64bit_ops                     : 24
//  num_alu                           : 68
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 21
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 59
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 21
//  num_vmem_group                    : 17
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 54
// m_uSCCodeSize                     : 516
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 93
// m_uCycleSimNWaves                 : 93

// Assembler Counts:
// num_32bit_ops                     : 81
// num_64bit_ops                     : 24
// num_alu                           : 68
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 21
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 6
// num_inst_vop2                     : 59
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 10
// constant_literal_operands         : 0
// num_tex                           : 21
// num_vmem_group                    : 17
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[667], bundle is:[228] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOnePBREffect_VSConstantVelocityBn.pdb
// Shader Semantic Hash      : 0x6047d357550882f5
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0

codeLenInByte        = 452 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 19;
NumSgprs             = 62;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 24
; lsStride                  = 96

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x20         // 00000000000C: C3020120
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x1c         // 000000000010: C28A011C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x18         // 000000000014: C28C0118
  s_buffer_load_dwordx8  s[28:35], s[0:3], 0x04         // 000000000018: C2CE0104
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x14         // 00000000001C: C2920114
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x0c         // 000000000020: C294010C
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_legacy_f32  v0, v10, 2.0, -1.0                  // 000000000028: D2800000 03CDE90A
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_mul_legacy_f32  v2, s7, v7                          // 000000000034: 0E040E07
  v_mul_legacy_f32  v3, s11, v7                         // 000000000038: 0E060E0B
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 00000000003C: D2800009 03CDE909
  v_mul_legacy_f32  v10, s22, v0                        // 000000000044: 0E140016
  v_mac_legacy_f32  v2, s6, v6                          // 000000000048: 0C040C06
  v_mac_legacy_f32  v3, s10, v6                         // 00000000004C: 0C060C0A
  v_mul_legacy_f32  v11, s15, v7                        // 000000000050: 0E160E0F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000054: 0E1C0E13
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000058: D2800008 03CDE908
  v_mul_legacy_f32  v15, s26, v0                        // 000000000060: 0E1E001A
  v_mac_legacy_f32  v10, s21, v9                        // 000000000064: 0C141215
  v_mac_legacy_f32  v2, s5, v5                          // 000000000068: 0C040A05
  v_mac_legacy_f32  v3, s9, v5                          // 00000000006C: 0C060A09
  v_mac_legacy_f32  v11, s14, v6                        // 000000000070: 0C160C0E
  v_mac_legacy_f32  v14, s18, v6                        // 000000000074: 0C1C0C12
  s_movk_i32    s5, 0x0060                              // 000000000078: B0050060
  s_mov_b32     m0, 0x00010000                          // 00000000007C: BEFC03FF 00010000
  v_mul_legacy_f32  v16, s31, v7                        // 000000000084: 0E200E1F
  v_mul_legacy_f32  v17, s35, v7                        // 000000000088: 0E220E23
  v_mul_legacy_f32  v0, s38, v0                         // 00000000008C: 0E000026
  v_mac_legacy_f32  v15, s25, v9                        // 000000000090: 0C1E1219
  v_mac_legacy_f32  v10, s20, v8                        // 000000000094: 0C141014
  v_mac_legacy_f32  v2, s4, v4                          // 000000000098: 0C040804
  v_mac_legacy_f32  v3, s8, v4                          // 00000000009C: 0C060808
  v_mac_legacy_f32  v11, s13, v5                        // 0000000000A0: 0C160A0D
  v_mac_legacy_f32  v14, s17, v5                        // 0000000000A4: 0C1C0A11
  v_mul_lo_i32  v1, v1, s5                              // 0000000000A8: D2D60001 00000B01
  s_buffer_load_dwordx16  s[44:59], s[0:3], 0x30        // 0000000000B0: C3160130
  v_mac_legacy_f32  v16, s30, v6                        // 0000000000B4: 0C200C1E
  v_mac_legacy_f32  v17, s34, v6                        // 0000000000B8: 0C220C22
  v_mul_legacy_f32  v18, s43, v7                        // 0000000000BC: 0E240E2B
  v_mac_legacy_f32  v0, s37, v9                         // 0000000000C0: 0C001225
  v_mac_legacy_f32  v15, s24, v8                        // 0000000000C4: 0C1E1018
  v_mul_legacy_f32  v9, v10, v10                        // 0000000000C8: 0E12150A
  v_mac_legacy_f32  v11, s12, v4                        // 0000000000CC: 0C16080C
  v_mac_legacy_f32  v14, s16, v4                        // 0000000000D0: 0C1C0810
  ds_write2_b32  v1, v2, v3 offset0:16 offset1:17       // 0000000000D4: D8381110 00030201
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x58           // 0000000000DC: C2800158
  v_mac_legacy_f32  v16, s29, v5                        // 0000000000E0: 0C200A1D
  v_mac_legacy_f32  v17, s33, v5                        // 0000000000E4: 0C220A21
  v_mac_legacy_f32  v18, s42, v6                        // 0000000000E8: 0C240C2A
  v_mac_legacy_f32  v0, s36, v8                         // 0000000000EC: 0C001024
  v_mac_legacy_f32  v9, v15, v15                        // 0000000000F0: 0C121F0F
  ds_write2_b32  v1, v11, v14 offset0:18 offset1:19     // 0000000000F4: D8381312 000E0B01
  v_mac_legacy_f32  v16, s28, v4                        // 0000000000FC: 0C20081C
  v_mac_legacy_f32  v17, s32, v4                        // 000000000100: 0C220820
  v_mac_legacy_f32  v18, s41, v5                        // 000000000104: 0C240A29
  v_mac_legacy_f32  v9, v0, v0                          // 000000000108: 0C120100
  ds_write2_b32  v1, v12, v13 offset1:1                 // 00000000010C: D8380100 000D0C01
  v_mac_legacy_f32  v18, s40, v4                        // 000000000114: 0C240828
  v_rsq_f32     v2, v9                                  // 000000000118: 7E045D09
  ds_write2_b32  v1, v16, v17 offset0:4 offset1:5       // 00000000011C: D8380504 00111001
  v_mov_b32     v3, 1.0                                 // 000000000124: 7E0602F2
  v_mul_legacy_f32  v0, v0, v2                          // 000000000128: 0E000500
  v_mul_legacy_f32  v8, v15, v2                         // 00000000012C: 0E10050F
  ds_write2_b32  v1, v18, v3 offset0:6 offset1:7        // 000000000130: D8380706 00031201
  v_mul_legacy_f32  v2, v10, v2                         // 000000000138: 0E04050A
  s_waitcnt     lgkmcnt(0)                              // 00000000013C: BF8C007F
  v_mul_legacy_f32  v3, s47, v7                         // 000000000140: 0E060E2F
  v_mul_legacy_f32  v9, s51, v7                         // 000000000144: 0E120E33
  ds_write2_b32  v1, v0, v8 offset0:8 offset1:9         // 000000000148: D8380908 00080001
  v_mac_legacy_f32  v3, s46, v6                         // 000000000150: 0C060C2E
  v_mac_legacy_f32  v9, s50, v6                         // 000000000154: 0C120C32
  v_mul_legacy_f32  v0, s55, v7                         // 000000000158: 0E000E37
  v_mul_legacy_f32  v7, s59, v7                         // 00000000015C: 0E0E0E3B
  ds_write_b32  v1, v2 offset:40                        // 000000000160: D8340028 00000201
  v_mov_b32     v2, s0                                  // 000000000168: 7E040200
  v_mov_b32     v8, s1                                  // 00000000016C: 7E100201
  v_mac_legacy_f32  v3, s45, v5                         // 000000000170: 0C060A2D
  v_mac_legacy_f32  v9, s49, v5                         // 000000000174: 0C120A31
  v_mac_legacy_f32  v0, s54, v6                         // 000000000178: 0C000C36
  v_mac_legacy_f32  v7, s58, v6                         // 00000000017C: 0C0E0C3A
  ds_write2_b32  v1, v2, v8 offset0:12 offset1:13       // 000000000180: D8380D0C 00080201
  v_mov_b32     v2, s2                                  // 000000000188: 7E040202
  v_mov_b32     v6, s3                                  // 00000000018C: 7E0C0203
  v_mac_legacy_f32  v3, s44, v4                         // 000000000190: 0C06082C
  v_mac_legacy_f32  v9, s48, v4                         // 000000000194: 0C120830
  v_mac_legacy_f32  v0, s53, v5                         // 000000000198: 0C000A35
  v_mac_legacy_f32  v7, s57, v5                         // 00000000019C: 0C0E0A39
  ds_write2_b32  v1, v2, v6 offset0:14 offset1:15       // 0000000001A0: D8380F0E 00060201
  v_mac_legacy_f32  v0, s52, v4                         // 0000000001A8: 0C000834
  v_mac_legacy_f32  v7, s56, v4                         // 0000000001AC: 0C0E0838
  ds_write2_b32  v1, v3, v9 offset0:20 offset1:21       // 0000000001B0: D8381514 00090301
  ds_write2_b32  v1, v0, v7 offset0:22 offset1:23       // 0000000001B8: D8381716 00070001
  s_endpgm                                              // 0000000001C0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   19
//  NumSRegs:                   62
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   110
//  CycleSimNWaves:             110
//  Code Size:                  452
//Assembler Counts:
//  num_32bit_ops                     : 82
//  num_64bit_ops                     : 15
//  num_alu                           : 69
//  num_fc                            : 17
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 11
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 59
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 11
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 19
// m_uNumSRegs                       : 62
// m_uSCCodeSize                     : 452
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 110
// m_uCycleSimNWaves                 : 110

// Assembler Counts:
// num_32bit_ops                     : 82
// num_64bit_ops                     : 15
// num_alu                           : 69
// num_fc                            : 17
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 11
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 6
// num_inst_vop2                     : 59
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 9
// constant_literal_operands         : 0
// num_tex                           : 11
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE PBREffect_VSConstantVelocityBn[] =
{
     68,  88,  66,  67, 254,  85, 
    100,  94,  24, 183, 235,  76, 
    217,  78, 171,  15, 134, 182, 
    197,   6,   1,   0,   0,   0, 
    239,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0, 100,   1, 
      0,   0, 112,  15,   0,   0, 
    128,  15,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 180,   0, 
      0,   0,   6,   0,   0,   0, 
      8,   0,   0,   0, 152,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,  12,   0,   0, 152,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 152,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      7,   8,   0,   0, 161,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 167,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0, 152,   0, 
      0,   0,   4,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   5,   0,   0,   0, 
     15,   0,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  67,  79,  76,  79,  82, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
      4,  14,   0,   0,  80,   0, 
      1,   0, 129,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 210,   0,   0,   0, 
     80,   0,   1,   0, 205,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     25,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   5,   0, 
      0,   0, 104,   0,   0,   2, 
      2,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  17,   0,   0,   8, 
     34,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  17,   0, 
      0,   8,  66,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     54,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  54,   0,   0,   5, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  15, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  64,   0,   0,   0,  64, 
      0,   0,   0,  64,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128, 191,   0,   0, 
    128, 191,   0,   0, 128, 191, 
      0,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      7,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  68,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,  32,  16,   0, 
      2,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  54,   0,   0,   6, 
    242,  32,  16,   0,   3,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  22,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   9,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  10,   0, 
      0,   0,  17,   0,   0,   8, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     11,   0,   0,   0,  17,   0, 
      0,   8,  18,  32,  16,   0, 
      5,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  12,   0,   0,   0, 
     17,   0,   0,   8,  34,  32, 
     16,   0,   5,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  13,   0, 
      0,   0,  17,   0,   0,   8, 
     66,  32,  16,   0,   5,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     14,   0,   0,   0,  17,   0, 
      0,   8, 130,  32,  16,   0, 
      5,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 222,   0,   0,   0, 
     23,   0,   1,   0,  32, 176, 
     23,   0, 120,   1, 237, 152, 
    207, 111,  27,  69,  20, 199, 
    103, 102, 215, 211, 201, 102, 
    242, 178, 113,  28,  55, 105, 
     93, 103, 107, 140,  73,  91, 
    146,   6,  40,  80,  90,  52, 
     64,  66, 213,  67, 145,   2, 
     77, 105,  35, 100, 212, 166, 
    137, 171,  70,  74,  98,  43, 
    246,   1,  56, 152,  16,  33, 
    224,  16, 113, 135,  19, 136, 
    127, 128, 191, 128,  68, 206, 
    161,  28, 168,  42, 149,  11, 
    127,   2,  61,  22,   9, 169, 
     18,  72, 240, 125, 155,  53, 
    141, 210, 114, 135, 106,  63, 
    202, 103, 222, 206, 172, 119, 
    242, 230, 199, 233, 125, 127, 
     80, 196, 220, 250, 232, 167, 
     63,  56, 222, 185, 255, 229, 
    196,  41,  79, 136,  12, 119, 
    128, 207,  13, 104, 228, 184, 
     21, 226, 173,  60, 183,  66, 
     68, 220,  72, 168, 132, 224, 
     33,   7,  55, 209, 127,  29, 
    113,  12, 242, 123, 142,  66, 
    124,  59, 245, 245,  87, 223, 
     77, 173, 224, 233,  85,  56, 
     12, 175,  36, 190,   3, 123, 
    224,  57, 216,  15,  53, 220, 
     79,  55,  15, 254,  87, 123, 
     57,   0, 207, 194, 189, 240, 
     92, 204,  35, 243, 204, 115, 
    243, 120, 222, 131, 201, 146, 
     30,  11, 231, 214, 133, 231, 
    229,  60,  25,  94, 239, 127, 
     13, 222, 163, 238,  57,  49, 
    124,  30, 123,  33, 136, 163, 
    141, 249, 115, 136, 219, 135, 
    251, 122,  58, 217,   4,  14, 
    188, 182, 109, 248, 111, 252, 
      5, 186, 247, 162,  75, 183, 
    207, 243, 107,  49,  51, 169, 
    229, 231, 145,  86,  59, 161, 
    198, 128, 198,  75, 141, 131, 
    212, 216,  64, 141, 131, 211, 
      6, 226, 176, 116,   0, 123, 
    161, 133, 125,  16,   9, 106, 
    108, 176,  14, 225,   0, 204, 
    194,  65, 136,  53, 105, 228, 
    171, 145, 156, 198, 125, 213, 
    184,  68, 122,   4,  30, 130, 
    135,  97,   1,  30, 129,  69, 
     56, 186, 123, 103, 248, 172, 
     24,  45, 119,  87, 168,  21, 
     46,  42, 208,  30, 103, 136, 
    152, 233, 102, 252, 100, 194, 
    123, 128, 109, 142, 225, 184, 
    119, 181,  79, 246, 202,  83, 
     82,  82,  82,  82,  82,  82, 
     82,  82,  82,  82,  82,  82, 
     82,  82, 254,  47, 168, 163, 
     27,  63,   8, 111, 125, 251, 
     99, 177, 185,  85, 144,  27, 
    157,  97, 249, 105,  39,  39, 
     63, 235, 248, 242, 199, 142, 
    149, 155, 157,  72, 210, 206, 
    164, 204, 239,  52, 250,  55, 
    183, 132, 216, 184,  27, 220, 
    187, 237,  73, 196,  30,  68, 
    254,  70,  11, 159,  60, 244, 
     13, 250, 129,   8,  41, 163, 
    124,  55,  39, 215,  59,  36, 
      4, 245, 168, 208, 249, 218, 
    119, 125,  74,  56, 163,  67, 
    167,  50, 138,   6,  41,  75, 
      7,  41,  71, 135,  41,  79, 
     86,  99, 124,  64, 185,  81, 
    210, 244,  20,  21, 232,  25, 
     42, 210,   9, 138, 232,  36, 
    149, 232,   5,  42, 211, 203, 
     84, 161, 179,  68, 148, 181, 
     89, 151, 183,  57, 119, 200, 
    230, 157, 144, 202,  21, 173, 
    182,  37,  91, 176,  21,  91, 
    180, 199, 109, 100,  39, 108, 
    201,  61, 111, 203, 238,  37, 
     91, 113, 103,  44, 185, 129, 
     32, 235, 134, 130, 156,  27, 
      9, 242,  78, 190, 175, 218, 
     71,   2, 109, 143,   6,   5, 
    251, 116,  80, 180, 199, 130, 
    200, 142,   7,  37, 247,  92, 
     80, 118,  47,   6,  21, 247, 
     74,  64,  46,  52,  89, 151, 
     51,  57,  55, 108,  48, 191, 
     39, 200, 120,   1,  41,  79, 
     81, 193, 104,  27, 153, 130, 
     45, 155, 162,  29,  51, 145, 
    125, 214, 148, 220, 164,  41, 
    187,  83, 166, 226,  78,  27, 
    114, 235, 202, 111, 255, 166, 
     76, 155, 247,  65,  40, 219, 
    150,  42, 108,  43,  53, 214, 
    246, 212, 241, 246,  29,  35, 
     30, 120, 212,  31, 246,  43, 
    241, 192, 246,  41, 127,  20, 
    177,  39, 232, 245,  79,  34, 
    138, 140, 244,  95,  67, 212, 
     38,  55,  52, 131,  56, 144, 
     29,  60,  32, 196,  39,  91, 
    113, 169,  80, 197, 127, 255, 
     48, 194, 101, 181, 125,  99, 
     33,  55, 251, 198, 226, 103, 
    127, 183,   6, 215, 229,  11, 
     46,  50, 130, 197,  36, 150, 
     33, 215, 110, 101,  92,  61, 
    196, 220, 208,  79,  42, 120, 
    191, 111, 152, 119, 175, 252, 
    124, 254,  26,  63,  51, 219, 
    201,  55, 223,  36, 145, 235, 
    204,  22,  62, 100, 157, 155, 
     71, 248,  53, 249, 253,  47, 
     73, 228,  92, 185,  14,  70, 
    113, 165,  12, 224,  98,  48, 
     38, 169, 135, 139,  36, 114, 
    237, 172,  23, 238, 207,  35, 
     74, 222, 223, 132, 156, 233, 
    244, 153, 234, 197,  90, 163, 
    222, 172, 206,  93, 175, 127, 
     48, 254, 198, 165, 243, 227, 
    179, 243,  43, 141, 229,  90, 
    179, 122,  97, 169, 213, 172, 
    190, 185, 180,  86,  91, 104, 
    205,  93, 186,  80, 109, 174, 
     45,  84, 103, 111, 206,  47, 
    214, 214, 154, 213, 233, 250, 
     74,  99, 105, 185, 182,  24, 
    127,  52, 179,  90, 123, 123, 
    234, 226, 185,  27,  55, 240, 
    195, 171, 151, 103, 167, 235, 
    171, 205, 214, 252, 106, 235, 
    114, 109, 185, 190, 176, 212, 
    250, 112, 106, 117, 162, 177, 
    120,  93, 252,  13, 165, 160, 
    149,  78,   0,   0,  53,  16, 
      0,   0, 235,   0,   0,   0, 
     23,   0,   1,   0,  16,  60, 
     24,   0, 120,   1, 237, 152, 
    207, 111,  27,  69,  20, 199, 
    199, 235, 241, 116, 119, 243, 
     50, 222, 108,  54, 142, 211, 
     58,  63,  10,   1,   5, 212, 
    132,  20,  69,   8,  65,  15, 
     75,  18,  84, 164,  86, 106, 
    105,  66, 201, 193,  21,  77, 
     19,  87, 181, 148, 198,  86, 
    236,  67, 185, 152,  82,  33, 
    184,  84,  28,  80, 133, 248, 
     35,  56, 131, 144,  80,  27, 
     57,  72, 136,   3,  32, 193, 
    133,  35, 215, 222,  10,  82, 
    207, 240, 253, 218, 187,  33, 
     50, 229,  12,  66, 251, 145, 
    191, 243, 102, 223, 236, 204, 
    188, 121, 179, 190, 188,  51, 
    101, 213, 227, 203, 251, 143, 
    191, 163, 253, 241, 183, 143, 
     23, 150, 242,  74,  21, 248, 
      0,  28,  54, 160,  25, 177, 
     85, 234, 151,  18,  91, 165, 
    102, 217, 228,  32, 188,  16, 
    192, 188,   4, 105, 244,  99, 
    216,  57, 136, 227, 180, 149, 
    111, 191,  90, 254, 226, 234, 
    215, 203, 183, 208,  63,  13, 
    141,  64,  87,  18, 189,   9, 
    113, 251,  85, 136, 107,  12, 
     50,   6, 165, 113, 112, 171, 
    163,  24, 232,  85, 232,  40, 
     62,  27, 192, 121, 220, 231, 
    144,  77,  54,  79, 166,  14, 
     61, 105, 239,  20, 198, 198, 
    245,  82, 210, 119, 121, 222, 
    255,  26, 204,  81, 122,  79, 
    132, 247, 113,  20,  11, 105, 
    136, 180, 147, 123,  76, 243, 
    250,  77, 242, 204, 243, 241, 
    108, 251, 208,  63, 241,   7, 
     72, 215,  33, 236,  47,  65, 
      4, 159,  14, 238, 230, 194, 
    162, 201, 125,  52,  99, 156, 
    131, 192, 192,  97, 240, 130, 
    193,  69,  26,  92, 154,  57, 
      6, 185, 144,   7, 225, 194, 
    204,  16,  36, 208,  48, 132, 
      0,  77,  17,  66,  16,   6, 
     23, 104,  66, 104,  20, 194, 
    153,  12,  46, 193,  32,  70, 
     51,  14, 225, 163,  49,  19, 
    208, 113, 232,   4,  84, 129, 
     38, 161,  41, 104,  26,  66, 
     12,  74,  51, 170, 164,  15, 
     76, 174, 127,  82, 227, 244, 
    147,  98, 242, 140,  20, 182, 
    144, 126,  97, 255,  47, 120, 
    110, 164, 249, 144, 126,  54, 
    250, 240,  63,  71, 101, 100, 
    100, 100, 100, 100, 100, 100, 
    100, 100, 100, 100, 100, 100, 
    100, 100, 252, 155,  56,  39, 
    239, 220,  87, 249,  15, 246, 
    223,  83, 119,  31, 204, 120, 
    230, 160,   9,  91, 180, 202, 
    106, 239, 135, 110, 197, 251, 
    164,  43, 249, 219, 251,  86, 
    148, 140,  90, 199, 150, 189, 
    123, 221,  97,  95,  73,  40, 
    142, 140,  91, 109, 197, 251, 
    180,  27, 121, 159, 117, 197, 
     85,  50, 226,  59,  82,  18, 
     45,  39, 172, 177, 129, 235, 
    200, 152, 175, 229, 184,  24, 
    241, 213, 237, 159, 252, 135, 
    223, 231,  35,  87, 203, 132, 
    111, 132, 251,  76, 219, 146, 
    245, 224, 247, 224, 127,  54, 
    170, 216, 178, 107,  36, 142, 
    155, 191,  42,  21, 235,  41, 
    172, 242,  52, 246, 119,  49, 
    238,  98, 252, 249, 104, 202, 
     62,  19,  86, 100, 149, 227, 
    185,  88,  79, 250,  37, 121, 
     10, 241, 188, 128, 120,  94, 
    140,  34, 251,  92,  56,  37, 
    179,  65,  69, 222, 224, 184, 
     19, 235, 138,  91, 146, 147, 
    136, 113,   1,  49, 158,  14, 
     35, 153,  11, 166, 196,  78, 
    106, 123, 158, 227, 249,  88, 
    207,  32, 214, 121, 196, 186, 
     24,  68,  82, 156, 214, 162, 
    232, 151,  88, 111, 120,  31, 
    118,  79,  33, 110, 127,  76, 
    139, 166, 111,  56, 214, 139, 
    158, 123, 224,  92, 209, 157, 
    128, 207,  67, 177, 254, 221, 
     49,  29, 191,  16, 216, 136, 
    207, 136, 181,  88,  80, 182, 
    204,  62, 226, 178,   5, 199, 
     86, 216, 231,  30, 180, 110, 
    172, 121,  86, 113, 116, 103, 
     20,  57, 153, 165,  15, 115, 
    134,  29, 213,   9, 145, 151, 
    113,  27, 216,  57, 250,  56, 
    215, 113,  58,  35, 200,  77, 
     73,   2, 228,  47, 180, 139, 
    244, 227,  44,  69, 204,  13, 
    144, 155,  49,  63,  64,  46, 
     67, 153, 182, 214,  46, 113, 
     12, 235,  68, 110, 128, 124, 
    134, 130, 211, 201, 203, 244, 
     97, 157, 178,  27, 202, 164, 
    111, 229,  12, 159, 123, 185, 
    176, 114, 145, 125, 196, 180, 
     78, 139, 152,  54, 104, 189, 
     88,  87, 105, 143, 197,  90, 
    169, 247,  31, 244, 234, 174, 
     78, 239, 119, 200,   4, 203, 
    120,   3, 190,  94,  45, 107, 
    192, 199,  58, 230, 160, 175, 
    215, 215, 253,  58,  96,  74, 
     52, 206,  86, 169,  71,  73, 
    253, 147, 117, 107,  15, 202, 
    245,  42, 153, 216,  15, 210, 
     73,  21, 241, 241,  29, 247, 
    173, 183, 127,  62, 123, 149, 
    125, 114,  62, 153, 123,  42, 
    177,  51, 144,  64, 127, 193, 
    106, 248, 223, 105,  39, 239, 
    111,  39, 150, 177, 178,  62, 
    103, 211, 106,  55,  11, 181, 
    224,  94,  50, 126,  55, 177, 
    172, 231,  13,  65, 131, 113, 
    124, 158, 140, 223, 128,  24, 
    233, 202,  43, 213,  75, 181, 
    102, 163,  85, 221, 184, 214, 
    184,  53, 255, 218, 250, 217, 
    249, 181, 205, 155, 205, 157, 
     90, 171, 122, 174, 222, 110, 
     85,  87, 235, 123, 181, 173, 
    246, 198, 250, 185, 106, 107, 
    111, 171, 186, 118,  99, 115, 
    187, 182, 215, 170, 174,  52, 
    110,  54, 235,  59, 181, 237, 
    222, 164,  11, 187, 181, 139, 
    203, 151,  94, 191, 126,  29, 
     47, 190, 115, 121, 109, 165, 
    177, 219, 106, 111, 238, 182, 
     47, 215, 118,  26,  91, 245, 
    246, 187, 203, 187,  11, 205, 
    237, 107, 234,  79, 170, 212, 
    176, 254,  53,  16,   0,   0, 
    230,   0,   0,   0,  23,   0, 
      1,   0,   0, 232,  23,   0, 
    120,   1, 237, 152,  79, 108, 
     27,  69,  20, 198, 223, 236, 
    174,  39, 227, 205, 203, 120, 
    179, 177, 221, 164, 184, 206, 
     54,  24,   8, 127,  18,   2, 
      4,   8, 173, 132,  74,  66, 
    213,  67,  15,  69,  73,  41, 
     57,  24, 209,  52, 113, 213, 
     72, 169, 109, 197,  62, 192, 
      1,  19,  42,  36,  36,  20, 
    245, 128,  56, 114, 225, 142, 
      4,  18, 247,  38, 114, 184, 
      2,  82, 145, 170, 222, 185, 
    192,  17,  36, 164,  30,  42, 
    149, 239, 217, 187, 193,  10, 
     84,  28,  65, 104, 127, 214, 
    247, 222, 206, 188, 217, 245, 
    155,  55, 115, 122,  63,  31, 
    163,  30,  79, 124, 241, 205, 
     29, 241,  63, 252, 122, 115, 
    118, 222,  37, 202, 200,  96, 
    128, 102,  94,  44, 209,  71, 
     69, 177,  68, 145,  24,   5, 
     57,  68,  99, 112, 175,  66, 
    223,  98, 124,   6, 126,  26, 
    146, 184, 248, 155,  63, 125, 
    185,  56, 253, 254,  87, 139, 
    120, 164,   5,  72, 214, 214, 
     99,  45,  67,  57, 232,  44, 
     52,  10,   9, 195,  98,   6, 
     72, 242, 192, 223,  28,  34, 
    127, 171, 161, 211, 208,  32, 
     89,  49, 224, 232,  55, 104, 
     77, 204, 223,  35,  33, 201, 
    233,  97,  72, 110,  66, 242, 
    205,  36,  79, 217, 239, 127, 
     13, 169,  75, 114,  78, 130, 
    156, 199,  32,  22, 194, 209, 
    246, 152, 143, 207,  49,  89, 
    210, 140, 199,  82,  11, 217, 
    219,  62, 244,  48,  30,   0, 
     79,  30,   6,  72, 198, 242, 
    125,  77,  23, 230, 180, 250, 
     56, 210, 206,  65, 160,  49, 
    161,  17, 212,  56,  72, 141, 
     67, 211,  67, 144, 129, 112, 
     88, 218, 135,  80,  88, 205, 
    208,   8, 132,   4,  53,  46, 
    132,  14,  32,  20,  90, 135, 
     16,  18, 210, 216, 147,  46, 
     64, 200,  81, 227, 190, 234, 
    113, 104,   2,  58,  14,  61, 
      2, 149, 160,  19,  80,  25, 
    154, 132, 144,   3, 121, 253, 
    140, 122, 207,  64, 171, 254, 
     78, 181, 211, 191,  73, 218, 
    149,  76, 225,  51, 201,  13, 
    251, 127,  33, 251,  70, 153, 
     15, 233,  87, 163, 127, 222, 
     40,  95, 143, 203,  98,  82, 
     82,  82,  82,  82,  82,  82, 
     82,  82,  82,  82,  82,  82, 
     82,  82,  82, 254,  37, 156, 
    147,  55, 110, 145, 187, 179, 
    255,   1, 237, 238,  69, 202, 
     57,  40, 169,  79, 186, 227, 
    106, 183, 235, 169, 239, 187, 
    121, 245, 105, 151, 213, 103, 
    221, 102, 110, 119, 143, 104, 
    231, 182, 255, 203, 119, 174, 
    172,  27, 178, 158,  29, 182, 
    218, 102,  49, 151, 197,  92, 
    145, 242,  86, 179, 199,  62, 
    107, 206, 217, 162,  29, 179, 
     37, 107,  16,  51, 136,  29, 
    167, 178,  45, 132, 121, 206, 
    248,  30, 103, 125, 205, 150, 
    139,  28, 114, 137,  47,  83, 
    230, 235,   7, 238, 253,  91, 
    210,  41, 153, 180, 145, 125, 
    212,  78, 217, 199, 137, 236, 
     68,  88, 230, 124, 144, 103, 
    207, 120, 108, 140, 230,  17, 
    191, 200, 163, 126, 137,  21, 
    221, 185, 173, 134, 137, 230, 
     84, 241, 160, 204,  17,  79, 
    225, 247, 180, 173, 216, 199, 
     66, 226, 241, 160, 204, 126, 
     33, 180, 108, 138,  28, 152, 
     18,   7, 163,  11, 119, 149, 
    227, 210, 170, 218, 233, 158, 
    240,  35,  62, 233,  79, 241, 
     83,  92, 225,  74,  64, 156, 
    155,  12,  57,  28,  67, 124, 
    216,  82, 201,  68,  28, 153, 
     41, 126, 210, 175,  48, 169, 
     16, 194,  60, 143, 208, 180, 
    169, 112, 246, 109, 175, 227, 
    101,  48,  14,  70, 233,  55, 
     71, 119,  40,  67,  54, 151, 
      9, 172,  30, 194,  92, 232, 
    146, 159, 241, 172, 212, 226, 
     89, 212, 225,   5,  27,  90, 
    147, 197,  60,  25, 154,  69, 
     13, 158, 199,  14,  95, 182, 
    100,  79,  91, 107, 167, 105, 
     30, 185,  72, 161, 189, 142, 
    114, 130, 206,  12, 106, 240, 
    156,  31, 242,  75,  76, 124, 
     10, 213, 224,  17, 188, 231, 
     24, 114,  16, 119,  29, 238, 
     60, 131,  61, 207, 153, 144, 
     95, 244, 137,  95, 241,  45, 
    219, 156, 196,  53, 205,  27, 
    226,   5,  99,  57,  95, 192, 
    216, 205,  82, 241,  24,  60, 
     13, 225, 195,  31, 238,  21, 
     96, 165, 113,  43, 127, 147, 
     48,  33,  13, 168,  35, 115, 
    129, 152,  35, 115, 189, 103, 
     79,  22, 255, 201, 126, 220, 
    163, 252,  60, 246,  21,  72, 
    122, 190,  42, 238, 106,  78, 
     64,  94, 220, 241, 251, 253, 
    134, 121, 243, 173,  31, 207, 
     29, 182, 184, 238, 197, 239, 
    220, 141, 189, 244, 167,  25, 
    250,  39, 162, 184,  63,  30, 
     36,  30, 146,  94, 154,  77, 
     58, 211, 210,  84,   5, 103, 
    226, 248,  66, 236, 165, 247, 
    134, 107, 241, 151,  60,  86, 
    227, 248,  53,  72,  50,  93, 
     58,  85,  93, 174,  53,  27, 
    173, 234, 234, 149, 198, 187, 
     51, 175,  93,  60,  55, 179, 
    178, 118, 189, 185,  85, 107, 
     85, 207, 111, 182,  91, 213, 
    215,  55, 183, 107, 235, 237, 
    213, 139, 231, 171, 173, 237, 
    245, 234, 202, 181, 181, 141, 
    218, 118, 171, 186, 212, 184, 
    222, 220, 220, 170, 109, 244, 
     94, 186,  80, 175, 189, 177, 
    184, 124, 246, 234,  85,  44, 
    124, 231, 210, 202,  82, 163, 
    222, 106, 175, 213, 219, 151, 
    106,  91, 141, 245, 205, 246, 
    123, 139, 245, 217, 230, 198, 
     21, 250,   3, 137, 238, 152, 
    249,   0,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    245, 130,   8,  85,  87, 211, 
     71,  96,  88,  80,  68,  80, 
    103,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  80,  66,  82,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  67, 111, 110, 115, 116, 
     97, 110, 116,  86, 101, 108, 
    111,  99, 105, 116, 121,  66, 
    110,  46, 112, 100,  98
};
