#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[355]
// Embedded Data:
//  0x00000163 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x0000015e - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 4
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
dp3 r1.x, -cb0[4].xyzx, r0.xyzx
dp3 r1.y, -cb0[5].xyzx, r0.xyzx
dp3 r1.z, -cb0[6].xyzx, r0.xyzx
ge r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r1.yyyy, cb0[8].xyzx
mad r1.xyw, r1.xxxx, cb0[7].xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, cb0[9].xyzx, r1.xywx
mad r1.xyz, r1.xyzx, cb0[2].xyzx, cb0[3].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, v3.xyzw
mul r1.xyz, r1.xyzx, r2.xyzx
add r2.xyz, -v1.xyzx, cb0[10].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, -r2.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r0.xyzx, -r0.wwww, -r2.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
add r0.x, -|r0.x|, l(1.000000)
max r0.x, r0.x, l(0.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[1].y
exp r0.x, r0.x
mul r0.x, r0.x, cb0[1].x
sample_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t1.xyzw, s1
mad r0.yzw, r3.xxyz, r2.wwww, -r1.xxyz
mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r0.w, r2.w, r3.w
mad r0.xyz, cb0[0].xyzx, r0.wwww, r0.xyzx
mad r1.xyz, cb0[11].xyzx, r2.wwww, -r0.xyzx
mad o0.xyz, v1.wwww, r1.xyzx, r0.xyzx
mov o0.w, r2.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[355], bundle is:[292] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneEnvironmentMapEffect_PSEnvMapPixelLightingFresnel.pdb
// Shader Semantic Hash      : 0xda6973f6af986d19
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask  3, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask 15, param1, paramSlot1, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 2, channelMask  7, param2, paramSlot2, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 3, channelMask 15, param3, paramSlot3, DefaultVal={0,0,0,0}

codeLenInByte        = 748 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 5;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_RESOURCE 1, offset 0x8:15 dwords
;  extUserElements 1[2] = IMM_SAMPLER 0, offset 0x10:19 dwords
;  extUserElements 1[3] = IMM_SAMPLER 1, offset 0x14:23 dwords
;  extUserElements 1[4] = IMM_CONST_BUFFER 0, offset 0x18:27 dwords
NumVgprs             = 21;
NumSgprs             = 40;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000003
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

dx9TexCubeMask           = 0x00000002

; export table for mrt0 [patch@(bytes=0x2D8, dwords=0xB6)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, off, off, off done vm         // 000000000008: F8001801 00000003
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, off, off done vm          // 000000000008: F8001803 00000403
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v6, off, off done vm          // 000000000008: F8001803 00000603
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000000: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v6                       // 000000000004: 5E020D05
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v3, v4                      // 000000000000: 5C000903
  v_cvt_pknorm_u16_f32  v1, v5, v6                      // 000000000004: 5C020D05
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v3, v4                      // 000000000000: 5A000903
  v_cvt_pknorm_i16_f32  v1, v5, v6                      // 000000000004: 5A020D05
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v3, v4                          // 000000000000: 60000903
  v_cvt_pk_u16_u32  v1, v5, v6                          // 000000000004: 60020D05
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v3, v4                          // 000000000000: 62000903
  v_cvt_pk_i16_i32  v1, v5, v6                          // 000000000004: 62020D05
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, v5, v6 done vm            // 000000000008: F800180F 06050403
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[36:37], exec                          // 000000000000: BEA4047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx4  s[4:7], s[0:1], 0x18                  // 000000000008: C0820118
  s_waitcnt     lgkmcnt(0)                              // 00000000000C: BF8C007F
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x28          // 000000000010: C2840528
  s_mov_b32     m0, s2                                  // 000000000014: BEFC0302
  v_interp_p1_f32  v2, v0, attr1.z                      // 000000000018: C8080600
  v_interp_p1_f32  v3, v0, attr2.z                      // 00000000001C: C80C0A00
  v_interp_p1_f32  v4, v0, attr1.y                      // 000000000020: C8100500
  v_interp_p2_f32  v2, v1, attr1.z                      // 000000000024: C8090601
  v_interp_p1_f32  v5, v0, attr2.y                      // 000000000028: C8140900
  v_interp_p2_f32  v3, v1, attr2.z                      // 00000000002C: C80D0A01
  v_interp_p1_f32  v6, v0, attr1.x                      // 000000000030: C8180400
  v_interp_p2_f32  v4, v1, attr1.y                      // 000000000034: C8110501
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  v_sub_f32     v2, s10, v2                             // 00000000003C: 0804040A
  v_interp_p1_f32  v7, v0, attr2.x                      // 000000000040: C81C0800
  v_interp_p2_f32  v5, v1, attr2.y                      // 000000000044: C8150901
  v_mul_legacy_f32  v8, v3, v3                          // 000000000048: 0E100703
  v_interp_p2_f32  v6, v1, attr1.x                      // 00000000004C: C8190401
  v_sub_f32     v4, s9, v4                              // 000000000050: 08080809
  v_mul_legacy_f32  v9, v2, v2                          // 000000000054: 0E120502
  v_interp_p2_f32  v7, v1, attr2.x                      // 000000000058: C81D0801
  v_mac_f32     v8, v5, v5                              // 00000000005C: 3E100B05
  v_sub_f32     v6, s8, v6                              // 000000000060: 080C0C08
  v_mac_f32     v9, v4, v4                              // 000000000064: 3E120904
  v_mac_f32     v8, v7, v7                              // 000000000068: 3E100F07
  v_mac_f32     v9, v6, v6                              // 00000000006C: 3E120D06
  v_rsq_f32     v8, v8                                  // 000000000070: 7E105D08
  v_rsq_f32     v9, v9                                  // 000000000074: 7E125D09
  v_mul_legacy_f32  v3, v3, v8                          // 000000000078: 0E061103
  v_mul_legacy_f32  v2, v2, v9                          // 00000000007C: 0E041302
  v_mul_legacy_f32  v5, v5, v8                          // 000000000080: 0E0A1105
  v_mul_legacy_f32  v4, v4, v9                          // 000000000084: 0E081304
  v_mul_legacy_f32  v10, v3, -v2                        // 000000000088: D20E000A 40020503
  s_load_dwordx8  s[8:15], s[0:1], 0x00                 // 000000000090: C0C40100
  s_load_dwordx16  s[16:31], s[0:1], 0x08               // 000000000094: C1080108
  v_mul_legacy_f32  v7, v7, v8                          // 000000000098: 0E0E1107
  v_mul_legacy_f32  v6, v6, v9                          // 00000000009C: 0E0C1306
  v_mad_legacy_f32  v10, -v4, v5, v10                   // 0000000000A0: D280000A 242A0B04
  v_mad_legacy_f32  v10, -v6, v7, v10 mul:2             // 0000000000A8: D280000A 2C2A0F06
  v_interp_p1_f32  v8, v0, attr0.x                      // 0000000000B0: C8200000
  v_interp_p1_f32  v9, v0, attr0.y                      // 0000000000B4: C8240100
  v_mad_legacy_f32  v11, v7, -v10, -v6                  // 0000000000B8: D280000B C41A1507
  v_mad_legacy_f32  v12, v5, -v10, -v4                  // 0000000000C0: D280000C C4121505
  v_mad_legacy_f32  v10, v3, -v10, -v2                  // 0000000000C8: D280000A C40A1503
  v_interp_p2_f32  v8, v1, attr0.x                      // 0000000000D0: C8210001
  v_interp_p2_f32  v9, v1, attr0.y                      // 0000000000D4: C8250101
  v_cubema_f32  v13, v11, v12, v10                      // 0000000000D8: D28E000D 042A190B
  v_cubetc_f32  v14, v11, v12, v10                      // 0000000000E0: D28C000E 042A190B
  v_cubesc_f32  v15, v11, v12, v10                      // 0000000000E8: D28A000F 042A190B
  v_rcp_f32     v13, abs(v13)                           // 0000000000F0: D354010D 0000010D
  s_waitcnt     lgkmcnt(0)                              // 0000000000F8: BF8C007F
  image_sample  v[16:19], v[8:9], s[8:15], s[24:27] dmask:0xf // 0000000000FC: F0800F00 00C21008
  v_cubeid_f32  v10, v11, v12, v10                      // 000000000104: D288000A 042A190B
  v_madak_f32   v9, v14, v13, 0x3fc00000                // 00000000010C: 42121B0E 3FC00000
  v_madak_f32   v8, v15, v13, 0x3fc00000                // 000000000114: 42101B0F 3FC00000
  image_sample  v[8:11], v[8:9], s[16:23], s[28:31] dmask:0xf // 00000000011C: F0800F00 00E40808
  s_buffer_load_dwordx4  s[0:3], s[4:7], 0x14           // 000000000124: C2800514
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x10          // 000000000128: C2840510
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x18         // 00000000012C: C2860518
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x20         // 000000000130: C2880520
  s_waitcnt     lgkmcnt(0)                              // 000000000134: BF8C007F
  v_mul_legacy_f32  v12, v3, -s2                        // 000000000138: D20E000C 40000503
  s_buffer_load_dwordx4  s[20:23], s[4:7], 0x1c         // 000000000140: C28A051C
  v_mul_legacy_f32  v13, v3, -s10                       // 000000000144: D20E000D 40001503
  v_mad_legacy_f32  v12, -s1, v5, v12                   // 00000000014C: D280000C 24320A01
  s_buffer_load_dwordx4  s[24:27], s[4:7], 0x0c         // 000000000154: C28C050C
  s_buffer_load_dwordx4  s[28:31], s[4:7], 0x24         // 000000000158: C28E0524
  v_mad_legacy_f32  v13, -s9, v5, v13                   // 00000000015C: D280000D 24360A09
  v_mad_legacy_f32  v12, -s0, v7, v12                   // 000000000164: D280000C 24320E00
  v_mul_legacy_f32  v14, v3, -s14                       // 00000000016C: D20E000E 40001D03
  v_mul_legacy_f32  v2, v3, v2                          // 000000000174: 0E040503
  s_buffer_load_dwordx2  s[0:1], s[4:7], 0x04           // 000000000178: C2400504
  s_buffer_load_dwordx4  s[32:35], s[4:7], 0x08         // 00000000017C: C2900508
  v_mad_legacy_f32  v13, -s8, v7, v13                   // 000000000180: D280000D 24360E08
  v_mad_legacy_f32  v14, -s13, v5, v14                  // 000000000188: D280000E 243A0A0D
  v_cmp_ge_f32  s[2:3], v12, 0                          // 000000000190: D00C0002 0001010C
  v_mac_f32     v2, v4, v5                              // 000000000198: 3E040B04
  v_mad_legacy_f32  v14, -s12, v7, v14                  // 00000000019C: D280000E 243A0E0C
  v_cmp_le_f32  vcc, 0, v13                             // 0000000001A4: 7C061A80
  v_cndmask_b32  v3, 0, v12, s[2:3]                     // 0000000001A8: D2000003 000A1880
  v_mac_f32     v2, v6, v7                              // 0000000001B0: 3E040F06
  v_cmp_ge_f32  s[2:3], v14, 0                          // 0000000001B4: D00C0002 0001010E
  v_cndmask_b32  v4, 0, v13, vcc                        // 0000000001BC: 00081A80
  v_mul_legacy_f32  v5, s16, v3                         // 0000000001C0: 0E0A0610
  v_mul_legacy_f32  v6, s17, v3                         // 0000000001C4: 0E0C0611
  v_mul_legacy_f32  v3, s18, v3                         // 0000000001C8: 0E060612
  v_add_f32     v2, -abs(v2), 1.0                       // 0000000001CC: D2060102 2001E502
  v_cndmask_b32  v7, 0, v14, s[2:3]                     // 0000000001D4: D2000007 000A1C80
  s_waitcnt     lgkmcnt(0)                              // 0000000001DC: BF8C007F
  v_mac_f32     v5, s20, v4                             // 0000000001E0: 3E0A0814
  v_mac_f32     v6, s21, v4                             // 0000000001E4: 3E0C0815
  v_mac_f32     v3, s22, v4                             // 0000000001E8: 3E060816
  v_interp_p1_f32  v4, v0, attr3.x                      // 0000000001EC: C8100C00
  v_interp_p1_f32  v12, v0, attr3.y                     // 0000000001F0: C8300D00
  v_interp_p1_f32  v13, v0, attr3.z                     // 0000000001F4: C8340E00
  v_max_legacy_f32  v2, 0, v2                           // 0000000001F8: 1C040480
  s_buffer_load_dwordx4  s[8:11], s[4:7], 0x00          // 0000000001FC: C2840500
  v_mac_f32     v5, s28, v7                             // 000000000200: 3E0A0E1C
  v_mac_f32     v6, s29, v7                             // 000000000204: 3E0C0E1D
  v_mac_f32     v3, s30, v7                             // 000000000208: 3E060E1E
  v_mov_b32     v7, s24                                 // 00000000020C: 7E0E0218
  v_mov_b32     v14, s25                                // 000000000210: 7E1C0219
  v_mov_b32     v15, s26                                // 000000000214: 7E1E021A
  v_interp_p2_f32  v4, v1, attr3.x                      // 000000000218: C8110C01
  v_interp_p2_f32  v12, v1, attr3.y                     // 00000000021C: C8310D01
  v_interp_p2_f32  v13, v1, attr3.z                     // 000000000220: C8350E01
  v_interp_p1_f32  v20, v0, attr3.w                     // 000000000224: C8500F00
  v_log_f32     v2, v2                                  // 000000000228: 7E044F02
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x2c           // 00000000022C: C282052C
  v_mac_f32     v7, s32, v5                             // 000000000230: 3E0E0A20
  v_mac_f32     v14, s33, v6                            // 000000000234: 3E1C0C21
  v_mac_f32     v15, s34, v3                            // 000000000238: 3E1E0622
  v_interp_p2_f32  v20, v1, attr3.w                     // 00000000023C: C8510F01
  s_waitcnt     vmcnt(1)                                // 000000000240: BF8C0F71
  v_mul_legacy_f32  v3, v16, v4                         // 000000000244: 0E060910
  v_mul_legacy_f32  v4, v17, v12                        // 000000000248: 0E081911
  v_mul_legacy_f32  v5, v18, v13                        // 00000000024C: 0E0A1B12
  v_mul_legacy_f32  v2, s1, v2                          // 000000000250: 0E040401
  v_mul_legacy_f32  v6, v19, v20                        // 000000000254: 0E0C2913
  v_mul_legacy_f32  v3, v7, v3                          // 000000000258: 0E060707
  v_mul_legacy_f32  v4, v14, v4                         // 00000000025C: 0E08090E
  v_mul_legacy_f32  v5, v15, v5                         // 000000000260: 0E0A0B0F
  v_exp_f32     v2, v2                                  // 000000000264: 7E044B02
  v_mul_legacy_f32  v2, s0, v2                          // 000000000268: 0E040400
  s_waitcnt     vmcnt(0)                                // 00000000026C: BF8C0F70
  v_mad_legacy_f32  v7, v8, v6, -v3                     // 000000000270: D2800007 840E0D08
  v_mad_legacy_f32  v8, v9, v6, -v4                     // 000000000278: D2800008 84120D09
  v_mad_legacy_f32  v9, v10, v6, -v5                    // 000000000280: D2800009 84160D0A
  v_mac_f32     v3, v2, v7                              // 000000000288: 3E060F02
  v_mac_f32     v4, v2, v8                              // 00000000028C: 3E081102
  v_mac_f32     v5, v2, v9                              // 000000000290: 3E0A1302
  v_mul_legacy_f32  v2, v6, v11                         // 000000000294: 0E041706
  s_waitcnt     lgkmcnt(0)                              // 000000000298: BF8C007F
  v_mac_f32     v3, s8, v2                              // 00000000029C: 3E060408
  v_mac_f32     v4, s9, v2                              // 0000000002A0: 3E080409
  v_mac_f32     v5, s10, v2                             // 0000000002A4: 3E0A040A
  v_interp_p1_f32  v0, v0, attr1.w                      // 0000000002A8: C8000700
  v_mad_legacy_f32  v2, s4, v6, -v3                     // 0000000002AC: D2800002 840E0C04
  v_mad_legacy_f32  v7, s5, v6, -v4                     // 0000000002B4: D2800007 84120C05
  v_mad_legacy_f32  v8, s6, v6, -v5                     // 0000000002BC: D2800008 84160C06
  v_interp_p2_f32  v0, v1, attr1.w                      // 0000000002C4: C8010701
  v_mac_f32     v3, v0, v2                              // 0000000002C8: 3E060500
  v_mac_f32     v4, v0, v7                              // 0000000002CC: 3E080F00
  v_mac_f32     v5, v0, v8                              // 0000000002D0: 3E0A1100
  s_mov_b64     exec, s[36:37]                          // 0000000002D4: BEFE0424
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 0000000002D8: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v6                       // 0000000002DC: 5E020D05
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 0000000002E0: F8001C0F 00000100
  s_endpgm                                              // 0000000002E8: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   21
//  NumSRegs:                   40
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   138
//  CycleSimNWaves:             138
//  Code Size:                  748
//Assembler Counts:
//  num_32bit_ops                     : 117
//  num_64bit_ops                     : 34
//  num_alu                           : 120
//  num_fc                            : 28
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 2
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 9
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 7
//  num_inst_vop2                     : 55
//  num_inst_vop3                     : 20
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 26
//  constant_literal_operands         : 0
//  num_tex                           : 3
//  num_vmem_group                    : 2
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 21
// m_uNumSRegs                       : 40
// m_uSCCodeSize                     : 748
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 138
// m_uCycleSimNWaves                 : 138

// Assembler Counts:
// num_32bit_ops                     : 117
// num_64bit_ops                     : 34
// num_alu                           : 120
// num_fc                            : 28
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 2
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 9
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 7
// num_inst_vop2                     : 55
// num_inst_vop3                     : 20
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 26
// num_inst_smem                     : 15
// constant_literal_operands         : 0
// num_tex                           : 3
// num_vmem_group                    : 2
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE EnvironmentMapEffect_PSEnvMapPixelLightingFresnel[] =
{
     68,  88,  66,  67, 204, 152, 
     99,  39,  42, 204,  93, 199, 
     54,  75,  66,  16, 163, 141, 
     94, 116,   1,   0,   0,   0, 
    166,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0,  20,  11,   0,   0, 
     36,  11,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   3, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,  36,  10,   0,   0, 
     80,   0,   0,   0, 137,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  99,   1, 
      0,   0,  80,   0,   0,   0, 
     94,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  24,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     90,   0,   0,   3,   0,  96, 
     16,   0,   1,   0,   0,   0, 
     88,  24,   0,   4,   0, 112, 
     16,   0,   0,   0,   0,   0, 
     85,  85,   0,   0,  88,  48, 
      0,   4,   0, 112,  16,   0, 
      1,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   0,   0, 
      0,   0,  98,  16,   0,   3, 
    242,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   2,   0, 
      0,   0,  98,  16,   0,   3, 
    242,  16,  16,   0,   3,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      4,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  68,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  16,   0,   0,   9, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     34,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  29,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  86,   5,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  50,   0, 
      0,  10, 178,   0,  16,   0, 
      1,   0,   0,   0,   6,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 136,  32,   0,   0,   0, 
      0,   0,   7,   0,   0,   0, 
     70,   8,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 166,  10,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      9,   0,   0,   0,  70,   3, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  16, 
     16,   0,   0,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 242,   0,  16,   0, 
      2,   0,   0,   0,  70,  14, 
     16,   0,   2,   0,   0,   0, 
     70,  30,  16,   0,   3,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
      0,   0,   0,   9, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  10,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   2,   0,   0,   0, 
    246,  15,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   8, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  11, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   2,   0,   0,   0, 
     16,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16, 128, 193,   0,   0,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     52,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0,   0,   0,  47,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  26, 128,  32,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  25,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     10, 128,  32,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     69,   0,   0, 139, 130,   1, 
      0, 128,  67,  85,  21,   0, 
    242,   0,  16,   0,   3,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70, 126, 
     16,   0,   1,   0,   0,   0, 
      0,  96,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,  10, 
    226,   0,  16,   0,   0,   0, 
      0,   0,   6,   9,  16,   0, 
      3,   0,   0,   0, 246,  15, 
     16,   0,   2,   0,   0,   0, 
      6,   9,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0, 150,   7,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  58,   0,  16,   0, 
      3,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  11,   0, 
      0,   0, 246,  15,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  50,   0, 
      0,   9, 114,  32,  16,   0, 
      0,   0,   0,   0, 246,  31, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   5, 130,  32,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   2,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0,  38,   1,   0,   0, 
     23,   0,   1,   0,  41, 115, 
     18,   0, 120,   1, 237,  88, 
     77, 108,  27,  69,  20, 126, 
    179, 158,  29, 207, 174, 119, 
    103, 253,  19,   7,  59, 113, 
     74,  90,  25,  81, 162,  22, 
     65,   5,   5,  69, 104, 107, 
      8, 133,  67,  64,  13,  36, 
    135,  42, 114,  75, 147, 198, 
    109,  45,  37, 142, 137,  83, 
     20,   9, 100,  76, 101, 161, 
     40, 138, 170, 222, 136,  56, 
    113, 232,  29,  78, 136,  83, 
    146,  90,  57, 204, 129,  67, 
    101, 110, 156, 225, 198, 129, 
     19, 226,  80,  21, 222, 219, 
    236, 166, 166, 208, 155,  37, 
     16, 242,  39, 127, 243, 230, 
    123, 243, 102, 252, 102, 102, 
     15, 251, 182, 145, 134,   0, 
    243,  75,  95, 101, 200, 222, 
    156, 124, 237, 251,  13,  19, 
      0, 127, 192, 144, 100,   9, 
     59,  46, 181,   0,  15, 146, 
    212,   2, 156, 164, 134,   2, 
     12, 128,  44,  26, 210, 191, 
     96, 191,  20, 246,  35,   2, 
     88,  83,  95, 230,  19,  83, 
    212,  59, 129, 164, 216, 173, 
    144,  55, 145, 228, 219,  64, 
     22, 144, 180,  28,   1, 151, 
     57, 130,  69,  13, 130,  83, 
    211, 131,  56, 242,  21, 228, 
     16, 146, 230, 141,  32,  61, 
     36,  33, 134, 236,  93,   3, 
     42, 212, 252,  51, 190,  64, 
     82,  78,  79,   2, 229,  22, 
    173,  69, 255,  67, 121,  18, 
     14, 247, 246, 239, 130, 242, 
    137,  90, 218,  51, 245, 162, 
    123,  34, 208, 125, 244,  66, 
     33,  15, 163,   1, 218, 225, 
     61,  30, 221, 111, 168, 233, 
     44, 104, 111, 251, 200,  39, 
    225,  15,  68, 116,  14,  17, 
     34,  77, 247,  36, 130, 108, 
    208, 178, 167,   1,  36,  90, 
    227,  89,   0,  92,  95, 196, 
    206,   1, 228, 104, 228, 255, 
    141, 232,  89,  37,  75,  87, 
     64,  71,  27,  61, 155, 132, 
    104, 252,  91, 106, 160, 181, 
     71, 188, 147, 131, 223,  73, 
     69, 154, 161,  62,  60, 197, 
     67,  29,  35,  29,  76, 236, 
    209,   2, 239, 221, 130, 203, 
    166, 107,  92, 246,  10,  56, 
     31,  47,  23, 117,  25, 117, 
    185,  71, 207, 163, 158, 239, 
    209,  87,  80,  95, 233, 209, 
    139, 168,  23,  35,  29, 173, 
    239,   5, 255, 103,  10, 186, 
    107, 116,  54, 255, 203,  28, 
    228, 216,  31,  14, 114, 236, 
     15,   7,  57, 246, 135, 131, 
     28, 251, 195,  65, 142, 253, 
    225,  32, 199, 254, 112, 144, 
     99, 127,  72, 239, 150,  77, 
    126, 119, 183, 105,  63, 220, 
    205, 177,  91, 251, 159, 194, 
    246, 222,  73, 179, 221,  49, 
     98,  15, 118,  65,  72,  13, 
    182, 163, 193,  76, 106,  38, 
     44,  13, 214, 144, 102, 182, 
    171, 129, 231,  52,  51,  83, 
    154,  98, 109, 206,  37, 200, 
    130, 102,  86,  86, 199, 226, 
     73, 197, 120,  94,  91,  82, 
     74, 195,  76,  43,  38, 199, 
    180, 153,  72, 250, 210, 113, 
     36, 183, 210, 126, 220,  75, 
    250, 194,  77, 251, 242,  82, 
    178, 105,  93,  74,  55,  99, 
     41, 161, 140,  12,  87, 102, 
    202,  86,  60,  35, 149,  13, 
    170,  27,  51, 141,  18, 176, 
    131, 125, 201, 228, 189, 120, 
     74,  41, 145, 113, 208, 223, 
    234, 242, 196,  68, 145, 172, 
    240,  38,  78,   1, 140, 107, 
     96,  69, 157,  64,  29, 207, 
    142,  28,  56, 104, 205, 108, 
    250, 128, 198,  99,  89, 251, 
    128, 193, 113, 205, 216,  51, 
    218, 133, 219, 221,  68, 126, 
    130,  43, 216,  14, 172,   7, 
     91, 129, 117, 217, 220,  15, 
     46, 190, 167,  82, 254, 224, 
    181, 126, 149, 201,  14, 216, 
    176,  25, 140, 169, 209, 244, 
     27,  88, 185, 156, 243,  70, 
    147, 129,  13, 198, 229,  79, 
     48, 100, 182,  58,  73,  60, 
    151, 156, 249, 121, 103, 220, 
    220, 236, 208,  92,  39, 200, 
     23,  74,   5, 115, 171, 227, 
     82,  63,  11,  37, 202, 133, 
    217, 103, 138, 142, 185, 221, 
     41, 154, 183, 209, 223, 234, 
     90, 246, 217,  34, 249,  65, 
    157,  41,  42, 138,  27, 131, 
     82, 204, 228, 138, 155, 165, 
    142,  52, 239,   4,  49,  82, 
    157, 197, 177,  86, 215, 181, 
     39, 139,   6,  56, 247,  29, 
    198, 128,  39, 184,  79,  62, 
     71,  77,  22,  91,  35, 226, 
     19, 124, 151, 239, 182, 114, 
     54,   8, 143, 251,  20, 163, 
     48, 166,  53,  34,  33,  41, 
    108, 149,  18, 142,  74,  11, 
     60,  79,  38, 186, 198, 207, 
    108,  28, 107, 219, 110, 171, 
     96,   7, 123,  28, 146, 182, 
    159, 149, 142,  63,  44, 133, 
     15,  78,  82, 131, 251, 130, 
      6, 245, 146, 110, 113,  94, 
      0, 220,  83,  65, 217, 254, 
    152, 114, 252,  99,  74, 248, 
     57,  67,  53, 243,  70, 161, 
     57,  98,  28, 107,  50,  39, 
    165, 153, 251, 162, 102, 234, 
    101,  13, 222, 140,  54,  46, 
    240, 230,  41, 243,  86, 103, 
    220,  86, 254, 113, 167, 224, 
    159,  16, 199, 124, 230, 189, 
    167,  63, 244, 182, 247, 146, 
    150,  80, 169, 188,  84, 233, 
     81,  27, 159,   1, 174,  50, 
    207,  57,  42,  30,  23,  74, 
     89,  82, 121,   9,  91,  25, 
    211, 188,   9, 232, 175,  99, 
    108,  28, 247,  36,  93, 213, 
    150, 104,  45,  55, 221, 182, 
    208, 218, 238, 112, 219, 240, 
    132, 111, 164, 164, 111, 100, 
    108,  95,  60, 197,  21, 229, 
     46, 185, 240,  45,  46, 125, 
    155, 219,  62,  22, 236, 218, 
    192,  88, 238, 168,  54, 173, 
     97,  58, 233,  96,  13, 225, 
     12, 183,  89, 156, 225, 115, 
    138, 251, 243, 164,  15,  41, 
    219,  47, 242, 135, 187,  88, 
    151, 252, 165, 174,   1, 248, 
    108,  47,  79, 150,  30, 250, 
    199,  33, 131, 128,  71,  32, 
    137,  62,  44,  61, 143,  16, 
     68, 112,  22, 212,  98,  17, 
    240,  10,   2,  31, 125,  67, 
    136,  16,  44, 143, 190, 222, 
     50, 245, 213,  20, 181,   0, 
     67, 161,  45,  34, 233, 187, 
      4,  11, 235,  92, 138, 229, 
     88, 245,  18, 242,  43,  59, 
     95, 255, 214, 168, 254,  72, 
    125,  66,  61, 156,  51,  19, 
    218, 113, 164, 131, 124, 132, 
    187, 212, 252,  13,  59,  97, 
    252, 102, 104,  41, 111,  42, 
    255,  84,  84, 177,  83,  49, 
    143, 248,  46,  28, 255,  38, 
    180, 180, 231,   4, 242, 241, 
     60, 238, 135, 227,  31,  35, 
     41, 211, 169, 201, 242, 251, 
    149, 250, 106, 163, 124, 113, 
    113, 117, 227, 244, 235, 115, 
    111, 159, 158,  93,  88, 169, 
     47,  87,  26, 229, 233, 234, 
    122, 163, 252, 102, 117, 173, 
    114, 117, 253, 226, 220, 116, 
    185, 177, 118, 181,  60, 123, 
     99,  97, 169, 178, 214,  40, 
     79, 173, 174, 212, 171, 203, 
    149, 165,  96, 210, 133,  90, 
    229, 124, 237, 163, 234, 218, 
    106, 109, 165,  82,  91, 127, 
    119, 161, 126, 254, 218,  53, 
    156, 243, 193, 204,  44, 186, 
     81, 206,  84,  55,  42, 203, 
    239,  84, 175, 223,  88, 175, 
    214, 174, 191, 181,  86, 105, 
    212,  42, 203, 207, 215, 151, 
     22, 225,  79,   9,  89, 110, 
    193,   0,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
     25, 109, 152, 175, 246, 115, 
    105, 218,  88,  80,  68,  80, 
    122,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  69, 110, 118, 105, 114, 
    111, 110, 109, 101, 110, 116, 
     77,  97, 112,  69, 102, 102, 
    101,  99, 116,  95,  80,  83, 
     69, 110, 118,  77,  97, 112, 
     80, 105, 120, 101, 108,  76, 
    105, 103, 104, 116, 105, 110, 
    103,  70, 114, 101, 115, 110, 
    101, 108,  46, 112, 100,  98
};
