#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[368]
// Embedded Data:
//  0x00000170 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x0000016b - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_output_siv o4.xyzw, position
dcl_temps 3
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r0.xyzx, cb0[17].xyzx
dp3 r1.y, r0.xyzx, cb0[18].xyzx
dp3 r1.z, r0.xyzx, cb0[19].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
dp3 r1.x, -cb0[4].xyzx, r0.xyzx
dp3 r1.y, -cb0[5].xyzx, r0.xyzx
dp3 r1.z, -cb0[6].xyzx, r0.xyzx
ge r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r1.yyyy, cb0[8].xyzx
mad r1.xyw, r1.xxxx, cb0[7].xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, cb0[9].xyzx, r1.xywx
mad o0.xyz, r1.xyzx, cb0[2].xyzx, cb0[3].xyzx
mov o0.w, cb0[2].w
dp4 r1.x, v0.xyzw, cb0[13].xyzw
dp4 r1.y, v0.xyzw, cb0[14].xyzw
dp4 r1.z, v0.xyzw, cb0[15].xyzw
add r1.xyz, -r1.xyzx, cb0[10].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r1.xyzx, r0.xyzx
add r0.w, -|r0.w|, l(1.000000)
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[1].y
exp r0.w, r0.w
mul o1.xyz, r0.wwww, cb0[1].xxxx
dp4_sat o1.w, v0.xyzw, cb0[12].xyzw
mov o2.xy, v2.xyxx
dp3 r0.w, -r1.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad o3.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
dp4 o4.x, v0.xyzw, cb0[20].xyzw
dp4 o4.y, v0.xyzw, cb0[21].xyzw
dp4 o4.z, v0.xyzw, cb0[22].xyzw
dp4 o4.w, v0.xyzw, cb0[23].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[368], bundle is:[268] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneEnvironmentMapEffect_VSEnvMapFresnelBn.pdb
// Shader Semantic Hash      : 0x1293d8412b7953d7
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 660 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 23;
NumSgprs             = 54;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x30         // 00000000000C: C3020130
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x4c         // 000000000010: C28A014C
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x48         // 000000000014: C28C0148
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x28         // 000000000018: C28E0128
  s_buffer_load_dwordx4  s[32:35], s[0:3], 0x44         // 00000000001C: C2900144
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000020: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000024: 0E000E13
  v_mad_f32     v1, v10, 2.0, -1.0                      // 000000000028: D2820001 03CDE90A
  v_mul_legacy_f32  v2, s15, v7                         // 000000000030: 0E040E0F
  v_mac_f32     v0, s18, v6                             // 000000000034: 3E000C12
  v_mad_f32     v3, v9, 2.0, -1.0                       // 000000000038: D2820003 03CDE909
  v_mul_legacy_f32  v9, s22, v1                         // 000000000040: 0E120216
  v_mul_legacy_f32  v10, s11, v7                        // 000000000044: 0E140E0B
  v_mac_f32     v2, s14, v6                             // 000000000048: 3E040C0E
  v_mac_f32     v0, s17, v5                             // 00000000004C: 3E000A11
  v_mad_f32     v8, v8, 2.0, -1.0                       // 000000000050: D2820008 03CDE908
  v_mul_legacy_f32  v11, s26, v1                        // 000000000058: 0E16021A
  v_mac_f32     v9, s21, v3                             // 00000000005C: 3E120615
  v_mac_f32     v10, s10, v6                            // 000000000060: 3E140C0A
  v_mac_f32     v2, s13, v5                             // 000000000064: 3E040A0D
  v_mac_f32     v0, s16, v4                             // 000000000068: 3E000810
  v_mul_legacy_f32  v1, s34, v1                         // 00000000006C: 0E020222
  v_mac_f32     v11, s25, v3                            // 000000000070: 3E160619
  v_mac_f32     v9, s20, v8                             // 000000000074: 3E121014
  v_mac_f32     v10, s9, v5                             // 000000000078: 3E140A09
  v_mac_f32     v2, s12, v4                             // 00000000007C: 3E04080C
  v_sub_f32     v0, s30, v0                             // 000000000080: 0800001E
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x14         // 000000000084: C2860114
  v_mac_f32     v1, s33, v3                             // 000000000088: 3E020621
  v_mac_f32     v11, s24, v8                            // 00000000008C: 3E161018
  v_mul_legacy_f32  v3, v9, v9                          // 000000000090: 0E061309
  v_mac_f32     v10, s8, v4                             // 000000000094: 3E140808
  v_sub_f32     v2, s29, v2                             // 000000000098: 0804041D
  v_mul_legacy_f32  v14, v0, v0                         // 00000000009C: 0E1C0100
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x10          // 0000000000A0: C2840110
  v_mac_f32     v1, s32, v8                             // 0000000000A4: 3E021020
  v_mac_f32     v3, v11, v11                            // 0000000000A8: 3E06170B
  v_sub_f32     v8, s28, v10                            // 0000000000AC: 0810141C
  v_mac_f32     v14, v2, v2                             // 0000000000B0: 3E1C0502
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x18         // 0000000000B4: C2880118
  v_mac_f32     v3, v1, v1                              // 0000000000B8: 3E060301
  v_mac_f32     v14, v8, v8                             // 0000000000BC: 3E1C1108
  v_rsq_f32     v3, v3                                  // 0000000000C0: 7E065D03
  v_rsq_f32     v10, v14                                // 0000000000C4: 7E145D0E
  v_mul_legacy_f32  v9, v9, v3                          // 0000000000C8: 0E120709
  v_mul_legacy_f32  v0, v0, v10                         // 0000000000CC: 0E001500
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x20         // 0000000000D0: C28A0120
  s_buffer_load_dwordx16  s[24:39], s[0:3], 0x50        // 0000000000D4: C30C0150
  v_mul_legacy_f32  v11, v11, v3                        // 0000000000D8: 0E16070B
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  v_mul_legacy_f32  v14, v9, -s14                       // 0000000000E0: D20E000E 40001D09
  v_mul_legacy_f32  v2, v2, v10                         // 0000000000E8: 0E041502
  v_mul_legacy_f32  v15, v9, v0                         // 0000000000EC: 0E1E0109
  s_buffer_load_dwordx2  s[14:15], s[0:3], 0x04         // 0000000000F0: C2470104
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x1c         // 0000000000F4: C294011C
  v_mul_legacy_f32  v1, v1, v3                          // 0000000000F8: 0E020701
  v_mul_legacy_f32  v3, v9, -s10                        // 0000000000FC: D20E0003 40001509
  v_mad_legacy_f32  v14, -s13, v11, v14                 // 000000000104: D280000E 243A160D
  v_mul_legacy_f32  v8, v8, v10                         // 00000000010C: 0E101508
  v_mac_f32     v15, v2, v11                            // 000000000110: 3E1E1702
  s_buffer_load_dwordx4  s[44:47], s[0:3], 0x0c         // 000000000114: C296010C
  s_buffer_load_dwordx4  s[48:51], s[0:3], 0x24         // 000000000118: C2980124
  v_mad_legacy_f32  v3, -s9, v11, v3                    // 00000000011C: D2800003 240E1609
  v_mad_legacy_f32  v14, -s12, v1, v14                  // 000000000124: D280000E 243A020C
  v_mul_legacy_f32  v10, v9, -s18                       // 00000000012C: D20E000A 40002509
  v_mac_f32     v15, v8, v1                             // 000000000134: 3E1E0308
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x08           // 000000000138: C2800108
  v_mad_legacy_f32  v3, -s8, v1, v3                     // 00000000013C: D2800003 240E0208
  v_mad_legacy_f32  v10, -s17, v11, v10                 // 000000000144: D280000A 242A1611
  v_cmp_ge_f32  s[8:9], v14, 0                          // 00000000014C: D00C0008 0001010E
  v_add_f32     v15, -abs(v15), 1.0                     // 000000000154: D206010F 2001E50F
  v_mad_legacy_f32  v10, -s16, v1, v10                  // 00000000015C: D280000A 242A0210
  v_cmp_le_f32  vcc, 0, v3                              // 000000000164: 7C060680
  v_cndmask_b32  v14, 0, v14, s[8:9]                    // 000000000168: D200000E 00221C80
  v_max_legacy_f32  v15, 0, v15                         // 000000000170: 1C1E1E80
  v_cmp_ge_f32  s[8:9], v10, 0                          // 000000000174: D00C0008 0001010A
  v_cndmask_b32  v3, 0, v3, vcc                         // 00000000017C: 00060680
  v_mul_legacy_f32  v16, s20, v14                       // 000000000180: 0E201C14
  v_mul_legacy_f32  v17, s21, v14                       // 000000000184: 0E221C15
  v_mul_legacy_f32  v14, s22, v14                       // 000000000188: 0E1C1C16
  v_log_f32     v15, v15                                // 00000000018C: 7E1E4F0F
  v_mul_legacy_f32  v18, s7, v7                         // 000000000190: 0E240E07
  v_mul_legacy_f32  v19, v9, -v0                        // 000000000194: D20E0013 40020109
  v_mul_legacy_f32  v20, s27, v7                        // 00000000019C: 0E280E1B
  v_mul_legacy_f32  v21, s31, v7                        // 0000000001A0: 0E2A0E1F
  v_mul_legacy_f32  v22, s35, v7                        // 0000000001A4: 0E2C0E23
  v_mul_legacy_f32  v7, s39, v7                         // 0000000001A8: 0E0E0E27
  v_cndmask_b32  v10, 0, v10, s[8:9]                    // 0000000001AC: D200000A 00221480
  s_waitcnt     lgkmcnt(0)                              // 0000000001B4: BF8C007F
  v_mac_f32     v16, s40, v3                            // 0000000001B8: 3E200628
  v_mac_f32     v17, s41, v3                            // 0000000001BC: 3E220629
  v_mac_f32     v14, s42, v3                            // 0000000001C0: 3E1C062A
  v_mul_legacy_f32  v3, s15, v15                        // 0000000001C4: 0E061E0F
  v_mac_f32     v18, s6, v6                             // 0000000001C8: 3E240C06
  v_mad_legacy_f32  v19, -v2, v11, v19                  // 0000000001CC: D2800013 244E1702
  v_mac_legacy_f32  v20, s26, v6                        // 0000000001D4: 0C280C1A
  v_mac_legacy_f32  v21, s30, v6                        // 0000000001D8: 0C2A0C1E
  v_mac_legacy_f32  v22, s34, v6                        // 0000000001DC: 0C2C0C22
  v_mac_legacy_f32  v7, s38, v6                         // 0000000001E0: 0C0E0C26
  v_mac_f32     v16, s48, v10                           // 0000000001E4: 3E201430
  v_mac_f32     v17, s49, v10                           // 0000000001E8: 3E221431
  v_mac_f32     v14, s50, v10                           // 0000000001EC: 3E1C1432
  v_mov_b32     v6, s44                                 // 0000000001F0: 7E0C022C
  v_mov_b32     v10, s45                                // 0000000001F4: 7E14022D
  v_mov_b32     v15, s46                                // 0000000001F8: 7E1E022E
  v_exp_f32     v3, v3                                  // 0000000001FC: 7E064B03
  v_mac_f32     v18, s5, v5                             // 000000000200: 3E240A05
  v_mad_legacy_f32  v19, -v8, v1, v19 mul:2             // 000000000204: D2800013 2C4E0308
  v_mac_legacy_f32  v20, s25, v5                        // 00000000020C: 0C280A19
  v_mac_legacy_f32  v21, s29, v5                        // 000000000210: 0C2A0A1D
  v_mac_legacy_f32  v22, s33, v5                        // 000000000214: 0C2C0A21
  v_mac_legacy_f32  v7, s37, v5                         // 000000000218: 0C0E0A25
  v_mac_f32     v6, s0, v16                             // 00000000021C: 3E0C2000
  v_mac_f32     v10, s1, v17                            // 000000000220: 3E142201
  v_mac_f32     v15, s2, v14                            // 000000000224: 3E1E1C02
  v_mul_legacy_f32  v3, s14, v3                         // 000000000228: 0E06060E
  v_mad_legacy_f32  v18, v4, s4, v18 clamp              // 00000000022C: D2800812 04480904
  v_mad_legacy_f32  v8, v1, -v19, -v8                   // 000000000234: D2800008 C4222701
  v_mad_legacy_f32  v2, v11, -v19, -v2                  // 00000000023C: D2800002 C40A270B
  v_mad_legacy_f32  v0, v9, -v19, -v0                   // 000000000244: D2800000 C4022709
  v_mac_legacy_f32  v20, s24, v4                        // 00000000024C: 0C280818
  v_mac_legacy_f32  v21, s28, v4                        // 000000000250: 0C2A081C
  v_mac_legacy_f32  v22, s32, v4                        // 000000000254: 0C2C0820
  v_mac_legacy_f32  v7, s36, v4                         // 000000000258: 0C0E0824
  v_mov_b32     v1, s3                                  // 00000000025C: 7E020203
  v_mov_b32     v4, 0                                   // 000000000260: 7E080280
  v_mov_b32     v5, 1.0                                 // 000000000264: 7E0A02F2
  exp           pos0, v20, v21, v22, v7 done            // 000000000268: F80008CF 07161514
  exp           param0, v6, v10, v15, v1                // 000000000270: F800020F 010F0A06
  exp           param1, v3, v3, v3, v18                 // 000000000278: F800021F 12030303
  exp           param2, v12, v13, v4, v5                // 000000000280: F800022F 05040D0C
  exp           param3, v8, v2, v0, v5                  // 000000000288: F800023F 05000208
  s_endpgm                                              // 000000000290: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   23
//  NumSRegs:                   54
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   131
//  CycleSimNWaves:             131
//  Code Size:                  660
//Assembler Counts:
//  num_32bit_ops                     : 107
//  num_64bit_ops                     : 29
//  num_alu                           : 109
//  num_fc                            : 22
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 10
//  num_inst_vop2                     : 74
//  num_inst_vop3                     : 7
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 23
// m_uNumSRegs                       : 54
// m_uSCCodeSize                     : 660
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 131
// m_uCycleSimNWaves                 : 131

// Assembler Counts:
// num_32bit_ops                     : 107
// num_64bit_ops                     : 29
// num_alu                           : 109
// num_fc                            : 22
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 10
// num_inst_vop2                     : 74
// num_inst_vop3                     : 7
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 0
// num_inst_smem                     : 16
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[638], bundle is:[282] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneEnvironmentMapEffect_VSEnvMapFresnelBn.pdb
// Shader Semantic Hash      : 0x1293d8412b7953d7
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 772 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 23;
NumSgprs             = 62;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[12:15], s[8:11], 0x4c        // 00000000000C: C286094C
  s_buffer_load_dwordx4  s[16:19], s[8:11], 0x48        // 000000000010: C2880948
  s_buffer_load_dwordx4  s[20:23], s[8:11], 0x44        // 000000000014: C28A0944
  s_buffer_load_dwordx16  s[24:39], s[8:11], 0x30       // 000000000018: C30C0930
  s_waitcnt     vmcnt(0)                                // 00000000001C: BF8C0F70
  v_mad_legacy_f32  v0, v10, 2.0, -1.0                  // 000000000020: D2800000 03CDE90A
  v_mad_legacy_f32  v1, v9, 2.0, -1.0                   // 000000000028: D2800001 03CDE909
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_mul_legacy_f32  v2, s14, v0                         // 000000000034: 0E04000E
  v_mad_legacy_f32  v3, v8, 2.0, -1.0                   // 000000000038: D2800003 03CDE908
  v_mul_legacy_f32  v8, s18, v0                         // 000000000040: 0E100012
  v_mac_legacy_f32  v2, s13, v1                         // 000000000044: 0C04020D
  s_buffer_load_dwordx4  s[40:43], s[8:11], 0x28        // 000000000048: C2940928
  v_mul_legacy_f32  v0, s22, v0                         // 00000000004C: 0E000016
  v_mac_legacy_f32  v8, s17, v1                         // 000000000050: 0C100211
  v_mac_legacy_f32  v2, s12, v3                         // 000000000054: 0C04060C
  s_buffer_load_dwordx4  s[12:15], s[8:11], 0x14        // 000000000058: C2860914
  v_mac_legacy_f32  v0, s21, v1                         // 00000000005C: 0C000215
  v_mac_legacy_f32  v8, s16, v3                         // 000000000060: 0C100610
  v_mul_legacy_f32  v1, v2, v2                          // 000000000064: 0E020502
  v_mul_legacy_f32  v9, s39, v7                         // 000000000068: 0E120E27
  s_buffer_load_dwordx4  s[16:19], s[8:11], 0x10        // 00000000006C: C2880910
  v_mac_legacy_f32  v0, s20, v3                         // 000000000070: 0C000614
  v_mac_legacy_f32  v1, v8, v8                          // 000000000074: 0C021108
  v_mul_legacy_f32  v3, s35, v7                         // 000000000078: 0E060E23
  v_mac_legacy_f32  v9, s38, v6                         // 00000000007C: 0C120C26
  s_buffer_load_dwordx4  s[20:23], s[8:11], 0x18        // 000000000080: C28A0918
  s_buffer_load_dwordx16  s[44:59], s[8:11], 0x50       // 000000000084: C3160950
  v_mac_legacy_f32  v1, v0, v0                          // 000000000088: 0C020100
  v_mul_legacy_f32  v10, s31, v7                        // 00000000008C: 0E140E1F
  v_mac_legacy_f32  v3, s34, v6                         // 000000000090: 0C060C22
  v_mac_legacy_f32  v9, s37, v5                         // 000000000094: 0C120A25
  v_rsq_f32     v1, v1                                  // 000000000098: 7E025D01
  v_mac_legacy_f32  v10, s30, v6                        // 00000000009C: 0C140C1E
  v_mac_legacy_f32  v3, s33, v5                         // 0000000000A0: 0C060A21
  v_mac_legacy_f32  v9, s36, v4                         // 0000000000A4: 0C120824
  v_mul_legacy_f32  v2, v2, v1                          // 0000000000A8: 0E040302
  v_mac_legacy_f32  v10, s29, v5                        // 0000000000AC: 0C140A1D
  v_mac_legacy_f32  v3, s32, v4                         // 0000000000B0: 0C060820
  s_waitcnt     lgkmcnt(0)                              // 0000000000B4: BF8C007F
  v_sub_f32     v9, s42, v9                             // 0000000000B8: 0812122A
  v_mul_legacy_f32  v8, v8, v1                          // 0000000000BC: 0E100308
  v_mul_legacy_f32  v11, v2, -s14                       // 0000000000C0: D20E000B 40001D02
  v_mac_legacy_f32  v10, s28, v4                        // 0000000000C8: 0C14081C
  v_sub_f32     v3, s41, v3                             // 0000000000CC: 08060629
  v_mul_legacy_f32  v14, v9, v9                         // 0000000000D0: 0E1C1309
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x20        // 0000000000D4: C28E0920
  v_mul_legacy_f32  v0, v0, v1                          // 0000000000D8: 0E000300
  v_mul_legacy_f32  v1, v2, -s18                        // 0000000000DC: D20E0001 40002502
  v_mad_legacy_f32  v11, -s13, v8, v11                  // 0000000000E4: D280000B 242E100D
  v_sub_f32     v10, s40, v10                           // 0000000000EC: 08141428
  v_mac_legacy_f32  v14, v3, v3                         // 0000000000F0: 0C1C0703
  s_buffer_load_dwordx4  s[32:35], s[8:11], 0x1c        // 0000000000F4: C290091C
  v_mad_legacy_f32  v1, -s17, v8, v1                    // 0000000000F8: D2800001 24061011
  v_mad_legacy_f32  v11, -s12, v0, v11                  // 000000000100: D280000B 242E000C
  v_mul_legacy_f32  v15, v2, -s22                       // 000000000108: D20E000F 40002D02
  v_mac_legacy_f32  v14, v10, v10                       // 000000000110: 0C1C150A
  v_mul_legacy_f32  v16, s47, v7                        // 000000000114: 0E200E2F
  s_buffer_load_dwordx4  s[12:15], s[8:11], 0x0c        // 000000000118: C286090C
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x24        // 00000000011C: C2920924
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000120: C080030C
  v_mad_legacy_f32  v1, -s16, v0, v1                    // 000000000124: D2800001 24060010
  v_mad_legacy_f32  v15, -s21, v8, v15                  // 00000000012C: D280000F 243E1015
  v_cmp_ge_f32  s[6:7], v11, 0                          // 000000000134: D00C0006 0001010B
  v_rsq_f32     v14, v14                                // 00000000013C: 7E1C5D0E
  v_mac_legacy_f32  v16, s46, v6                        // 000000000140: 0C200C2E
  v_mul_legacy_f32  v17, s51, v7                        // 000000000144: 0E220E33
  s_buffer_load_dwordx4  s[16:19], s[8:11], 0x08        // 000000000148: C2880908
  v_mad_legacy_f32  v15, -s20, v0, v15                  // 00000000014C: D280000F 243E0014
  v_cmp_le_f32  vcc, 0, v1                              // 000000000154: 7C060280
  v_cndmask_b32  v18, 0, 1.0, s[6:7]                    // 000000000158: D2000012 0019E480
  v_mul_legacy_f32  v9, v9, v14                         // 000000000160: 0E121D09
  v_mac_legacy_f32  v16, s45, v5                        // 000000000164: 0C200A2D
  v_mac_legacy_f32  v17, s50, v6                        // 000000000168: 0C220C32
  v_mul_legacy_f32  v19, s55, v7                        // 00000000016C: 0E260E37
  v_cmp_ge_f32  s[6:7], v15, 0                          // 000000000170: D00C0006 0001010F
  v_cndmask_b32  v20, 0, 1.0, vcc                       // 000000000178: D2000014 01A9E480
  v_mul_legacy_f32  v11, v11, v18                       // 000000000180: 0E16250B
  v_mul_legacy_f32  v3, v3, v14                         // 000000000184: 0E061D03
  v_mul_legacy_f32  v18, v2, v9                         // 000000000188: 0E241302
  v_mac_legacy_f32  v16, s44, v4                        // 00000000018C: 0C20082C
  v_mac_legacy_f32  v17, s49, v5                        // 000000000190: 0C220A31
  v_mac_legacy_f32  v19, s54, v6                        // 000000000194: 0C260C36
  v_mul_legacy_f32  v21, s59, v7                        // 000000000198: 0E2A0E3B
  s_buffer_load_dwordx2  s[8:9], s[8:11], 0x04          // 00000000019C: C2440904
  v_cndmask_b32  v22, 0, 1.0, s[6:7]                    // 0000000001A0: D2000016 0019E480
  v_mul_legacy_f32  v1, v1, v20                         // 0000000001A8: 0E022901
  s_waitcnt     lgkmcnt(0)                              // 0000000001AC: BF8C007F
  v_mul_legacy_f32  v20, s28, v11                       // 0000000001B0: 0E28161C
  v_mul_legacy_f32  v10, v10, v14                       // 0000000001B4: 0E141D0A
  v_mac_legacy_f32  v18, v3, v8                         // 0000000001B8: 0C241103
  v_mac_legacy_f32  v17, s48, v4                        // 0000000001BC: 0C220830
  v_mac_legacy_f32  v19, s53, v5                        // 0000000001C0: 0C260A35
  v_mac_legacy_f32  v21, s58, v6                        // 0000000001C4: 0C2A0C3A
  v_mul_legacy_f32  v14, v15, v22                       // 0000000001C8: 0E1C2D0F
  v_mul_legacy_f32  v15, s29, v11                       // 0000000001CC: 0E1E161D
  v_mac_legacy_f32  v20, s32, v1                        // 0000000001D0: 0C280220
  v_mac_legacy_f32  v18, v10, v0                        // 0000000001D4: 0C24010A
  v_mac_legacy_f32  v19, s52, v4                        // 0000000001D8: 0C260834
  v_mac_legacy_f32  v21, s57, v5                        // 0000000001DC: 0C2A0A39
  v_mul_legacy_f32  v11, s30, v11                       // 0000000001E0: 0E16161E
  v_mac_legacy_f32  v15, s33, v1                        // 0000000001E4: 0C1E0221
  v_mac_legacy_f32  v20, s36, v14                       // 0000000001E8: 0C281C24
  v_mov_b32     v22, s12                                // 0000000001EC: 7E2C020C
  v_add_f32     v18, -abs(v18), 1.0                     // 0000000001F0: D2060112 2001E512
  v_mac_legacy_f32  v21, s56, v4                        // 0000000001F8: 0C2A0838
  buffer_store_dword  v16, v0, s[0:3], s4 offset:64 glc slc // 0000000001FC: E0704040 04401000
  v_mac_legacy_f32  v11, s34, v1                        // 000000000204: 0C160222
  v_mac_legacy_f32  v15, s37, v14                       // 000000000208: 0C1E1C25
  v_mac_legacy_f32  v22, s16, v20                       // 00000000020C: 0C2C2810
  v_mov_b32     v1, s13                                 // 000000000210: 7E02020D
  v_max_legacy_f32  v16, 0, v18                         // 000000000214: 1C202480
  buffer_store_dword  v17, v0, s[0:3], s4 offset:68 glc slc // 000000000218: E0704044 04401100
  v_mac_legacy_f32  v11, s38, v14                       // 000000000220: 0C161C26
  v_mac_legacy_f32  v1, s17, v15                        // 000000000224: 0C021E11
  v_mov_b32     v14, s14                                // 000000000228: 7E1C020E
  v_log_f32     v15, v16                                // 00000000022C: 7E1E4F10
  buffer_store_dword  v19, v0, s[0:3], s4 offset:72 glc slc // 000000000230: E0704048 04401300
  v_mac_legacy_f32  v14, s18, v11                       // 000000000238: 0C1C1612
  v_mul_legacy_f32  v11, s9, v15                        // 00000000023C: 0E161E09
  buffer_store_dword  v21, v0, s[0:3], s4 offset:76 glc slc // 000000000240: E070404C 04401500
  v_exp_f32     v11, v11                                // 000000000248: 7E164B0B
  buffer_store_dword  v22, v0, s[0:3], s4 glc slc       // 00000000024C: E0704000 04401600
  v_mov_b32     v15, s19                                // 000000000254: 7E1E0213
  v_mul_legacy_f32  v11, s8, v11                        // 000000000258: 0E161608
  v_mul_legacy_f32  v7, s27, v7                         // 00000000025C: 0E0E0E1B
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 000000000260: E0704004 04400100
  v_mac_legacy_f32  v7, s26, v6                         // 000000000268: 0C0E0C1A
  buffer_store_dword  v14, v0, s[0:3], s4 offset:8 glc slc // 00000000026C: E0704008 04400E00
  v_mac_legacy_f32  v7, s25, v5                         // 000000000274: 0C0E0A19
  buffer_store_dword  v15, v0, s[0:3], s4 offset:12 glc slc // 000000000278: E070400C 04400F00
  v_mad_legacy_f32  v7, v4, s24, v7 clamp               // 000000000280: D2800807 041C3104
  v_mul_legacy_f32  v1, v2, -v9                         // 000000000288: D20E0001 40021302
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 000000000290: E0704010 04400B00
  v_mad_legacy_f32  v1, -v3, v8, v1                     // 000000000298: D2800001 24061103
  buffer_store_dword  v11, v0, s[0:3], s4 offset:20 glc slc // 0000000002A0: E0704014 04400B00
  v_mad_legacy_f32  v1, -v10, v0, v1 mul:2              // 0000000002A8: D2800001 2C06010A
  buffer_store_dword  v11, v0, s[0:3], s4 offset:24 glc slc // 0000000002B0: E0704018 04400B00
  v_mad_legacy_f32  v10, v0, -v1, -v10                  // 0000000002B8: D280000A C42A0300
  buffer_store_dword  v7, v0, s[0:3], s4 offset:28 glc slc // 0000000002C0: E070401C 04400700
  v_mad_legacy_f32  v3, v8, -v1, -v3                    // 0000000002C8: D2800003 C40E0308
  buffer_store_dword  v12, v0, s[0:3], s4 offset:32 glc slc // 0000000002D0: E0704020 04400C00
  v_mad_legacy_f32  v9, v2, -v1, -v9                    // 0000000002D8: D2800009 C4260302
  buffer_store_dword  v13, v0, s[0:3], s4 offset:36 glc slc // 0000000002E0: E0704024 04400D00
  buffer_store_dword  v10, v0, s[0:3], s4 offset:48 glc slc // 0000000002E8: E0704030 04400A00
  buffer_store_dword  v3, v0, s[0:3], s4 offset:52 glc slc // 0000000002F0: E0704034 04400300
  buffer_store_dword  v9, v0, s[0:3], s4 offset:56 glc slc // 0000000002F8: E0704038 04400900
  s_endpgm                                              // 000000000300: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   23
//  NumSRegs:                   62
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   134
//  CycleSimNWaves:             134
//  Code Size:                  772
//Assembler Counts:
//  num_32bit_ops                     : 109
//  num_64bit_ops                     : 42
//  num_alu                           : 110
//  num_fc                            : 24
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 8
//  num_inst_vop2                     : 76
//  num_inst_vop3                     : 5
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 14
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 23
// m_uNumSRegs                       : 62
// m_uSCCodeSize                     : 772
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 134
// m_uCycleSimNWaves                 : 134

// Assembler Counts:
// num_32bit_ops                     : 109
// num_64bit_ops                     : 42
// num_alu                           : 110
// num_fc                            : 24
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 8
// num_inst_vop2                     : 76
// num_inst_vop3                     : 5
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 0
// num_inst_smem                     : 17
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 14
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[922], bundle is:[285] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneEnvironmentMapEffect_VSEnvMapFresnelBn.pdb
// Shader Semantic Hash      : 0x1293d8412b7953d7
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 728 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 19;
NumSgprs             = 64;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_mov_b32     s6, s2                                  // 000000000004: BE860302
  s_mov_b32     s7, s3                                  // 000000000008: BE870303
  s_load_dwordx4  s[16:19], s[6:7], 0x00                // 00000000000C: C0880700
  s_waitcnt     lgkmcnt(0)                              // 000000000010: BF8C007F
  s_buffer_load_dwordx4  s[0:3], s[16:19], 0x44         // 000000000014: C2801144
  s_buffer_load_dwordx4  s[20:23], s[16:19], 0x48       // 000000000018: C28A1148
  s_buffer_load_dwordx4  s[24:27], s[16:19], 0x4c       // 00000000001C: C28C114C
  s_buffer_load_dwordx4  s[28:31], s[16:19], 0x10       // 000000000020: C28E1110
  s_buffer_load_dwordx4  s[32:35], s[16:19], 0x14       // 000000000024: C2901114
  s_buffer_load_dwordx4  s[36:39], s[16:19], 0x18       // 000000000028: C2921118
  s_buffer_load_dwordx4  s[40:43], s[16:19], 0x20       // 00000000002C: C2941120
  s_buffer_load_dwordx4  s[44:47], s[16:19], 0x1c       // 000000000030: C296111C
  s_buffer_load_dwordx4  s[48:51], s[16:19], 0x24       // 000000000034: C2981124
  s_buffer_load_dwordx4  s[52:55], s[16:19], 0x08       // 000000000038: C29A1108
  s_buffer_load_dwordx4  s[56:59], s[16:19], 0x0c       // 00000000003C: C29C110C
  s_mov_b32     m0, 0x00010000                          // 000000000040: BEFC03FF 00010000
  s_waitcnt     vmcnt(0)                                // 000000000048: BF8C0F70
  v_mad_legacy_f32  v0, v8, 2.0, -1.0                   // 00000000004C: D2800000 03CDE908
  v_mad_legacy_f32  v2, v9, 2.0, -1.0                   // 000000000054: D2800002 03CDE909
  v_mad_legacy_f32  v3, v10, 2.0, -1.0                  // 00000000005C: D2800003 03CDE90A
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  v_mul_legacy_f32  v8, s2, v3                          // 000000000068: 0E100602
  v_mac_legacy_f32  v8, s1, v2                          // 00000000006C: 0C100401
  v_mac_legacy_f32  v8, s0, v0                          // 000000000070: 0C100000
  s_buffer_load_dwordx16  s[0:15], s[16:19], 0x30       // 000000000074: C3001130
  v_mul_legacy_f32  v9, s22, v3                         // 000000000078: 0E120616
  v_mac_legacy_f32  v9, s21, v2                         // 00000000007C: 0C120415
  v_mac_legacy_f32  v9, s20, v0                         // 000000000080: 0C120014
  v_mul_legacy_f32  v3, s26, v3                         // 000000000084: 0E06061A
  v_mac_legacy_f32  v3, s25, v2                         // 000000000088: 0C060419
  v_mac_legacy_f32  v3, s24, v0                         // 00000000008C: 0C060018
  v_mul_legacy_f32  v0, v3, v3                          // 000000000090: 0E000703
  v_mac_legacy_f32  v0, v9, v9                          // 000000000094: 0C001309
  v_mac_legacy_f32  v0, v8, v8                          // 000000000098: 0C001108
  v_rsq_f32     v0, v0                                  // 00000000009C: 7E005D00
  v_mul_legacy_f32  v2, v8, v0                          // 0000000000A0: 0E040108
  v_mul_legacy_f32  v8, v9, v0                          // 0000000000A4: 0E100109
  v_mul_legacy_f32  v0, v3, v0                          // 0000000000A8: 0E000103
  v_mul_legacy_f32  v3, v0, -s30                        // 0000000000AC: D20E0003 40003D00
  v_mad_legacy_f32  v3, -s29, v8, v3                    // 0000000000B4: D2800003 240E101D
  v_mad_legacy_f32  v3, -s28, v2, v3                    // 0000000000BC: D2800003 240E041C
  v_mul_legacy_f32  v9, v0, -s34                        // 0000000000C4: D20E0009 40004500
  v_mad_legacy_f32  v9, -s33, v8, v9                    // 0000000000CC: D2800009 24261021
  v_mad_legacy_f32  v9, -s32, v2, v9                    // 0000000000D4: D2800009 24260420
  s_buffer_load_dwordx4  s[32:35], s[16:19], 0x28       // 0000000000DC: C2901128
  v_mul_legacy_f32  v10, v0, -s38                       // 0000000000E0: D20E000A 40004D00
  v_mad_legacy_f32  v10, -s37, v8, v10                  // 0000000000E8: D280000A 242A1025
  v_mad_legacy_f32  v10, -s36, v2, v10                  // 0000000000F0: D280000A 242A0424
  s_buffer_load_dwordx2  s[36:37], s[16:19], 0x04       // 0000000000F8: C2521104
  s_buffer_load_dwordx16  s[16:31], s[16:19], 0x50      // 0000000000FC: C3081150
  v_cmp_ge_f32  s[38:39], v3, 0                         // 000000000100: D00C0026 00010103
  v_cmp_ge_f32  s[60:61], v9, 0                         // 000000000108: D00C003C 00010109
  v_cmp_le_f32  vcc, 0, v10                             // 000000000110: 7C061480
  v_cndmask_b32  v11, 0, 1.0, s[38:39]                  // 000000000114: D200000B 0099E480
  v_cndmask_b32  v14, 0, 1.0, s[60:61]                  // 00000000011C: D200000E 00F1E480
  v_cndmask_b32  v15, 0, 1.0, vcc                       // 000000000124: D200000F 01A9E480
  v_mul_legacy_f32  v3, v3, v11                         // 00000000012C: 0E061703
  v_mul_legacy_f32  v9, v9, v14                         // 000000000130: 0E121D09
  v_mul_legacy_f32  v10, v10, v15                       // 000000000134: 0E141F0A
  v_mul_legacy_f32  v11, s40, v9                        // 000000000138: 0E161228
  v_mul_legacy_f32  v14, s41, v9                        // 00000000013C: 0E1C1229
  v_mul_legacy_f32  v9, s42, v9                         // 000000000140: 0E12122A
  v_mac_legacy_f32  v11, s44, v3                        // 000000000144: 0C16062C
  v_mac_legacy_f32  v14, s45, v3                        // 000000000148: 0C1C062D
  v_mac_legacy_f32  v9, s46, v3                         // 00000000014C: 0C12062E
  v_mac_legacy_f32  v11, s48, v10                       // 000000000150: 0C161430
  v_mac_legacy_f32  v14, s49, v10                       // 000000000154: 0C1C1431
  v_mac_legacy_f32  v9, s50, v10                        // 000000000158: 0C121432
  v_mov_b32     v3, s56                                 // 00000000015C: 7E060238
  v_mac_legacy_f32  v3, s52, v11                        // 000000000160: 0C061634
  v_mov_b32     v10, s57                                // 000000000164: 7E140239
  v_mac_legacy_f32  v10, s53, v14                       // 000000000168: 0C141C35
  v_mov_b32     v11, s58                                // 00000000016C: 7E16023A
  v_mac_legacy_f32  v11, s54, v9                        // 000000000170: 0C161236
  s_waitcnt     lgkmcnt(0)                              // 000000000174: BF8C007F
  v_mul_legacy_f32  v9, s7, v7                          // 000000000178: 0E120E07
  v_mac_legacy_f32  v9, s6, v6                          // 00000000017C: 0C120C06
  v_mac_legacy_f32  v9, s5, v5                          // 000000000180: 0C120A05
  v_mac_legacy_f32  v9, s4, v4                          // 000000000184: 0C120804
  v_mul_legacy_f32  v14, s11, v7                        // 000000000188: 0E1C0E0B
  v_mac_legacy_f32  v14, s10, v6                        // 00000000018C: 0C1C0C0A
  v_mac_legacy_f32  v14, s9, v5                         // 000000000190: 0C1C0A09
  v_mac_legacy_f32  v14, s8, v4                         // 000000000194: 0C1C0808
  v_mul_legacy_f32  v15, s15, v7                        // 000000000198: 0E1E0E0F
  v_mac_legacy_f32  v15, s14, v6                        // 00000000019C: 0C1E0C0E
  v_mac_legacy_f32  v15, s13, v5                        // 0000000001A0: 0C1E0A0D
  v_mac_legacy_f32  v15, s12, v4                        // 0000000001A4: 0C1E080C
  v_sub_f32     v9, s32, v9                             // 0000000001A8: 08121220
  v_sub_f32     v14, s33, v14                           // 0000000001AC: 081C1C21
  v_sub_f32     v15, s34, v15                           // 0000000001B0: 081E1E22
  v_mul_legacy_f32  v16, v15, v15                       // 0000000001B4: 0E201F0F
  v_mac_legacy_f32  v16, v14, v14                       // 0000000001B8: 0C201D0E
  v_mac_legacy_f32  v16, v9, v9                         // 0000000001BC: 0C201309
  v_rsq_f32     v16, v16                                // 0000000001C0: 7E205D10
  v_mul_legacy_f32  v9, v9, v16                         // 0000000001C4: 0E122109
  v_mul_legacy_f32  v14, v14, v16                       // 0000000001C8: 0E1C210E
  v_mul_legacy_f32  v15, v15, v16                       // 0000000001CC: 0E1E210F
  v_mul_legacy_f32  v16, v0, v15                        // 0000000001D0: 0E201F00
  v_mac_legacy_f32  v16, v14, v8                        // 0000000001D4: 0C20110E
  v_mac_legacy_f32  v16, v9, v2                         // 0000000001D8: 0C200509
  v_add_f32     v16, -abs(v16), 1.0                     // 0000000001DC: D2060110 2001E510
  v_max_legacy_f32  v16, 0, v16                         // 0000000001E4: 1C202080
  v_log_f32     v16, v16                                // 0000000001E8: 7E204F10
  v_mul_legacy_f32  v16, s37, v16                       // 0000000001EC: 0E202025
  v_exp_f32     v16, v16                                // 0000000001F0: 7E204B10
  v_mul_legacy_f32  v16, s36, v16                       // 0000000001F4: 0E202024
  v_mul_legacy_f32  v17, s3, v7                         // 0000000001F8: 0E220E03
  v_mac_legacy_f32  v17, s2, v6                         // 0000000001FC: 0C220C02
  v_mac_legacy_f32  v17, s1, v5                         // 000000000200: 0C220A01
  v_mad_legacy_f32  v17, v4, s0, v17 clamp              // 000000000204: D2800811 04440104
  v_mul_legacy_f32  v18, v0, -v15                       // 00000000020C: D20E0012 40021F00
  v_mad_legacy_f32  v18, -v14, v8, v18                  // 000000000214: D2800012 244A110E
  v_mad_legacy_f32  v18, -v9, v2, v18 mul:2             // 00000000021C: D2800012 2C4A0509
  v_mad_legacy_f32  v9, v2, -v18, -v9                   // 000000000224: D2800009 C4262502
  v_mad_legacy_f32  v14, v8, -v18, -v14                 // 00000000022C: D280000E C43A2508
  v_mad_legacy_f32  v15, v0, -v18, -v15                 // 000000000234: D280000F C43E2500
  v_mul_legacy_f32  v0, s19, v7                         // 00000000023C: 0E000E13
  v_mac_legacy_f32  v0, s18, v6                         // 000000000240: 0C000C12
  v_mac_legacy_f32  v0, s17, v5                         // 000000000244: 0C000A11
  v_mac_legacy_f32  v0, s16, v4                         // 000000000248: 0C000810
  v_mul_legacy_f32  v2, s23, v7                         // 00000000024C: 0E040E17
  v_mac_legacy_f32  v2, s22, v6                         // 000000000250: 0C040C16
  v_mac_legacy_f32  v2, s21, v5                         // 000000000254: 0C040A15
  v_mac_legacy_f32  v2, s20, v4                         // 000000000258: 0C040814
  v_mul_legacy_f32  v8, s27, v7                         // 00000000025C: 0E100E1B
  v_mac_legacy_f32  v8, s26, v6                         // 000000000260: 0C100C1A
  v_mac_legacy_f32  v8, s25, v5                         // 000000000264: 0C100A19
  v_mac_legacy_f32  v8, s24, v4                         // 000000000268: 0C100818
  v_mul_legacy_f32  v7, s31, v7                         // 00000000026C: 0E0E0E1F
  v_mac_legacy_f32  v7, s30, v6                         // 000000000270: 0C0E0C1E
  v_mac_legacy_f32  v7, s29, v5                         // 000000000274: 0C0E0A1D
  v_mac_legacy_f32  v7, s28, v4                         // 000000000278: 0C0E081C
  s_movk_i32    s0, 0x0050                              // 00000000027C: B0000050
  v_mul_lo_i32  v1, v1, s0                              // 000000000280: D2D60001 00000101
  ds_write2_b32  v1, v0, v2 offset0:16 offset1:17       // 000000000288: D8381110 00020001
  ds_write2_b32  v1, v8, v7 offset0:18 offset1:19       // 000000000290: D8381312 00070801
  ds_write2_b32  v1, v3, v10 offset1:1                  // 000000000298: D8380100 000A0301
  v_mov_b32     v0, s55                                 // 0000000002A0: 7E000237
  ds_write2_b32  v1, v11, v0 offset0:2 offset1:3        // 0000000002A4: D8380302 00000B01
  ds_write2_b32  v1, v16, v16 offset0:4 offset1:5       // 0000000002AC: D8380504 00101001
  ds_write2_b32  v1, v16, v17 offset0:6 offset1:7       // 0000000002B4: D8380706 00111001
  ds_write2_b32  v1, v12, v13 offset0:8 offset1:9       // 0000000002BC: D8380908 000D0C01
  ds_write2_b32  v1, v9, v14 offset0:12 offset1:13      // 0000000002C4: D8380D0C 000E0901
  ds_write_b32  v1, v15 offset:56                       // 0000000002CC: D8340038 00000F01
  s_endpgm                                              // 0000000002D4: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         32
//  WorkgroupSize:              64
//  NumVRegs:                   19
//  NumSRegs:                   64
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   32
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   134
//  CycleSimNWaves:             134
//  Code Size:                  728
//Assembler Counts:
//  num_32bit_ops                     : 111
//  num_64bit_ops                     : 35
//  num_alu                           : 111
//  num_fc                            : 26
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 8
//  num_inst_vop2                     : 76
//  num_inst_vop3                     : 5
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 32
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 19
// m_uNumSRegs                       : 64
// m_uSCCodeSize                     : 728
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 32
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 134
// m_uCycleSimNWaves                 : 134

// Assembler Counts:
// num_32bit_ops                     : 111
// num_64bit_ops                     : 35
// num_alu                           : 111
// num_fc                            : 26
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 8
// num_inst_vop2                     : 76
// num_inst_vop3                     : 5
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 0
// num_inst_smem                     : 16
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE EnvironmentMapEffect_VSEnvMapFresnelBn[] =
{
     68,  88,  66,  67,   6, 192, 
    136,   1,  90,  54,  20, 238, 
     30,  31, 194, 245, 138, 181, 
    114, 109,   1,   0,   0,   0, 
    191,  20,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  76,   1, 
      0,   0,  56,  20,   0,   0, 
     72,  20,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 134,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      3,  12,   0,   0, 134,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   8,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
    228,  18,   0,   0,  80,   0, 
      1,   0, 185,   4,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 112,   1,   0,   0, 
     80,   0,   1,   0, 107,   1, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     24,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      3,   0,   0,   0,  50,   0, 
      0,  15, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  64,   0,   0,   0,  64, 
      0,   0,   0,  64,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128, 191,   0,   0, 
    128, 191,   0,   0, 128, 191, 
      0,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  17,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  18,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
     19,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  68,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  16,   0,   0,   9, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     34,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  16,   0,   0,   9, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70, 130,  32, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  29,   0,   0,  10, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,  10, 114,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  86,   5,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  50,   0, 
      0,  10, 178,   0,  16,   0, 
      1,   0,   0,   0,   6,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 136,  32,   0,   0,   0, 
      0,   0,   7,   0,   0,   0, 
     70,   8,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 166,  10,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      9,   0,   0,   0,  70,   3, 
     16,   0,   1,   0,   0,   0, 
     50,   0,   0,  11, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  54,   0,   0,   6, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58, 128,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     13,   0,   0,   0,  17,   0, 
      0,   8,  34,   0,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  14,   0,   0,   0, 
     17,   0,   0,   8,  66,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,   0,   0,   0,   9, 
    114,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,  10,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0, 246,  15,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   8, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16, 128, 193,   0,   0,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   0,   0, 128,  63, 
     52,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0,   0,   0,  47,   0, 
      0,   5, 130,   0,  16,   0, 
      0,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   8, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  26, 128,  32,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,  25,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   8, 114,  32,  16,   0, 
      1,   0,   0,   0, 246,  15, 
     16,   0,   0,   0,   0,   0, 
      6, 128,  32,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     17,  32,   0,   8, 130,  32, 
     16,   0,   1,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  12,   0, 
      0,   0,  54,   0,   0,   5, 
     50,  32,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      2,   0,   0,   0,  16,   0, 
      0,   8, 130,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
      0,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,   0,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  11, 114,  32,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
    246,  15,  16, 128,  65,   0, 
      0,   0,   0,   0,   0,   0, 
     70,   2,  16, 128,  65,   0, 
      0,   0,   1,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  20,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     21,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  22,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  23,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0,  14,   1, 
      0,   0,  23,   0,   1,   0, 
     32, 192,  24,   0, 120,   1, 
    237, 152,  77, 108,  27,  69, 
     20, 199, 103, 102,  55, 227, 
    241, 122, 242, 236,  56, 235, 
    205,  71,  55,  27, 199,  56, 
    196,  24, 167,   4, 144,  56, 
    228,  48, 184,  73,  75,  43, 
      2,  13,  34,  17, 234, 193, 
     21,  74,  27,  87,  68,  36, 
    142,  21,  71,   8,   4, 114, 
     77,  65,  80, 161,  10,  85, 
     80,  33,  46, 220,  57, 112, 
    228,  76,  35,  39, 135,  94, 
     16, 200,  18, 106, 111, 112, 
    225, 192,  13, 113, 234, 173, 
    188, 231, 236,  66, 148, 150, 
     51,   8, 237,  79, 251, 159, 
     55, 243, 102, 102, 231, 205, 
    199, 233, 237, 141, 178,  62, 
     63, 189, 123, 117, 154, 236, 
    183, 207,  14,  46, 124,  51, 
    192,  24, 126, 125, 108,  42, 
    144, 166,  75,  37,  99, 171, 
     35,  84,  50,  86, 164, 130, 
    163,   4,  99, 228, 122,  14, 
    117,  11, 235,  85, 180,  37, 
     20, 245, 147, 253, 172, 248, 
     96, 193, 251, 153,  45, 126, 
    133, 245,   5, 212,  24, 234, 
    131,  80, 111, 162,  38,  80, 
     91,  40,  15,  21, 173, 121, 
    148, 200,  71,  75,  29, 197, 
     65, 189, 136,  74, 160, 162, 
    190,  12,  21, 200,  67, 255, 
     89, 163, 226, 209,  92,  71, 
    133,  91, 122,  36,  20,  91, 
      4, 253, 151, 226,  36, 104, 
    191, 255,  53, 232,  28, 162, 
    123,  34, 232,  62, 142,   2, 
     40,  11,  69, 216, 225, 166, 
    163, 179, 171, 134, 109,  50, 
    180, 183,  61, 212,  63, 241, 
      0, 137, 222,  69,  68, 212, 
    166, 255,  75, 182,  60,  39, 
    249, 199, 121,  41, 246,  51, 
     18,  29,  18,  59,  37,  30, 
    158, 148,  40, 188,  48, 169, 
     80,  73,  20,  94, 162,  76, 
    161,  52, 106,  16, 133,   1, 
    202,  52,  10,  47,  82,  14, 
    161, 178, 168,  97,  20, 238, 
     73, 230,  80, 120, 248,  18, 
      3, 148, 248, 102,  37,  62, 
     36,  57, 142,  58, 129, 242, 
     81, 248, 144, 100, 128, 154, 
     60, 140,   5, 151, 234,  35, 
    249, 225,  14, 165,  56,  60, 
     12, 105,  81, 132, 255, 127, 
    232,  12, 240, 152, 251, 208, 
     89,  80,  59, 226, 104,  61, 
     38,  38,  38,  38,  38,  38, 
     38,  38,  38,  38,  38,  38, 
     38,  38,  38, 230, 223,  66, 
     76,  93, 251, 142,  89, 157, 
    189, 171, 236, 198, 237,  57, 
     46, 246,  95, 226, 159, 116, 
    207, 241,  27, 221,  18, 255, 
    180, 123, 154, 223, 236,  54, 
    209,  63,  12,  12,  56, 187, 
    214, 115, 126, 251, 222,  74, 
    131,  13,  89, 205, 140, 133, 
    237,  36, 182,  61, 145, 133, 
     20, 184,   0, 218,  54,  67, 
     14,  51,  10, 253,  10, 253, 
    227, 194, 131, 156, 204,  26, 
     71, 187, 102, 208, 177,  77, 
     70,  49,  83,  16,   2, 198, 
    164, 103, 220,  76, 214,  36, 
     29, 215, 104, 101, 155, 128, 
     49, 229, 242, 143, 186,  83, 
     82, 152, 209, 140, 103, 146, 
    195,  18, 148, 114, 205, 132, 
    109,  43, 198, 125, 200, 240, 
     15, 187, 249, 140,  48, 169, 
     17, 105, 124,  55, 163, 196, 
    128, 111,  70, 249, 245,  46, 
    183, 164,  81,  67, 190, 177, 
     46, 202,  54,  92, 116, 219, 
    201,  68,  22,  88, 142,  65, 
     30, 227, 127, 133, 235, 253, 
     84, 194,   3, 218,  19, 134, 
    222,  75,  78, 176, 170, 200, 
    217, 144, 228,   1, 216, 252, 
    108, 215, 231, 183, 186,  60, 
     33, 192, 162, 190,  28, 171, 
      2, 235, 244,   6, 189, 249, 
    162, 202, 101,  64, 140,   4, 
     70, 243,  47, 186,  69, 254, 
    101, 215,  66, 127, 210, 131, 
     34, 245, 107,  49,  95, 116, 
    104, 252,  52, 171,  42,  43, 
     48, 138, 119, 250, 253,  74, 
      0, 250,  59, 189,  33, 175, 
     92,  84,  76, 255,   8, 156, 
    179,  52, 151, 189, 244, 175, 
     60,  79, 254, 140,  40,  23, 
     59,  82, 190,   7, 140, 245, 
     58, 126, 129, 117, 130, 192, 
    167, 113,  14, 142,  67,  63, 
    115, 253,  60, 228, 252,   2, 
    120, 190,  15, 233, 229, 160, 
    157, 192, 229, 134, 105,  29, 
     46, 170,  39, 160,   4, 147, 
     80, 134, 199, 160,   2,  51, 
      0, 224, 208,  63, 220,   2, 
    163, 125, 149, 100, 222,  60, 
     33,  11, 166,  44, 125, 147, 
     14,  36,  72,  93,  52, 195, 
    184, 158,  24,  57,  95,  28, 
    215,  37,  29, 232, 178,  46, 
    232, 138, 126,  92, 131, 158, 
    115, 243, 230, 105, 183,  96, 
    158, 113, 125,  83,  17, 186, 
     61,  43, 220, 246,  73,  17, 
    180, 173,  37, 217,  30, 112, 
     14, 231,  41, 235, 124, 101, 
    204,  41, 233,   9, 167, 172, 
    167, 156, 138, 158, 118,  64, 
    179, 188,  54, 188, 224,  26, 
    225,   7,   6, 164, 132, 172, 
    234, 244, 236, 228,  57, 188, 
    152,  78, 143, 207,  20,  14, 
      4, 218, 212, 140, 115, 192, 
    208,  38, 103, 196, 193, 168, 
     42, 105,  95, 149, 117,  94, 
     85, 116,  81, 129, 182, 132, 
    104, 119, 132, 106, 255,  33, 
    156, 246,  15, 138, 221, 119, 
    115,  94,  34,  45, 216, 125, 
    233, 164, 249,  36,  90, 203, 
    178, 178,  79, 161, 213, 131, 
    246, 192, 243, 104, 149, 160, 
    212, 239, 251, 183, 115, 253, 
    135, 217, 255, 254,  98, 140, 
    210, 139, 199, 124, 253,  60, 
    244,  49,  95, 191, 110,  31, 
    230,  34,  35, 110,  82, 178, 
     21, 217,  12,  45, 229, 204, 
    147,  40,  30, 102, 105,  41, 
     53, 111, 135, 153, 204, 187, 
     43, 239,  60, 121, 234, 222, 
    231,  89, 170,  19, 119, 194, 
     57,  95, 135,  54, 143, 210, 
    168, 191, 233,  80, 241,  16, 
    191, 135, 227, 127,   9,  45, 
    197,  74, 249,  64, 232, 103, 
    183,  17, 124,  16,  68, 134, 
     22,  71,  84, 100,  81,  41, 
    212, 241,  56,  74,  97, 127, 
     19,  69, 145,  46, 206, 215, 
     94, 173,  55, 183,  91, 181, 
     11, 151, 182, 223, 158,  61, 
    181, 122, 118, 118, 101, 109, 
    171, 185,  89, 111, 213, 150, 
     54, 118,  91, 181, 211,  27, 
     59, 245, 203, 187,  23,  86, 
    151, 106, 173, 157, 203, 181, 
    149,  55, 214, 214, 235,  59, 
    173, 218, 226, 246,  86, 115, 
     99, 179, 190, 222, 159, 180, 
    220, 168, 159, 105, 188, 181, 
    177, 179, 221, 216, 170,  55, 
    118,  95,  94, 107, 158, 185, 
    114,   5, 231, 188, 254, 218, 
     10, 186, 177, 249, 194,  78, 
    189, 213, 168, 111,  46,  52, 
     78,  54, 215,  47, 177,  63, 
      1, 254,  90, 203, 169,   0, 
     53,  16,   0,   0,  28,   1, 
      0,   0,  23,   0,   1,   0, 
     16,  68,  25,   0, 120,   1, 
    237, 153, 207, 111,  27,  69, 
     20, 199, 103, 103, 167, 147, 
    221, 245, 243, 120, 189,  89, 
     47,  73, 187, 118,  55, 102, 
     99,  92, 147, 132, 148,   6, 
     40,  69, 170, 182,  77,  10, 
     69,   9,  10,  34,  21, 234, 
    193,   5, 165, 141,  43,  34, 
     37, 142,  21,  71,   8,  36, 
    100,  12,  66,   5, 161,   8, 
    161,  82, 137, 191,   1, 209, 
     35, 103,  18,  57, 185,  34, 
     33,  95, 232,  13,  14, 112, 
    224, 198, 157,   3, 188, 183, 
     94, 151,  40, 208,  51,   8, 
    237,  71, 254, 206, 155,  55, 
     63, 223, 252, 216, 203, 120, 
     97, 156, 197, 188, 145, 251, 
     93,  39, 251, 205, 185, 236, 
    229, 251,  39,  24, 195,  95, 
     12, 167,   4, 105, 185, 148, 
     50, 246, 224,  49,  74,  25, 
     11,  40, 209,  80, 216, 128, 
    138,  46, 162,   4, 142,  16, 
    161, 173, 162, 168, 158, 236, 
    203, 119,  51, 243, 222, 143, 
     48, 255,  53, 230, 231,  81, 
    212, 246,  78, 162,  77,  84, 
     13, 213,  68, 141, 161, 142, 
    147,  71,  73,  20,  65,  83, 
     29, 197,  64,  45, 161,  40, 
    206,  97,  29, 181,  39, 200, 
     42, 212,  67,  86,  41, 249, 
    103, 190,  68,  81,  76, 143, 
    130,  98,  27, 142,  75,  12, 
    227, 164, 245, 254, 215, 160, 
    125,  24, 158,  19,  65, 231, 
    113,  20, 218,  19, 129,  34, 
    118, 146,  69,  15, 247, 238, 
     48, 241, 201, 208, 218, 246, 
     81, 143, 226,  15, 100,  56, 
     14,  65, 249,  57,  20,  65, 
     83,  74, 182,  60,  43, 181, 
    143,   3, 201,  15, 108, 137, 
      5,  18,  27,  72,  60,  40, 
    137, 135,  41,  71,  80, 120, 
    120, 210,  68,  89, 168,  12, 
     10,  80,  89,  20,   6,  40, 
    115,  40,  27, 133, 155,  46, 
     29, 212,  40,  10, 215,  36, 
     11,  40,  15, 133,   1,  74, 
     60,   4, 137, 247,  86, 158, 
     68, 157,  66, 249, 168,  34, 
    170, 132,  58, 157, 220,  93, 
     65,  81, 161,  79,   9,  34, 
    181, 193,  74,  37,  31, 220, 
    104, 169,  83, 164, 255,  95, 
    104,  15, 232,  27,  25,  50, 
    216, 141,   1, 116,  69,  72, 
     41,  41,  41,  41,  41,  41, 
     41,  41,  41,  41,  41,  41, 
     41,  41,  41,  41, 255,  38, 
    124, 226, 195, 111, 153, 254, 
    209, 254, 251, 108, 119, 111, 
    201, 188, 211, 187, 106, 126, 
    210,  91,  48,  63, 237, 205, 
    154, 112, 208, 202, 237, 238, 
     49, 214, 237,  91, 191, 126, 
    167, 107, 104,  77, 180, 212, 
     78,  49, 161, 116, 244,  13, 
    244,  29, 102, 171,  44,  23, 
     80,  53, 239, 245,  60, 198, 
     84, 158, 219,   0,  82, 128, 
    139,  99,  21,  56,   3,  91, 
    218, 192,  79, 112, 245, 132, 
    114, 148, 141,  99, 187, 146, 
    129, 145, 231, 240, 184, 146, 
    170,   2,  14, 140, 225,  92, 
    175, 154, 222,   1, 211,  56, 
    156,  86, 174,  42, 131, 132, 
     73, 203,   1, 237,   6, 239, 
    148, 192, 133,   9,  75,  66, 
    104,  56, 192, 117, 161, 138, 
    150,  11, 129,  33, 129,  98, 
    168,  57, 142,  97, 232, 182, 
    202,  48, 213, 231,  69,  22, 
    249, 134,  11, 103, 164,  52, 
    204,  81,  95,   5, 230, 103, 
     61, 166,  51, 165,  81, 221, 
     36, 139,  50,  24, 107, 214, 
    158,   9, 171, 174, 107, 232, 
     35,  62, 248, 230, 231,  61, 
     90,  79, 222, 150,  33, 213, 
      1, 155,   9, 115, 212, 118, 
    154,  69,  86, 193, 135, 167, 
     84, 160,   0, 227,  15, 205, 
    187,  61, 208, 187, 251, 212, 
    214, 102,  18, 219, 116, 251, 
      5, 251,  98, 136,  75, 248, 
     62, 163, 225, 232,  55, 252, 
    206,  12,   4, 112,  78, 149, 
    149, 129, 107, 163, 122, 151, 
     93,  12, 187,  92, 190, 231, 
     48, 214, 239, 254,  60, 206, 
    204, 162, 163, 166, 173,   0, 
    158, 134,  50,  60, 167,  42, 
    138, 250, 230, 176, 175,  27, 
    215, 127, 165, 101,  38,  61, 
    165,  23, 165, 226, 163, 161, 
    154,  50,   2,  56, 107, 149, 
    225,  89, 168, 192,  11, 170, 
    166, 132, 185,  64, 123,  26, 
    143, 163, 157, 225, 138, 214, 
    237, 123,  85, 101,  21,  93, 
    165, 231,  67, 152,  53, 202, 
    240, 140,  85, 129,  11,  80, 
    131, 220, 180, 175, 138,  94, 
     73,   5, 188,  10, 150,  22, 
    194, 156,  81, 129, 231, 173, 
     26, 148,  60,  79,  77, 240, 
     18, 132, 126,  21, 128,  79, 
    117,  28,  77, 246, 157,  95, 
    180, 224, 188,  81, 131,  40, 
    106, 253, 196, 236,  72, 148, 
    185,   7, 147, 126,   9, 236, 
    234,  20, 100,  57, 239, 116, 
    195, 192,  95, 160, 186, 124, 
     36,  42, 190,   7, 249,  18, 
      7, 197, 253, 142, 189,  92, 
    234,  92, 165, 242, 209,  72, 
     56, 158,  15, 102, 201,  83, 
     75, 228,  23,  34, 145,  89, 
    244,  58, 140, 242,  94,  36, 
     70, 121, 169,  99, 224, 188, 
    167, 148,  82, 130, 202, 180, 
     72, 156,   4,   5,   6, 229, 
     85,  36, 198,  45,   5,  64, 
    249,  92,  36,  70, 140, 110, 
     95, 156, 245,  69, 124,  86, 
    163,  60, 178, 169,  60,  19, 
    161, 223, 237, 235, 121,  25, 
    186,  71, 124,  75, 147,  83, 
     99, 137, 111, 161, 207, 244, 
    218, 161,  79, 254,  72,  36, 
    226, 251, 168, 171, 195, 128, 
    124, 136, 132, 137,  62, 215, 
     43, 135,  33, 249, 217,  72, 
    204, 146, 181,  34,  49,  71, 
     86, 143, 196, 121, 178, 102, 
     36,  24, 251,  96, 175,  16, 
    127,   8, 241, 239,  33, 227, 
    244, 140, 121, 172,  44, 126, 
    147,  62,  86, 102,  83, 114, 
    172,  44, 206,  99, 196,  71, 
    113, 227, 206, 140, 253,  70, 
     15, 191,  72, 136,  50,  81, 
     90, 252, 146,  59,  24,  91, 
     36, 175, 168,  63, 172, 188, 
    251, 228, 165,   7,  95, 224, 
     21,  26, 176, 148, 244, 157, 
     74,  44, 189, 249,   3, 234, 
     47, 232, 223, 128, 191, 179, 
    147, 180,  95,  75,  44, 197, 
     74, 239, 147, 106, 240, 114, 
     75, 153, 152, 123,  73, 253, 
    110,  98, 233,  61,  51, 131, 
     58,  30, 199, 253, 164, 190, 
    133, 162,  72, 231,  47, 212, 
     95, 107, 180, 182, 218, 245, 
    235,  55, 183, 222, 153, 190, 
    116, 237, 165, 233, 149, 213, 
    205, 214,  70, 163,  93,  95, 
     92, 223, 105, 215,  23, 214, 
    183,  27, 183, 118, 174,  95, 
     91, 172, 183, 183, 111, 213, 
     87, 222,  90,  93, 107, 108, 
    183, 235, 243,  91, 155, 173, 
    245, 141, 198,  90, 220, 105, 
    185, 217, 184, 210, 124, 123, 
    125, 123, 171, 185, 217, 104, 
    238, 188, 178, 218, 186, 114, 
    251,  54, 246, 121, 243, 245, 
     21,  44,  70, 247, 197, 237, 
     70, 187, 217, 216, 184, 220, 
    156, 105, 173, 221, 100, 127, 
      2,  71, 165, 231,   2,   0, 
      0,   0,  53,  16,   0,   0, 
     31,   1,   0,   0,  23,   0, 
      1,   0,   0,  20,  26,   0, 
    120,   1, 237, 152, 205, 107, 
     28, 117,  24, 199, 159, 121, 
    201, 111, 103,  38,  79, 158, 
    157, 153, 108,  54,  47, 157, 
    108, 102, 227,  38, 196, 216, 
    148, 168,  81,  99,  80,  73, 
    155,  68,  75, 147, 146, 208, 
      4, 233,  97, 139, 164, 205, 
     22,   3, 121,  89, 146,  32, 
     10, 178, 174,  34, 173,  72, 
     20, 169,  34,  85, 252,   7, 
      4,  15,  61, 120,  78, 202, 
     38,  71,  11, 178, 136, 205, 
    161,  71,  61,   8,  94,   4, 
     15,  30, 132, 250,  60, 187, 
    179,  49,  13,  22, 143,  74, 
    153,  15, 251, 253, 125, 127, 
     47,  59, 179, 207,  60, 207, 
    236, 229,  73, 117,  65, 141, 
    123,  31, 205, 223,  21, 255, 
    246, 233, 150,  51, 223,  52, 
      1, 240, 231,   1, 138,  41, 
     25,   1, 110, 182, 203,   8, 
     16, 202, 160, 177, 116, 128, 
     86, 182, 113, 214,   1, 207, 
    197,   7,  88, 114,  46,  14, 
    229, 196, 196, 157, 239, 172, 
      9, 153, 202, 153, 124, 247, 
     90, 164, 117, 214,  99, 145, 
     71,  97, 128,  45, 195,  17, 
     26, 113, 152,  50,  68, 200, 
    207,  90, 172,  25, 150, 156, 
    203,  90, 112, 101,  96, 142, 
    223,   3,  22, 101, 248, 103, 
    110, 176,  36, 166, 135,  33, 
    177,   9, 141, 123,  54, 226, 
    148, 103, 249, 191,  33, 121, 
    104, 212,  73, 144, 122,  28, 
    133,  88,   6,  75,  56,  27, 
    213, 177, 145, 187, 247, 163, 
    181, 228,  66, 158, 237,  54, 
    235,  97, 220, 103, 142, 214, 
     67, 104, 172, 229, 254,  10, 
    102, 135, 149, 118,  61,  84, 
    250, 158, 171, 120,  67, 241, 
    161, 226,  66,  41, 197,  74, 
    176, 184, 120, 138,  19, 170, 
     28,  86,  51,  11,  89,  45, 
     44,  14,  80,  37,  89,  92, 
     72, 229, 177, 124,  22,   7, 
    164, 248, 153,  84,  27,  43, 
    205, 226,  56,  85,   7, 171, 
    147, 197, 197,  80,  39,  88, 
      1, 171, 155, 149,  97, 245, 
     68, 239, 140,  89, 143, 136, 
    127, 178, 134, 210, 234,  79, 
    170, 244, 122,  82, 148,  33, 
    145,  62, 186,  72,  14, 228, 
     63, 210, 160, 158, 141, 122, 
    189,  27, 175, 200, 156,  12, 
     49,  49,  49,  49,  49,  49, 
     49,  49,  49,  49,  49,  49, 
     49,  49,  49,  49, 255,  17, 
    122, 246, 189,  29, 221, 184, 
    182,  99,  24, 215, 119,  32, 
    241, 193, 237, 119,  96, 123, 
    119, 210,  43,  87, 206, 122, 
     31,  86, 102, 188, 237, 138, 
    235, 125,  92,  73, 121, 159, 
     84,  58, 188,  27, 149, 208, 
    251, 172,  18, 120, 159,  87, 
    114, 222, 205, 138, 229, 125, 
     89,  65, 239, 171, 202, 125, 
    227, 207,  29, 233, 118,  20, 
    147, 219, 187,   0, 229, 170, 
    245, 203,  29,  67, 103, 183, 
    217,  13, 118, 135,  93, 238, 
    169,  43, 151,  52, 211,  69, 
      0,  23, 135,  61, 216,  75, 
     43, 159, 218,  76,  31,  83, 
    224,  99, 151,  82, 212, 105, 
     42, 236,   0, 133,  70,   2, 
    200, 110,   5, 180,  60,  64, 
    184,   4,  37,  75,  51, 201, 
    214,  92,  50,  52,  32,   3, 
    168,  10,  47, 194, 184, 220, 
    183, 219, 165, 156, 120,  96, 
     82, 206, 150, 253,  41,  24, 
    183, 121, 157, 117, 251, 121, 
     93, 174, 134, 102, 127, 110, 
    128, 227, 118, 228, 236,  60, 
    140,  59, 188, 215, 231,  14, 
    230, 196, 115, 230,  96, 206, 
    244,  46,  84, 230,  60, 107, 
    175,  31, 240, 123,  67, 211, 
    224,   5, 118, 155, 189, 156, 
     82, 111,  55,   3,  84, 203, 
     63, 125,  33, 125,  60, 246, 
    223,  32,  89, 243, 175,  53, 
    163,  93, 145, 221, 237, 147, 
    211, 147, 162,   1,  63,  77, 
    143, 251,   1,  13, 250,  62, 
    157,  84, 105,  28,  82,   1, 
    158,  82,  62,  14, 167, 210, 
    248, 100,  42, 192, 167,  82, 
     62, 142, 234, 170,  52, 146, 
     86, 248, 188, 158,  42,  61, 
     19, 164, 112,  76,  79, 151, 
    158, 245, 211,  40, 249,  72, 
    144,  79,  10, 125, 108, 114, 
    124,  52,  45,  31, 155,  41, 
     32,   7,   3, 180, 157,   0, 
     45,  43, 192,  36, 101, 136, 
     48, 131,  45,  78,   6, 209, 
    202,  96, 232, 251,  86,  54, 
      8, 172, 222,  76, 198,  74, 
    246, 132,  68, 221,  33, 218, 
    173,  33, 186, 151, 194, 146, 
    157, 245, 137, 178,   1,  37, 
    179,  25,   2,  57, 243, 248, 
    172, 137, 207,  52,  85, 117, 
    127, 214, 194, 114,  24,   6, 
    238, 108,  88, 234,  11,  67, 
    114, 167, 195,  82, 142, 221, 
    160,  94, 210, 177,  23,  53, 
    167,  23,  61, 171,  92,  53, 
    181,  73, 211, 151,  92, 245, 
    232, 227,  62, 231, 136, 188, 
    115,  57, 113, 187, 233, 220, 
     73, 201, 167, 222, 215, 191, 
     79, 236,  86, 223, 216, 126, 
    146,  29, 250,  94, 218, 111, 
     37,  32,  31,   1,  61,   7, 
    208, 181,   0, 219, 201, 164, 
     52, 154, 216, 230, 152, 152, 
    178,  76,  60,  65,  46, 117, 
    161, 139, 157, 142, 139,  29, 
    150, 139,  61,  68, 148,  65, 
    194, 110, 135,  48, 176,   8, 
    231,   0, 110, 105, 240,  99, 
    149, 211,  14, 174,  55, 122, 
    160, 129,  14, 126,  43, 187, 
    149, 224,  87, 138, 221, 112, 
    224,  57,  29,  74, 186, 193, 
    115,  46, 138, 217, 196, 238, 
    186, 160,  18, 226,  30,  88, 
     54,  59, 182,   0, 182, 176, 
    219,   4, 163,  48, 114, 160, 
    113, 177,   0, 222, 221, 109, 
     19, 211, 107, 159,  67,  58, 
    165,  41, 119, 108, 175, 214, 
    203,  62, 182,  87, 155, 155, 
    242, 229, 191, 249,  33, 234, 
    219, 222, 138,  60, 199, 146, 
     94, 181,  22, 117, 122,  59, 
     88, 102, 212,   5, 189,  59, 
    255, 214,  19, 167,  15,  62, 
    245, 101,  46, 240, 139,  93, 
    227, 215, 232,  90, 233, 217, 
    243,  31, 225,  95,  25, 137, 
    174, 203,  69,  46, 177,  74, 
    127, 145, 234, 157,  87, 158, 
    212, 187, 227,  11, 209, 249, 
     76, 228, 210, 143, 228, 116, 
     29, 198, 113,  47, 218,  95, 
    137, 188, 200, 146,  72,  39, 
    198, 242,  23,  10, 197, 245, 
    205, 252, 197, 203, 235, 111, 
     14, 157,  94, 120, 101, 104, 
    126, 113, 181, 184,  82, 216, 
    204,  79,  47, 111, 109, 230, 
     39, 151,  55,  10,  87, 182, 
     46,  46,  76, 231,  55,  55, 
    174, 228, 231,  95,  95,  92, 
     42, 108, 108, 230,  39, 214, 
     87, 139, 203,  43, 133, 165, 
    218,  69, 179, 107, 133, 169, 
    181,  55, 150,  55, 214, 215, 
     86,  11, 107,  91, 231,  23, 
    139,  83,  87, 175, 242,  53, 
    175, 189,  58, 207, 219, 188, 
    124, 121, 163, 176, 185,  86, 
     88,  57, 179, 118, 170, 184, 
    116, 153, 127, 177, 206, 239, 
     81,  28, 127, 176,  36, 123, 
    146, 105, 233, 117,  63, 152, 
    113, 198, 133, 196,  97,  18, 
     31,  57,   0, 254,   2,  26, 
     33, 222, 229,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    215,  83, 121,  43,  65, 216, 
    147,  18,  88,  80,  68,  80, 
    111,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  69, 110, 118, 105, 114, 
    111, 110, 109, 101, 110, 116, 
     77,  97, 112,  69, 102, 102, 
    101,  99, 116,  95,  86,  83, 
     69, 110, 118,  77,  97, 112, 
     70, 114, 101, 115, 110, 101, 
    108,  66, 110,  46, 112, 100, 
     98
};
