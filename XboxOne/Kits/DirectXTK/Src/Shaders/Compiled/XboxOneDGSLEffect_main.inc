#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[192]
// Embedded Data:
//  0x000000c0 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000bb - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB2[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_temps 1
dp4 o0.x, v0.xyzw, cb2[4].xyzw
dp4 o0.y, v0.xyzw, cb2[5].xyzw
dp4 o0.z, v0.xyzw, cb2[6].xyzw
dp4 o0.w, v0.xyzw, cb2[7].xyzw
mov o1.xyzw, cb0[1].xyzw
mov r0.xy, v3.xyxx
mov r0.z, l(1.000000)
dp3 o2.x, r0.xyzx, cb2[16].xywx
dp3 o2.y, r0.xyzx, cb2[17].xywx
dp3 o3.x, v1.xyzx, cb2[0].xyzx
dp3 o3.y, v1.xyzx, cb2[1].xyzx
dp3 o3.z, v1.xyzx, cb2[2].xyzx
dp4 r0.x, v0.xyzw, cb2[0].xyzw
dp4 r0.y, v0.xyzw, cb2[1].xyzw
dp4 r0.z, v0.xyzw, cb2[2].xyzw
mov o4.xyz, r0.xyzx
add o5.xyz, -r0.xyzx, cb2[20].xyzx
mov o6.xyzw, v2.xyzw
mov o7.xyz, v1.xyzx
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[192], bundle is:[203] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_main.pdb
// Shader Semantic Hash      : 0xb3178b140629218d
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask  3, v[16:17]
; Output Semantic Mappings
;   [0] generic,  usageIdx 1, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 2, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 3, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 4, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 5, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 6, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 7, paramIdx 6, paramSlot 0

codeLenInByte        = 316 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 28;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x0000000C
SVOC:VS_EXPORT_COUNT        = 6
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[0:7], s[2:3], 0x00                  // 000000000004: C0C00300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx8  s[8:15], s[4:7], 0x00          // 00000000000C: C2C40500
  s_buffer_load_dwordx4  s[16:19], s[4:7], 0x08         // 000000000010: C2880508
  s_buffer_load_dwordx16  s[20:35], s[4:7], 0x10        // 000000000014: C30A0510
  s_buffer_load_dwordx8  s[36:43], s[4:7], 0x40         // 000000000018: C2D20540
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04           // 00000000001C: C2800104
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x50           // 000000000020: C2820550
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000024: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 000000000028: 0E000E0B
  v_mul_legacy_f32  v1, s15, v7                         // 00000000002C: 0E020E0F
  v_mul_legacy_f32  v2, s19, v7                         // 000000000030: 0E040E13
  v_mul_legacy_f32  v3, s23, v7                         // 000000000034: 0E060E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000038: 0E160E1B
  v_mul_legacy_f32  v18, s31, v7                        // 00000000003C: 0E240E1F
  v_mul_legacy_f32  v7, s35, v7                         // 000000000040: 0E0E0E23
  v_mac_f32     v0, s10, v6                             // 000000000044: 3E000C0A
  v_mac_f32     v1, s14, v6                             // 000000000048: 3E020C0E
  v_mac_f32     v2, s18, v6                             // 00000000004C: 3E040C12
  v_mac_legacy_f32  v3, s22, v6                         // 000000000050: 0C060C16
  v_mac_legacy_f32  v11, s26, v6                        // 000000000054: 0C160C1A
  v_mac_legacy_f32  v18, s30, v6                        // 000000000058: 0C240C1E
  v_mac_legacy_f32  v7, s34, v6                         // 00000000005C: 0C0E0C22
  v_mov_b32     v6, s39                                 // 000000000060: 7E0C0227
  v_mov_b32     v19, s43                                // 000000000064: 7E26022B
  v_mul_legacy_f32  v20, s10, v10                       // 000000000068: 0E28140A
  v_mul_legacy_f32  v21, s14, v10                       // 00000000006C: 0E2A140E
  v_mul_legacy_f32  v22, s18, v10                       // 000000000070: 0E2C1412
  v_mac_f32     v0, s9, v5                              // 000000000074: 3E000A09
  v_mac_f32     v1, s13, v5                             // 000000000078: 3E020A0D
  v_mac_f32     v2, s17, v5                             // 00000000007C: 3E040A11
  v_mac_legacy_f32  v3, s21, v5                         // 000000000080: 0C060A15
  v_mac_legacy_f32  v11, s25, v5                        // 000000000084: 0C160A19
  v_mac_legacy_f32  v18, s29, v5                        // 000000000088: 0C240A1D
  v_mac_legacy_f32  v7, s33, v5                         // 00000000008C: 0C0E0A21
  v_mac_f32     v6, s37, v17                            // 000000000090: 3E0C2225
  v_mac_f32     v19, s41, v17                           // 000000000094: 3E262229
  v_mac_f32     v20, s9, v9                             // 000000000098: 3E281209
  v_mac_f32     v21, s13, v9                            // 00000000009C: 3E2A120D
  v_mac_f32     v22, s17, v9                            // 0000000000A0: 3E2C1211
  v_mac_f32     v0, s8, v4                              // 0000000000A4: 3E000808
  v_mac_f32     v1, s12, v4                             // 0000000000A8: 3E02080C
  v_mac_f32     v2, s16, v4                             // 0000000000AC: 3E040810
  v_mac_legacy_f32  v3, s20, v4                         // 0000000000B0: 0C060814
  v_mac_legacy_f32  v11, s24, v4                        // 0000000000B4: 0C160818
  v_mac_legacy_f32  v18, s28, v4                        // 0000000000B8: 0C24081C
  v_mac_legacy_f32  v7, s32, v4                         // 0000000000BC: 0C0E0820
  v_mac_f32     v6, s36, v16                            // 0000000000C0: 3E0C2024
  v_mac_f32     v19, s40, v16                           // 0000000000C4: 3E262028
  v_mac_f32     v20, s8, v8                             // 0000000000C8: 3E281008
  v_mac_f32     v21, s12, v8                            // 0000000000CC: 3E2A100C
  v_mac_f32     v22, s16, v8                            // 0000000000D0: 3E2C1010
  v_sub_f32     v4, s4, v0                              // 0000000000D4: 08080004
  v_sub_f32     v5, s5, v1                              // 0000000000D8: 080A0205
  v_sub_f32     v16, s6, v2                             // 0000000000DC: 08200406
  v_mov_b32     v17, s0                                 // 0000000000E0: 7E220200
  v_mov_b32     v23, s1                                 // 0000000000E4: 7E2E0201
  v_mov_b32     v24, s2                                 // 0000000000E8: 7E300202
  v_mov_b32     v25, s3                                 // 0000000000EC: 7E320203
  v_mov_b32     v26, 0                                  // 0000000000F0: 7E340280
  v_mov_b32     v27, 1.0                                // 0000000000F4: 7E3602F2
  exp           pos0, v3, v11, v18, v7 done             // 0000000000F8: F80008CF 07120B03
  exp           param0, v17, v23, v24, v25              // 000000000100: F800020F 19181711
  exp           param1, v6, v19, v26, v27               // 000000000108: F800021F 1B1A1306
  exp           param2, v20, v21, v22, v27              // 000000000110: F800022F 1B161514
  exp           param3, v0, v1, v2, v27                 // 000000000118: F800023F 1B020100
  exp           param4, v4, v5, v16, v27                // 000000000120: F800024F 1B100504
  exp           param5, v12, v13, v14, v15              // 000000000128: F800025F 0F0E0D0C
  exp           param6, v8, v9, v10, v27                // 000000000130: F800026F 1B0A0908
  s_endpgm                                              // 000000000138: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   28
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   84
//  CycleSimNWaves:             84
//  Code Size:                  316
//Assembler Counts:
//  num_32bit_ops                     : 63
//  num_64bit_ops                     : 8
//  num_alu                           : 52
//  num_fc                            : 11
//  num_inst_exp                      : 8
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 8
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 8
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 28
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 316
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 84
// m_uCycleSimNWaves                 : 84

// Assembler Counts:
// num_32bit_ops                     : 63
// num_64bit_ops                     : 8
// num_alu                           : 52
// num_fc                            : 11
// num_inst_exp                      : 8
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 8
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 8
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[397], bundle is:[218] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_main.pdb
// Shader Semantic Hash      : 0xb3178b140629218d
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask  3, v[16:17]
; Output Semantic Mappings
;   [0] position,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 4, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 6, paramIdx 6, paramSlot 0
;   [7] generic,  usageIdx 7, paramIdx 7, paramSlot 0

codeLenInByte        = 468 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 18;
NumSgprs             = 42;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 32
; esGsRingItemSize          = 32

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[8:15], s[2:3], 0x00                 // 000000000004: C0C40300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[16:31], s[12:15], 0x10      // 00000000000C: C3080D10
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000014: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x10                  // 000000000018: C0800310
  v_mac_legacy_f32  v0, s18, v6                         // 00000000001C: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000020: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x04         // 000000000024: C2840904
  v_mac_legacy_f32  v0, s17, v5                         // 000000000028: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 00000000002C: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000030: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000034: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 000000000038: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 00000000003C: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000040: 0E060E1F
  s_buffer_load_dwordx8  s[32:39], s[12:15], 0x40       // 000000000044: C2D00D40
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  s_buffer_load_dwordx8  s[16:23], s[12:15], 0x00       // 00000000005C: C2C80D00
  v_mac_legacy_f32  v3, s28, v4                         // 000000000060: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000064: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000068: E0704000 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 000000000070: E0704004 04400100
  v_mov_b32     v0, s8                                  // 000000000078: 7E000208
  s_buffer_load_dwordx4  s[24:27], s[12:15], 0x08       // 00000000007C: C28C0D08
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 000000000080: E0704008 04400200
  v_mov_b32     v1, s9                                  // 000000000088: 7E020209
  v_mov_b32     v2, s35                                 // 00000000008C: 7E040223
  buffer_store_dword  v3, v0, s[0:3], s4 offset:12 glc slc // 000000000090: E070400C 04400300
  v_mov_b32     v3, s10                                 // 000000000098: 7E06020A
  v_mac_legacy_f32  v2, s33, v17                        // 00000000009C: 0C042221
  v_mov_b32     v11, s39                                // 0000000000A0: 7E160227
  buffer_store_dword  v0, v0, s[0:3], s4 offset:16 glc slc // 0000000000A4: E0704010 04400000
  v_mov_b32     v0, s11                                 // 0000000000AC: 7E00020B
  v_mac_legacy_f32  v2, s32, v16                        // 0000000000B0: 0C042020
  v_mac_legacy_f32  v11, s37, v17                       // 0000000000B4: 0C162225
  v_mul_legacy_f32  v17, s18, v10                       // 0000000000B8: 0E221412
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000BC: E0704014 04400100
  v_mac_legacy_f32  v11, s36, v16                       // 0000000000C4: 0C162024
  v_mac_legacy_f32  v17, s17, v9                        // 0000000000C8: 0C221211
  v_mul_legacy_f32  v1, s22, v10                        // 0000000000CC: 0E021416
  buffer_store_dword  v3, v0, s[0:3], s4 offset:24 glc slc // 0000000000D0: E0704018 04400300
  v_mac_legacy_f32  v17, s16, v8                        // 0000000000D8: 0C221010
  v_mac_legacy_f32  v1, s21, v9                         // 0000000000DC: 0C021215
  s_waitcnt     lgkmcnt(0)                              // 0000000000E0: BF8C007F
  v_mul_legacy_f32  v3, s26, v10                        // 0000000000E4: 0E06141A
  v_mul_legacy_f32  v16, s19, v7                        // 0000000000E8: 0E200E13
  buffer_store_dword  v0, v0, s[0:3], s4 offset:28 glc slc // 0000000000EC: E070401C 04400000
  s_buffer_load_dwordx4  s[8:11], s[12:15], 0x50        // 0000000000F4: C2840D50
  v_mac_legacy_f32  v1, s20, v8                         // 0000000000F8: 0C021014
  v_mac_legacy_f32  v3, s25, v9                         // 0000000000FC: 0C061219
  v_mac_legacy_f32  v16, s18, v6                        // 000000000100: 0C200C12
  v_mul_legacy_f32  v0, s23, v7                         // 000000000104: 0E000E17
  buffer_store_dword  v2, v0, s[0:3], s4 offset:32 glc slc // 000000000108: E0704020 04400200
  v_mac_legacy_f32  v3, s24, v8                         // 000000000110: 0C061018
  v_mac_legacy_f32  v16, s17, v5                        // 000000000114: 0C200A11
  v_mac_legacy_f32  v0, s22, v6                         // 000000000118: 0C000C16
  v_mul_legacy_f32  v2, s27, v7                         // 00000000011C: 0E040E1B
  buffer_store_dword  v11, v0, s[0:3], s4 offset:36 glc slc // 000000000120: E0704024 04400B00
  v_mac_legacy_f32  v16, s16, v4                        // 000000000128: 0C200810
  v_mac_legacy_f32  v0, s21, v5                         // 00000000012C: 0C000A15
  v_mac_legacy_f32  v2, s26, v6                         // 000000000130: 0C040C1A
  buffer_store_dword  v17, v0, s[0:3], s4 offset:48 glc slc // 000000000134: E0704030 04401100
  v_mac_legacy_f32  v0, s20, v4                         // 00000000013C: 0C000814
  v_mac_legacy_f32  v2, s25, v5                         // 000000000140: 0C040A19
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 000000000144: E0704034 04400100
  v_mac_legacy_f32  v2, s24, v4                         // 00000000014C: 0C040818
  buffer_store_dword  v3, v0, s[0:3], s4 offset:56 glc slc // 000000000150: E0704038 04400300
  s_waitcnt     lgkmcnt(0)                              // 000000000158: BF8C007F
  v_sub_f32     v1, s8, v16                             // 00000000015C: 08022008
  buffer_store_dword  v16, v0, s[0:3], s4 offset:64 glc slc // 000000000160: E0704040 04401000
  v_sub_f32     v3, s9, v0                              // 000000000168: 08060009
  buffer_store_dword  v0, v0, s[0:3], s4 offset:68 glc slc // 00000000016C: E0704044 04400000
  v_sub_f32     v0, s10, v2                             // 000000000174: 0800040A
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 000000000178: E0704048 04400200
  buffer_store_dword  v1, v0, s[0:3], s4 offset:80 glc slc // 000000000180: E0704050 04400100
  buffer_store_dword  v3, v0, s[0:3], s4 offset:84 glc slc // 000000000188: E0704054 04400300
  buffer_store_dword  v0, v0, s[0:3], s4 offset:88 glc slc // 000000000190: E0704058 04400000
  buffer_store_dword  v12, v0, s[0:3], s4 offset:96 glc slc // 000000000198: E0704060 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:100 glc slc // 0000000001A0: E0704064 04400D00
  buffer_store_dword  v14, v0, s[0:3], s4 offset:104 glc slc // 0000000001A8: E0704068 04400E00
  buffer_store_dword  v15, v0, s[0:3], s4 offset:108 glc slc // 0000000001B0: E070406C 04400F00
  buffer_store_dword  v8, v0, s[0:3], s4 offset:112 glc slc // 0000000001B8: E0704070 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:116 glc slc // 0000000001C0: E0704074 04400900
  buffer_store_dword  v10, v0, s[0:3], s4 offset:120 glc slc // 0000000001C8: E0704078 04400A00
  s_endpgm                                              // 0000000001D0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   18
//  NumSRegs:                   42
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   109
//  CycleSimNWaves:             109
//  Code Size:                  468
//Assembler Counts:
//  num_32bit_ops                     : 65
//  num_64bit_ops                     : 26
//  num_alu                           : 50
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 26
//  num_inst_sopp                     : 6
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 26
//  num_vmem_group                    : 15
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 18
// m_uNumSRegs                       : 42
// m_uSCCodeSize                     : 468
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 109
// m_uCycleSimNWaves                 : 109

// Assembler Counts:
// num_32bit_ops                     : 65
// num_64bit_ops                     : 26
// num_alu                           : 50
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 26
// num_inst_sopp                     : 6
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 6
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 26
// num_vmem_group                    : 15
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[617], bundle is:[209] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLEffect_main.pdb
// Shader Semantic Hash      : 0xb3178b140629218d
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask 15, v[12:15]
;   [3] generic, usageIdx  3, channelMask  3, v[16:17]
; Output Semantic Mappings
;   [0] position,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0
;   [4] generic,  usageIdx 4, paramIdx 4, paramSlot 0
;   [5] generic,  usageIdx 5, paramIdx 5, paramSlot 0
;   [6] generic,  usageIdx 6, paramIdx 6, paramSlot 0
;   [7] generic,  usageIdx 7, paramIdx 7, paramSlot 0

codeLenInByte        = 380 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
;  extUserElements 1[1] = IMM_CONST_BUFFER 2, offset 0x4:7 dwords
NumVgprs             = 23;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000005

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 32
; lsStride                  = 128

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx8  s[0:7], s[2:3], 0x00                  // 000000000004: C0C00300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[8:23], s[4:7], 0x10         // 00000000000C: C3040510
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04           // 000000000010: C2800104
  s_buffer_load_dwordx8  s[24:31], s[4:7], 0x40         // 000000000014: C2CC0540
  s_buffer_load_dwordx8  s[32:39], s[4:7], 0x00         // 000000000018: C2D00500
  s_buffer_load_dwordx4  s[40:43], s[4:7], 0x08         // 00000000001C: C2940508
  s_mov_b32     m0, 0x00010000                          // 000000000020: BEFC03FF 00010000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000028: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 00000000002C: 0E000E0B
  v_mac_legacy_f32  v0, s10, v6                         // 000000000030: 0C000C0A
  v_mac_legacy_f32  v0, s9, v5                          // 000000000034: 0C000A09
  v_mac_legacy_f32  v0, s8, v4                          // 000000000038: 0C000808
  v_mul_legacy_f32  v2, s15, v7                         // 00000000003C: 0E040E0F
  v_mac_legacy_f32  v2, s14, v6                         // 000000000040: 0C040C0E
  v_mac_legacy_f32  v2, s13, v5                         // 000000000044: 0C040A0D
  v_mac_legacy_f32  v2, s12, v4                         // 000000000048: 0C04080C
  v_mul_legacy_f32  v3, s19, v7                         // 00000000004C: 0E060E13
  v_mac_legacy_f32  v3, s18, v6                         // 000000000050: 0C060C12
  v_mac_legacy_f32  v3, s17, v5                         // 000000000054: 0C060A11
  v_mac_legacy_f32  v3, s16, v4                         // 000000000058: 0C060810
  v_mul_legacy_f32  v11, s23, v7                        // 00000000005C: 0E160E17
  v_mac_legacy_f32  v11, s22, v6                        // 000000000060: 0C160C16
  v_mac_legacy_f32  v11, s21, v5                        // 000000000064: 0C160A15
  v_mac_legacy_f32  v11, s20, v4                        // 000000000068: 0C160814
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x50           // 00000000006C: C2820550
  v_mov_b32     v18, s27                                // 000000000070: 7E24021B
  v_mac_legacy_f32  v18, s25, v17                       // 000000000074: 0C242219
  v_mac_legacy_f32  v18, s24, v16                       // 000000000078: 0C242018
  v_mov_b32     v19, s31                                // 00000000007C: 7E26021F
  v_mac_legacy_f32  v19, s29, v17                       // 000000000080: 0C26221D
  v_mac_legacy_f32  v19, s28, v16                       // 000000000084: 0C26201C
  v_mul_legacy_f32  v16, s34, v10                       // 000000000088: 0E201422
  v_mac_legacy_f32  v16, s33, v9                        // 00000000008C: 0C201221
  v_mac_legacy_f32  v16, s32, v8                        // 000000000090: 0C201020
  v_mul_legacy_f32  v17, s38, v10                       // 000000000094: 0E221426
  v_mac_legacy_f32  v17, s37, v9                        // 000000000098: 0C221225
  v_mac_legacy_f32  v17, s36, v8                        // 00000000009C: 0C221024
  v_mul_legacy_f32  v20, s42, v10                       // 0000000000A0: 0E28142A
  v_mac_legacy_f32  v20, s41, v9                        // 0000000000A4: 0C281229
  v_mac_legacy_f32  v20, s40, v8                        // 0000000000A8: 0C281028
  v_mul_legacy_f32  v21, s35, v7                        // 0000000000AC: 0E2A0E23
  v_mac_legacy_f32  v21, s34, v6                        // 0000000000B0: 0C2A0C22
  v_mac_legacy_f32  v21, s33, v5                        // 0000000000B4: 0C2A0A21
  v_mac_legacy_f32  v21, s32, v4                        // 0000000000B8: 0C2A0820
  v_mul_legacy_f32  v22, s39, v7                        // 0000000000BC: 0E2C0E27
  v_mac_legacy_f32  v22, s38, v6                        // 0000000000C0: 0C2C0C26
  v_mac_legacy_f32  v22, s37, v5                        // 0000000000C4: 0C2C0A25
  v_mac_legacy_f32  v22, s36, v4                        // 0000000000C8: 0C2C0824
  v_mul_legacy_f32  v7, s43, v7                         // 0000000000CC: 0E0E0E2B
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000D0: 0C0E0C2A
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000D4: 0C0E0A29
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000D8: 0C0E0828
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  v_sub_f32     v4, s4, v21                             // 0000000000E0: 08082A04
  v_sub_f32     v5, s5, v22                             // 0000000000E4: 080A2C05
  v_sub_f32     v6, s6, v7                              // 0000000000E8: 080C0E06
  v_lshlrev_b32  v1, 7, v1                              // 0000000000EC: 34020287
  ds_write2_b32  v1, v0, v2 offset1:1                   // 0000000000F0: D8380100 00020001
  ds_write2_b32  v1, v3, v11 offset0:2 offset1:3        // 0000000000F8: D8380302 000B0301
  v_mov_b32     v0, s0                                  // 000000000100: 7E000200
  v_mov_b32     v2, s1                                  // 000000000104: 7E040201
  ds_write2_b32  v1, v0, v2 offset0:4 offset1:5         // 000000000108: D8380504 00020001
  v_mov_b32     v0, s2                                  // 000000000110: 7E000202
  v_mov_b32     v2, s3                                  // 000000000114: 7E040203
  ds_write2_b32  v1, v0, v2 offset0:6 offset1:7         // 000000000118: D8380706 00020001
  ds_write2_b32  v1, v18, v19 offset0:8 offset1:9       // 000000000120: D8380908 00131201
  ds_write2_b32  v1, v16, v17 offset0:12 offset1:13     // 000000000128: D8380D0C 00111001
  ds_write_b32  v1, v20 offset:56                       // 000000000130: D8340038 00001401
  ds_write2_b32  v1, v21, v22 offset0:16 offset1:17     // 000000000138: D8381110 00161501
  ds_write_b32  v1, v7 offset:72                        // 000000000140: D8340048 00000701
  ds_write2_b32  v1, v4, v5 offset0:20 offset1:21       // 000000000148: D8381514 00050401
  ds_write_b32  v1, v6 offset:88                        // 000000000150: D8340058 00000601
  ds_write2_b32  v1, v12, v13 offset0:24 offset1:25     // 000000000158: D8381918 000D0C01
  ds_write2_b32  v1, v14, v15 offset0:26 offset1:27     // 000000000160: D8381B1A 000F0E01
  ds_write2_b32  v1, v8, v9 offset0:28 offset1:29       // 000000000168: D8381D1C 00090801
  ds_write_b32  v1, v10 offset:120                      // 000000000170: D8340078 00000A01
  s_endpgm                                              // 000000000178: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   23
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   140
//  CycleSimNWaves:             140
//  Code Size:                  380
//Assembler Counts:
//  num_32bit_ops                     : 64
//  num_64bit_ops                     : 15
//  num_alu                           : 51
//  num_fc                            : 13
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 15
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 45
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 15
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 23
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 380
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 140
// m_uCycleSimNWaves                 : 140

// Assembler Counts:
// num_32bit_ops                     : 64
// num_64bit_ops                     : 15
// num_alu                           : 51
// num_fc                            : 13
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 15
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 6
// num_inst_vop2                     : 45
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 7
// constant_literal_operands         : 0
// num_tex                           : 15
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLEffect_main[] =
{
     68,  88,  66,  67, 201, 173, 
    108, 157,  20, 115, 125, 104, 
    170, 122,  64, 103, 178, 110, 
     63, 197,   1,   0,   0,   0, 
     28,  15,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    200,   0,   0,   0, 180,   1, 
      0,   0, 172,  14,   0,   0, 
    188,  14,   0,   0,  73,  83, 
     71,  78, 140,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 123,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,  15,  15, 
      0,   0, 131,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  65,  78, 
     71,  69,  78,  84,   0,  84, 
     69,  88,  67,  79,  79,  82, 
     68,   0,  79,  83,  71,  78, 
    228,   0,   0,   0,   8,   0, 
      0,   0,   8,   0,   0,   0, 
    200,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    212,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    218,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,  12,   0,   0, 
    218,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,   7,   8,   0,   0, 
    218,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,   7,   8,   0,   0, 
    218,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   5,   0, 
      0,   0,   7,   8,   0,   0, 
    218,   0,   0,   0,   4,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   6,   0, 
      0,   0,  15,   0,   0,   0, 
    218,   0,   0,   0,   5,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   7,   0, 
      0,   0,   7,   8,   0,   0, 
     83,  86,  95,  80,  79,  83, 
     73,  84,  73,  79,  78,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171,  83,  72, 
     69,  88, 240,  12,   0,   0, 
     80,   0,   1,   0,  60,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 192,   0, 
      0,   0,  80,   0,   1,   0, 
    187,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   2,   0,   0,   0, 
     21,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      2,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   1,   0, 
      0,   0, 101,   0,   0,   3, 
     50,  32,  16,   0,   2,   0, 
      0,   0, 101,   0,   0,   3, 
    114,  32,  16,   0,   3,   0, 
      0,   0, 101,   0,   0,   3, 
    114,  32,  16,   0,   4,   0, 
      0,   0, 101,   0,   0,   3, 
    114,  32,  16,   0,   5,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   6,   0, 
      0,   0, 101,   0,   0,   3, 
    114,  32,  16,   0,   7,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  17,   0, 
      0,   8,  18,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   4,   0,   0,   0, 
     17,   0,   0,   8,  34,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   5,   0, 
      0,   0,  17,   0,   0,   8, 
     66,  32,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   2,   0,   0,   0, 
      6,   0,   0,   0,  17,   0, 
      0,   8, 130,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   7,   0,   0,   0, 
     54,   0,   0,   6, 242,  32, 
     16,   0,   1,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     54,   0,   0,   5,  50,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   3,   0, 
      0,   0,  54,   0,   0,   5, 
     66,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  16,   0, 
      0,   8,  18,  32,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 131,  32,   0,   2,   0, 
      0,   0,  16,   0,   0,   0, 
     16,   0,   0,   8,  34,  32, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 131,  32,   0, 
      2,   0,   0,   0,  17,   0, 
      0,   0,  16,   0,   0,   8, 
     18,  32,  16,   0,   3,   0, 
      0,   0,  70,  18,  16,   0, 
      1,   0,   0,   0,  70, 130, 
     32,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,  16,   0, 
      0,   8,  34,  32,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   2,   0, 
      0,   0,   1,   0,   0,   0, 
     16,   0,   0,   8,  66,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   2,   0, 
      0,   0,   1,   0,   0,   0, 
     17,   0,   0,   8,  66,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      2,   0,   0,   0,   2,   0, 
      0,   0,  54,   0,   0,   5, 
    114,  32,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   9, 114,  32,  16,   0, 
      5,   0,   0,   0,  70,   2, 
     16, 128,  65,   0,   0,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   2,   0,   0,   0, 
     20,   0,   0,   0,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      6,   0,   0,   0,  70,  30, 
     16,   0,   2,   0,   0,   0, 
     54,   0,   0,   5, 114,  32, 
     16,   0,   7,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 205,   0, 
      0,   0,  23,   0,   1,   0, 
     32, 113,  23,   0, 120,   1, 
    237, 152,  75,  79,  19,  81, 
     20, 199, 111, 111, 103,  46, 
    183, 195, 237, 237, 180, 148, 
    242,  40,  74, 169,  21,  11, 
     86,  36, 198, 184,  80, 114, 
     65, 212, 176, 192,   4,  35, 
     44,  48, 105,  66,  16, 106, 
    108, 194, 163,  82,  22, 174, 
     42, 234,  66,  19,  53, 113, 
    171, 159, 128, 133,  59,  55, 
    174, 132,  84, 247,  26,  87, 
    126,   4,  23,  46, 140,  43, 
    119, 250,  63, 211, 169,  54, 
     85, 214,  26,  51, 191, 244, 
    127, 206, 185, 143, 153,  57, 
    247, 209, 205, 185, 213, 195, 
     60,  22, 203, 231, 118, 201, 
    191, 159, 168, 238, 125, 230, 
    140, 217, 212,   0,  22,  25, 
     80,  73, 146, 101, 204,  77, 
    145, 101,  44,  71,  38,   4, 
     97, 238,   0, 220,  24,  52, 
    129, 246,  20,  60, 141, 229, 
    125,  49, 118, 119, 250, 249, 
    179, 251, 211,  43, 136, 198, 
    161,  12, 180, 224, 107,  18, 
    146, 208, 105, 168,  19, 162, 
    184, 157,  48,  25,  64, 159, 
    106, 133, 230,  22, 160,  86, 
     58, 200, 128, 223, 222, 179, 
     76, 230, 207, 204,  64, 148, 
    255,  65,  80, 110,  77, 232, 
    189, 148,  39,  65, 235, 253, 
    215, 160,  51, 107, 158,  19, 
     65, 231, 209, 138, 134, 154, 
    251, 249, 162, 155, 172, 119, 
    124,  30, 159, 252, 118, 243, 
     44, 247, 161, 131, 248,  14, 
    218, 247, 184, 217, 166, 251, 
     34, 216, 220, 184,   8,  61, 
    200,   8, 254, 110,  92, 132, 
    195, 113, 129,  78, 129, 228, 
    132, 128, 112,  72,   2, 147, 
     69,   4, 114,  32, 108, 168, 
     80,  80,  20,  66, 130,  34, 
      6, 185,  80,  28,  74,  64, 
     93,  16, 214,  36, 144, 159, 
    192, 221,  19, 184, 175, 162, 
     23, 234, 131, 250, 161,  52, 
    132, 164, 197,  33, 232,  48, 
     52, 216, 184,   7, 194,  95, 
    187, 224, 141,  64, 132,  27, 
     43,  21,  86,  99,   7, 132, 
     77, 153, 194,  83,  98,  64, 
    116,  32, 185, 255,   8, 218, 
    131, 230, 153,  96, 123, 127, 
    254, 143, 137, 214,  56,  32, 
     32,  32,  32,  32,  32,  32, 
     32,  32,  32,  32,  32,  32, 
     32,  32, 224, 111, 193, 135, 
    238, 189, 102, 225, 253, 253, 
     59, 236, 241,  30, 179, 223, 
    214, 165, 253, 176, 238, 218, 
    206, 155,  41, 251,  67, 221, 
     10, 237, 212, 175, 216, 247, 
    234,  21, 140, 117, 106, 166, 
     99, 154, 235,  46, 109, 233, 
     30,  45, 116,  90, 167, 244, 
    160, 206, 233,  35,  90, 107, 
     71,  49, 163,  21,  55,   9, 
    101, 153, 148,  18, 170,  95, 
    165, 212,  97, 149,  83,  89, 
    165, 213,  49, 174, 106, 199, 
    249, 112, 205,  73, 230, 181, 
     78, 142, 234,  68, 178, 160, 
     35,  14,  51,  81, 135, 155, 
    184,  99, 153, 110,  71, 168, 
     62,  39, 165,  14,  57,  57, 
     53, 228, 104, 117,  52, 171, 
    204,  72, 118, 216,  68,  18, 
    121,  19,  77, 140, 154, 120, 
    162,  96, 164, 100,  70,  73, 
    110,  92, 105, 153, 164,  20, 
    170,  87, 166, 212, 128, 204, 
    169, 140, 212,  42, 151,  81, 
     38, 159,  25,  54, 210, 205, 
     27, 229, 142,  26, 215,  45, 
     24, 139,  73, 105, 115,  71, 
     10,  43,  35,  25, 207, 214, 
     66, 124, 172, 198, 249, 120, 
     45, 204,  79, 213, 118, 248, 
    233, 218,  87, 126, 166, 246, 
     78, 178, 111, 225, 206,  68, 
     71, 140, 179, 111, 241, 158, 
    222, 190,  65, 120, 209, 213, 
    159,  62,   9, 159, 236,  78, 
    165,  39, 225,  89, 136, 167, 
    231, 224,  45, 219,  77,  47, 
    193, 171, 168, 142, 109, 194, 
    203, 136, 147, 102, 236, 238, 
    158,  87, 202, 227, 222, 239, 
     39, 125,  84,   6, 107, 235, 
    115, 201, 180, 245, 121, 177, 
    213, 168, 153,  53, 225, 212, 
    137, 190, 214, 186, 209, 162, 
     95,   7, 206, 251, 158, 106, 
    187,  17,  40, 196, 194, 222, 
     59,  40,   7, 138,   9, 170, 
    176,  89, 172,  81,  95, 123, 
     50,  52,  34, 146, 143, 122, 
     94,  82,  76,  60, 245, 159, 
    175, 248, 158, 234, 195,  84, 
    175, 250, 197,  14, 153, 223, 
    120, 229, 207, 223, 245,  61, 
    173, 133, 242, 211, 222, 215, 
      0,  21,  59, 193,  71, 127, 
    252, 189, 239, 169,  38,  70, 
     53, 220, 246,  60, 190, 248, 
    227, 215,  32, 202, 244, 194, 
    217, 226, 213,  82, 101, 179, 
     90,  92, 188, 190, 121, 251, 
    196, 249, 133, 153,  19, 243, 
    203, 235, 149, 181,  82, 181, 
     56,  91, 222, 174,  22,  47, 
    150, 183,  74,  43, 219, 139, 
     11, 179, 197, 234, 214,  74, 
    113, 254, 230, 242, 106, 105, 
    171,  90, 188, 176, 185,  94, 
     41, 175, 149,  86, 189, 135, 
    230,  54,  74,  23, 103, 230, 
     47,  95, 186, 113,   3,  51, 
    151, 214, 151, 203,  27,  99, 
    149, 213, 235, 236,   7, 176, 
     35, 122, 254,   0,  53,  16, 
      0,   0, 220,   0,   0,   0, 
     23,   0,   1,   0,  16,  29, 
     24,   0, 120,   1, 237, 152, 
    207, 111,  19,  71,  20, 199, 
    159, 199, 195, 176, 222, 140, 
    135, 181, 179, 113, 126, 224, 
    192, 198, 128, 250,  67, 165, 
     74,  81,  15, 168, 226, 176, 
     64,  16,  72,  32, 129,  72, 
     14,   1,  44,  65, 192,  70, 
    164,  74, 136,  21, 231, 192, 
    161, 114,  91,  20, 169, 135, 
    210,  91,  47,  72, 252,  23, 
     72, 156,  16, 137,  12,  82, 
    123, 131,   3, 226, 204,  25, 
    241,  63, 192, 247, 187,  94, 
    131, 107, 202,  25, 132, 246, 
     35, 127, 231, 205, 188, 217, 
    153, 121, 111, 198, 167,  55, 
     61,  33,   9,  47,  94, 189, 
    186,  72, 251, 236,  72, 123, 
    235, 181,  18, 217, 193,   1, 
     64,  55, 161,  21, 178,  21, 
    121,  88,  97,  43, 242,  53, 
    155,  28, 132,  15, 202,  48, 
    223,  66, 207,  49, 142,  97, 
     57, 215,  87, 245, 159, 187, 
    199,  30,  92, 185, 119, 236, 
    103, 244, 127, 128,  70, 161, 
    213,  84,  71, 161,  41, 232, 
     16, 180,  11,  26, 134, 115, 
      6,  34,  60, 106,  16, 250, 
    191, 131,   6, 241, 216,   0, 
    174, 251, 207, 126,  75, 108, 
    254, 159,  75,  16, 227, 255, 
     24, 140, 141, 251, 245, 233, 
    239, 203, 124,  63,  55, 248, 
    102, 253, 119,  34, 124, 143, 
     65,  28, 164,  33,  50, 151, 
    190,  99, 255, 125, 255,  78, 
    199, 253, 183, 220, 134,  62, 
    198,  27, 208, 191, 107, 194, 
    254,  97, 136, 112, 127,  35, 
    103, 103,  77, 238, 143, 200, 
    168, 167, 179,  38, 159,  47, 
     25,  56,  13, 130,  51, 120, 
     52, 179,  19, 194,   2,  83, 
    128, 124, 104,   4, 178,  80, 
     17,  66, 128,   6,  23, 108, 
      2, 168,   4,  33,  24, 131, 
     63, 140,  65,  78, 102,  12, 
     66, 140, 102,  28, 194, 127, 
    214,  76,  66, 120,  24, 179, 
     27, 170,  66, 211, 208,  30, 
    104, 239, 251, 255,   1,  49, 
    185, 222,  37,  24, 213, 203, 
     20, 241, 208, 136, 209, 140, 
     20, 118,   7, 111,  13, 150, 
    193,   1, 179,  19,   1, 126, 
      1, 240,  14,   6, 239, 161, 
    151, 109, 143,  40,  85,  70, 
     70,  70,  70,  70,  70,  70, 
     70,  70,  70,  70,  70,  70, 
     70,  70, 198, 167,  68, 205, 
    220, 126,  36, 249,  39, 219, 
    191, 202, 157, 173, 160, 232, 
     61, 110, 193, 142,  58, 113, 
     65, 254, 183, 237, 178,  21, 
     59, 238, 148, 211, 133, 205, 
    110, 201,  23,  91, 177, 202, 
    238, 118, 218,   5, 158, 216, 
     49,  95, 217,  41, 171, 237, 
     94, 103,  92,  92, 124, 214, 
     13,  61, 101,  39, 125, 109, 
    247,  88,  99,  39,  60, 109, 
    167, 125,  99, 165, 248, 111, 
    183, 234,  25, 203, 189,  37, 
    110, 189,  20, 137, 181, 166, 
    205, 197, 218,  83, 210, 241, 
    138, 119, 186,  30, 199,  42, 
    214,   5, 165,  58, 251, 148, 
    238,  88, 142, 243, 177, 246, 
    149, 233, 204, 212, 180, 253, 
     74,  85,  58,   1, 125,  88, 
     59, 130,  53,  81, 164, 237, 
    129,  90, 197, 150, 195, 154, 
     11, 233, 199,  94, 251, 163, 
    138,  45, 149, 107, 182,  18, 
     42,  55,  65,  31, 214,   7, 
     65, 205, 142, 149,  85, 114, 
    246,  84, 104, 220, 168, 139, 
     92, 149, 115, 216, 231,  92, 
    113, 179,  27,   6, 136, 183, 
    108, 108, 217,  70, 200,  81, 
     92, 196,  57, 196,  49,  17, 
     24,  91, 242,  35, 228,  42, 
     73, 174, 251, 233,  31, 193, 
    126,  94, 132, 156,  37, 201, 
    121, 150, 190,  82, 172,  67, 
    220,   3, 115, 254, 145,  99, 
    196, 193, 188,  15, 179, 143, 
    243, 121, 174,  23,  41,  47, 
    230,  56,  64, 126,  98, 188, 
     57, 246, 113, 190, 175, 197, 
     59, 197,  62, 206,  59,  71, 
    139, 181,  11, 180,  88, 183, 
     72, 139, 111, 174, 208, 218, 
     88,  55, 104, 139, 177, 190, 
     65, 235,  98, 189,  66, 187, 
     43, 214,  45,  90,  47, 214, 
     27, 180, 133,  88, 223, 162, 
    245,  99,  45, 242, 251, 214, 
     88, 242, 176, 201, 239,  29, 
    147,  44, 207,  13, 249, 146, 
    146, 244, 144,  47,  96,  51, 
    228,  75, 250, 186,  87, 223, 
    235, 147, 148, 249, 224,  27, 
    172, 119, 233, 113, 182,  34, 
    207, 211,  26, 231,  44,  84, 
    128, 114, 146,  79, 246,  96, 
     92, 236,  19,  86,   3, 117, 
     82,  93,  22, 249, 107, 230, 
     27,  19, 254,  57, 126, 159, 
    125, 114,  36, 221, 167, 154, 
     90, 214, 208,  44, 244,  30, 
     86, 191,  63, 164, 145, 126, 
    191, 144,  90, 230, 194, 248, 
     92, 114,  26,  96,  97,  22, 
    108, 166, 243, 191, 164, 150, 
    245, 187,  17, 104,  56, 142, 
    123, 233, 252,   5, 136, 145, 
     30, 255, 169, 126, 190, 217, 
     90, 107, 215,  23, 175, 174, 
    221,  58, 120, 116, 225, 228, 
    193, 249, 165, 213, 214,  74, 
    179,  93,  63, 189, 188, 209, 
    174, 207,  45, 175,  55, 175, 
    109,  44,  46, 156, 174, 183, 
    215, 175, 213, 231, 111,  44, 
     53, 154, 235, 237, 250, 241, 
    181, 213, 214, 242,  74, 179, 
    145,  44,  58, 123, 179,  57, 
    119, 114, 254, 204, 137, 235, 
    215, 241, 229, 229, 213, 165, 
    229, 155, 223, 183,  26,  87, 
    229,  45, 188,  56, 165,  52, 
      0,   0,  53,  16,   0,   0, 
    211,   0,   0,   0,  23,   0, 
      1,   0,   0, 177,  23,   0, 
    120,   1, 237, 152, 207,  79, 
     19,  81,  16, 199, 103, 127, 
     61, 182, 203, 240, 216, 150, 
     82,  64,  64, 151,  90, 107, 
    169, 197, 144, 200, 129,  24, 
     77, 240,  87,  48, 209,   4, 
     35,  30,  48, 105,  98,  80, 
     74,  36,  17, 105,  40,   7, 
     14,   6, 149, 152, 112,  16, 
    111,  30, 252,  51,  52,  94, 
     60,   9, 169,  87, 141,  28, 
    141, 127, 129,   7, 255,   0, 
     15,  38, 248, 157, 237,  86, 
     42, 106,  60, 170, 201, 126, 
    194, 119, 230, 205, 219, 215, 
    237, 188, 153, 114, 153,  23, 
     61,  20,  50, 241, 234, 227, 
    105, 241,  59, 167, 106,  91, 
    159,  77,  34,  71, 130,  22, 
    170, 105, 177,  68,  87,  50, 
     98, 137,  10,  98,  12,   8, 
    103, 229,  21, 199, 161, 123, 
    136,  39, 224, 229,  89,  83, 
    239, 222,  62,  58,  59,  63, 
    191, 113,  22,  75,  26, 133, 
    122, 161, 205,  72, 114, 182, 
     19,  58,   1, 117,  64, 130, 
    196, 173, 216,  98,   0, 190, 
    230,   7,  20,  52,   2, 181, 
    210,  38,   6, 236, 127,   7, 
    205, 138, 249,  53,  83,  80, 
     84, 130,  95,  34, 185,   9, 
    205, 119,  54, 243, 148, 251, 
    254, 107,  72, 207, 154, 125, 
     18, 164,  31, 173, 104, 200, 
    130, 132, 207, 221,  98, 247, 
    234,  90, 136, 250, 218, 236, 
    229,  54, 244,  59, 118, 129, 
     43, 139,  22, 154, 177, 244, 
     75, 209, 212, 168,  50,  54, 
      2, 101, 190,  31,  85, 150, 
    149,  84, 216,  84,  72,  78, 
    161, 105,  10,  77,  82,  56, 
    172,  18, 144,   7, 181,  67, 
     12, 161, 176,  10,   9,  42, 
     20,  90, 249,  80,  18,  74, 
     65,  93,  16, 238, 164, 144, 
    175,  66, 142,  10,   9,  42, 
    252, 136,  84,  31, 116,   0, 
    234, 135,   6, 160,  65, 232, 
     32, 116, 104,  47,  23,  65, 
     25, 141,  34,  40, 179, 113, 
     83, 228,  35, 142, 148,  45, 
    153, 194,  59,  82,  53, 120, 
     73,  14, 168, 182, 230, 175, 
    232, 255,  70, 106, 208,  90, 
    135, 198, 109,  27, 255, 178, 
      1,  36,  60,  16,  19,  19, 
     19,  19,  19,  19,  19,  19, 
     19,  19,  19,  19,  19,  19, 
     19,  19, 243, 151,  48, 135, 
    214,  95, 147, 181, 189, 125, 
    159,  54, 183, 124, 199, 126, 
     99,  27,  15, 234,  19, 206, 
    219,  58,  57,  59, 117, 215, 
    121,  90, 223, 181, 190, 190, 
    150, 105,  70,  21, 207, 219, 
     53, 105, 143, 137,  19,  30, 
    177, 235,  18, 119, 106,  91, 
    107, 182, 185, 195, 179, 153, 
     93, 155, 187, 180, 210,  41, 
     86, 156, 244,  20, 251, 174, 
    226,  30, 157, 209,  25, 206, 
    112, 183, 151, 225, 180, 155, 
    225,  43, 206, 122, 189, 223, 
    204, 173, 245, 101, 115, 220, 
     27, 228, 248, 144, 153,  95, 
     27, 204, 230, 121,  32, 200, 
    115,  54,  29, 232, 161,  84, 
    192, 129,  31, 112,  62, 157, 
    213,  71,  82,  89, 206, 249, 
     89,  46, 166,  11, 122,  56, 
     85, 224, 130,  95, 224, 195, 
    186, 168, 177, 195,  67,  94, 
    145,   3, 183, 200,  71, 117, 
     73, 231, 185, 196,  71, 188, 
     18, 231, 220,  18,  31, 211, 
     90,  23,  89, 243, 176, 167, 
    185, 224, 106, 150,  59, 217, 
     69, 215, 117,  74, 158, 171, 
     52, 187,  27, 166,  57,  70, 
    198, 248,   7, 131,  76,  50, 
     45, 120, 171,  93,   6, 115, 
    107, 134, 105, 175, 217,  78, 
    180, 143, 216,  66, 172, 218, 
     26, 177, 155, 128,  79, 117, 
     17, 119, 192, 251,  73,  26, 
    167, 177,  15,  70, 154, 200, 
     79,  34, 238, 206, 208,  69, 
    137, 219, 136, 210, 221, 136, 
    109, 135, 102,  36,  86,  68, 
    189, 125, 136, 185, 131,  14, 
    244, 195, 235,  78,  26,  24, 
    132, 119,  19, 180,  42, 207, 
     61, 169, 252, 195, 173, 112, 
     52, 104, 134, 127, 223, 233, 
    147, 193, 209, 190,  61,  95, 
    204, 190, 189, 112, 109, 203, 
    225,  61, 194, 209,  27, 246, 
    154,  51,  40, 225,  89,  52, 
    111, 188,  29, 121, 153,  13, 
     39,  32, 131, 172, 240,  29, 
    146, 131, 172,   5, 153, 208, 
    217, 225, 196, 151, 232, 201, 
    208, 176,  74,  63, 238, 121, 
     41, 107,  97,  39, 250, 252, 
    243, 200, 203, 108, 139, 161, 
     63, 241,  37,  58, 255,  41, 
    242, 114,  23, 201,  79, 135, 
    223,   6, 100,  88,  10, 122, 
    101,  32,  10, 252, 200, 203, 
     76,  13, 221, 249,  41, 143, 
    209, 232, 249, 117,  72,  50, 
     61, 119, 178, 124, 181,  82, 
     93, 170, 149, 103, 110,  46, 
    173, 142, 156, 185,  54,  57, 
     50,  61, 187,  88, 189,  83, 
    169, 149,  47,  45, 172, 212, 
    202, 231,  23, 150,  43, 183, 
     86, 102, 174,  93,  42, 215, 
    150, 111, 149, 167, 111, 207, 
    206,  85, 150, 107, 229, 115, 
     75, 139, 213, 133,  59, 149, 
    185, 240,  67,  83, 119,  43, 
    231,  39, 167,  47,  95, 152, 
    159, 199, 201,  27, 139, 179, 
     11, 119, 143,  87, 231, 110, 
    210,  55,  82,  97, 131, 232, 
     88,  72,  83,  72,   8,   0, 
      0,   0, 141,  33,  41,   6, 
     20, 139,  23, 179,  88,  80, 
     68,  80,  88,   0,   0,   0, 
     67,  58,  92,  82, 101, 112, 
    111, 115,  92,  88,  98, 111, 
    120,  45,  65,  84,  71,  45, 
     83,  97, 109, 112, 108, 101, 
    115,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68,  71,  83, 
     76,  69, 102, 102, 101,  99, 
    116,  95, 109,  97, 105, 110, 
     46, 112, 100,  98
};
