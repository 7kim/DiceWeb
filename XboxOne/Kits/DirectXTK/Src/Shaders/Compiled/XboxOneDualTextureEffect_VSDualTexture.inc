#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     zw        2     NONE   float     zw
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[102]
// Embedded Data:
//  0x00000066 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000061 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output_siv o3.xyzw, position
mov o0.xyzw, cb0[0].xyzw
dp4_sat o1.w, v0.xyzw, cb0[2].xyzw
mov o1.xyz, l(0,0,0,0)
mov o2.xy, v1.xyxx
mov o2.zw, v2.xxxy
dp4 o3.x, v0.xyzw, cb0[3].xyzw
dp4 o3.y, v0.xyzw, cb0[4].xyzw
dp4 o3.z, v0.xyzw, cb0[5].xyzw
dp4 o3.w, v0.xyzw, cb0[6].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[102], bundle is:[165] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTexture.pdb
// Shader Semantic Hash      : 0xbc2b8dc3b66b9bc
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 168 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 14;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x08         // 00000000000C: C3020108
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x18         // 000000000010: C28A0118
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s7, v7                          // 00000000001C: 0E000E07
  v_mul_legacy_f32  v1, s11, v7                         // 000000000020: 0E020E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000024: 0E040E0F
  v_mul_legacy_f32  v3, s19, v7                         // 000000000028: 0E060E13
  v_mul_legacy_f32  v7, s23, v7                         // 00000000002C: 0E0E0E17
  v_mac_f32     v0, s6, v6                              // 000000000030: 3E000C06
  v_mac_legacy_f32  v1, s10, v6                         // 000000000034: 0C020C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000038: 0C040C0E
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v7, s22, v6                         // 000000000040: 0C0E0C16
  v_mac_f32     v0, s5, v5                              // 000000000044: 3E000A05
  v_mac_legacy_f32  v1, s9, v5                          // 000000000048: 0C020A09
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v3, s17, v5                         // 000000000050: 0C060A11
  v_mac_legacy_f32  v7, s21, v5                         // 000000000054: 0C0E0A15
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 000000000058: D2800800 04000904
  v_mac_legacy_f32  v1, s8, v4                          // 000000000060: 0C020808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000064: 0C04080C
  v_mac_legacy_f32  v3, s16, v4                         // 000000000068: 0C060810
  v_mac_legacy_f32  v7, s20, v4                         // 00000000006C: 0C0E0814
  v_mov_b32     v4, s0                                  // 000000000070: 7E080200
  v_mov_b32     v5, s1                                  // 000000000074: 7E0A0201
  v_mov_b32     v6, s2                                  // 000000000078: 7E0C0202
  v_mov_b32     v10, s3                                 // 00000000007C: 7E140203
  v_mov_b32     v11, 0                                  // 000000000080: 7E160280
  exp           pos0, v1, v2, v3, v7 done               // 000000000084: F80008CF 07030201
  exp           param0, v4, v5, v6, v10                 // 00000000008C: F800020F 0A060504
  exp           param1, v11, v11, v11, v0               // 000000000094: F800021F 000B0B0B
  exp           param2, v8, v9, v12, v13                // 00000000009C: F800022F 0D0C0908
  s_endpgm                                              // 0000000000A4: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   14
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  168
//Assembler Counts:
//  num_32bit_ops                     : 32
//  num_64bit_ops                     : 5
//  num_alu                           : 25
//  num_fc                            : 8
//  num_inst_exp                      : 4
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 5
//  num_inst_vop2                     : 19
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 4
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 14
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 168
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 32
// num_64bit_ops                     : 5
// num_alu                           : 25
// num_fc                            : 8
// num_inst_exp                      : 4
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 5
// num_inst_vop2                     : 19
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 4
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[269], bundle is:[179] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTexture.pdb
// Shader Semantic Hash      : 0xbc2b8dc3b66b9bc
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 276 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 14;
NumSgprs             = 34;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x08       // 00000000000C: C3060908
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x18        // 000000000010: C28E0918
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000014: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000018: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 00000000001C: C080030C
  v_mac_legacy_f32  v0, s18, v6                         // 000000000020: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000024: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x00         // 000000000028: C2840900
  v_mac_legacy_f32  v0, s17, v5                         // 00000000002C: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 000000000030: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000034: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000038: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 00000000003C: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 000000000040: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000044: 0E060E1F
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  v_mac_legacy_f32  v3, s28, v4                         // 00000000005C: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000060: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000064: E0704030 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 00000000006C: E0704034 04400100
  v_mov_b32     v0, s8                                  // 000000000074: 7E000208
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000078: E0704038 04400200
  v_mov_b32     v1, s9                                  // 000000000080: 7E020209
  buffer_store_dword  v3, v0, s[0:3], s4 offset:60 glc slc // 000000000084: E070403C 04400300
  v_mov_b32     v2, s10                                 // 00000000008C: 7E04020A
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000090: E0704000 04400000
  v_mov_b32     v0, s11                                 // 000000000098: 7E00020B
  v_mul_legacy_f32  v3, s15, v7                         // 00000000009C: 0E060E0F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 0000000000A0: E0704004 04400100
  v_mov_b32     v1, 0                                   // 0000000000A8: 7E020280
  v_mac_legacy_f32  v3, s14, v6                         // 0000000000AC: 0C060C0E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 0000000000B0: E0704008 04400200
  v_mac_legacy_f32  v3, s13, v5                         // 0000000000B8: 0C060A0D
  s_nop         0x0000                                  // 0000000000BC: BF800000
  buffer_store_dword  v0, v0, s[0:3], s4 offset:12 glc slc // 0000000000C0: E070400C 04400000
  v_mad_legacy_f32  v3, v4, s12, v3 clamp               // 0000000000C8: D2800803 040C1904
  buffer_store_dword  v1, v0, s[0:3], s4 offset:16 glc slc // 0000000000D0: E0704010 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000D8: E0704014 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 0000000000E0: E0704018 04400100
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 0000000000E8: E070401C 04400300
  buffer_store_dword  v8, v0, s[0:3], s4 offset:32 glc slc // 0000000000F0: E0704020 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:36 glc slc // 0000000000F8: E0704024 04400900
  buffer_store_dword  v12, v0, s[0:3], s4 offset:40 glc slc // 000000000100: E0704028 04400C00
  buffer_store_dword  v13, v0, s[0:3], s4 offset:44 glc slc // 000000000108: E070402C 04400D00
  s_endpgm                                              // 000000000110: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   14
//  NumSRegs:                   34
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   87
//  CycleSimNWaves:             87
//  Code Size:                  276
//Assembler Counts:
//  num_32bit_ops                     : 35
//  num_64bit_ops                     : 17
//  num_alu                           : 25
//  num_fc                            : 11
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 16
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 5
//  num_inst_vop2                     : 19
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 16
//  num_vmem_group                    : 8
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 14
// m_uNumSRegs                       : 34
// m_uSCCodeSize                     : 276
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 87
// m_uCycleSimNWaves                 : 87

// Assembler Counts:
// num_32bit_ops                     : 35
// num_64bit_ops                     : 17
// num_alu                           : 25
// num_fc                            : 11
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 16
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 5
// num_inst_vop2                     : 19
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 5
// constant_literal_operands         : 0
// num_tex                           : 16
// num_vmem_group                    : 8
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[450], bundle is:[171] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDualTextureEffect_VSDualTexture.pdb
// Shader Semantic Hash      : 0xbc2b8dc3b66b9bc
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 212 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 14;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x08         // 00000000000C: C3020108
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x18         // 000000000010: C28A0118
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 00000000001C: 0E000E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000020: 0E040E0F
  v_mac_legacy_f32  v0, s10, v6                         // 000000000024: 0C000C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000028: 0C040C0E
  v_mul_legacy_f32  v3, s19, v7                         // 00000000002C: 0E060E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000030: 0E140E17
  v_mac_legacy_f32  v0, s9, v5                          // 000000000034: 0C000A09
  v_mac_legacy_f32  v2, s13, v5                         // 000000000038: 0C040A0D
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v10, s22, v6                        // 000000000040: 0C140C16
  s_mov_b32     m0, 0x00010000                          // 000000000044: BEFC03FF 00010000
  v_mac_legacy_f32  v0, s8, v4                          // 00000000004C: 0C000808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mac_legacy_f32  v3, s17, v5                         // 000000000054: 0C060A11
  v_mac_legacy_f32  v10, s21, v5                        // 000000000058: 0C140A15
  v_lshlrev_b32  v1, 6, v1                              // 00000000005C: 34020286
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mac_legacy_f32  v10, s20, v4                        // 000000000064: 0C140814
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 000000000068: D8380D0C 00020001
  v_mul_legacy_f32  v0, s7, v7                          // 000000000070: 0E000E07
  ds_write2_b32  v1, v3, v10 offset0:14 offset1:15      // 000000000074: D8380F0E 000A0301
  v_mov_b32     v2, s0                                  // 00000000007C: 7E040200
  v_mov_b32     v3, s1                                  // 000000000080: 7E060201
  v_mac_legacy_f32  v0, s6, v6                          // 000000000084: 0C000C06
  ds_write2_b32  v1, v2, v3 offset1:1                   // 000000000088: D8380100 00030201
  v_mov_b32     v2, s2                                  // 000000000090: 7E040202
  v_mov_b32     v3, s3                                  // 000000000094: 7E060203
  v_mac_legacy_f32  v0, s5, v5                          // 000000000098: 0C000A05
  ds_write2_b32  v1, v2, v3 offset0:2 offset1:3         // 00000000009C: D8380302 00030201
  v_mov_b32     v2, 0                                   // 0000000000A4: 7E040280
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 0000000000A8: D2800800 04000904
  ds_write2_b32  v1, v2, v2 offset0:4 offset1:5         // 0000000000B0: D8380504 00020201
  ds_write2_b32  v1, v2, v0 offset0:6 offset1:7         // 0000000000B8: D8380706 00000201
  ds_write2_b32  v1, v8, v9 offset0:8 offset1:9         // 0000000000C0: D8380908 00090801
  ds_write2_b32  v1, v12, v13 offset0:10 offset1:11     // 0000000000C8: D8380B0A 000D0C01
  s_endpgm                                              // 0000000000D0: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   14
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   88
//  CycleSimNWaves:             88
//  Code Size:                  212
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 9
//  num_alu                           : 26
//  num_fc                            : 9
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 8
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 5
//  num_inst_vop2                     : 20
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 8
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 14
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 212
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 88
// m_uCycleSimNWaves                 : 88

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 9
// num_alu                           : 26
// num_fc                            : 9
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 8
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 5
// num_inst_vop2                     : 20
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 8
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DualTextureEffect_VSDualTexture[] =
{
     68,  88,  66,  67,  57,  59, 
    255,   0, 217, 242, 190, 236, 
    215,  12, 208, 171, 200,  13, 
    190, 163,   1,   0,   0,   0, 
    140,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    164,   0,   0,   0,  72,   1, 
      0,   0,  12,  11,   0,   0, 
     28,  11,   0,   0,  73,  83, 
     71,  78, 104,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   3,   3, 
      0,   0,  92,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
    171, 171,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    134,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,  12,   0,   0, 
    134,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,  12,   3,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 188,   9,   0,   0, 
     80,   0,   1,   0, 111,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 102,   0, 
      0,   0,  80,   0,   1,   0, 
     97,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   7,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 194,  32, 
     16,   0,   2,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   6, 242,  32,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,  32, 
      0,   8, 130,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
     50,  32,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   5, 194,  32,  16,   0, 
      2,   0,   0,   0,   6,  20, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,  17,   0,   0,   8, 
     34,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,  17,   0, 
      0,   8,  66,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     17,   0,   0,   8, 130,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 167,   0, 
      0,   0,  23,   0,   1,   0, 
     32, 205,  22,   0, 120,   1, 
    237, 152, 205,  79,  19,  65, 
     24, 135, 223, 157,  46, 111, 
    183, 219,  97,  40, 223,  69, 
     81,  36, 193, 196,  11, 234, 
    193, 147,  26,  34, 130,  49, 
    145,   3, 137, 109,  12, 135, 
     77,  76, 129,  37,  52,   1, 
    219, 180,  37, 225,  84, 235, 
    199, 201, 248,  15, 168,  87, 
     15,  94, 188, 107,  66, 132, 
    192,  85,  98, 226, 153, 163, 
    127, 130,   7,  14,  38, 250, 
    123, 151,  93, 109, 138, 156, 
     49, 113, 158, 244, 153, 153, 
    157, 237, 236, 188, 243, 113, 
    122, 247, 135,  40, 226, 222, 
    155, 247, 223, 164, 206, 235, 
    194, 248, 115, 135, 168,  75, 
     30, 128,  43,   5, 168,  14, 
     72,  73, 180,  58,  40,  37, 
    209,  37,  41, 240,  63,  82, 
     68,   6, 213,  25, 248,  14, 
    222, 130, 242,  46, 113, 255, 
    243, 143, 233, 215, 175,  82, 
    183, 175, 161, 157, 135,  57, 
     88, 136, 189,   0, 101, 158, 
     17, 232, 193, 100, 174, 118, 
     82,  82,   0, 153, 170,  29, 
     25, 215,  15, 219,  73, 198, 
     31, 251,  78,  73, 138, 191, 
    115,  17,  74, 252,  39,  33, 
    177,  37, 200, 119,  37,  78, 
     65, 214, 251, 175,  33, 123, 
    148, 156, 147,  32, 231, 209, 
    142, 172,  51, 217, 207, 124, 
    124, 142, 201, 190,  22, 227, 
    103, 249, 143, 172, 109,   7, 
    158, 196,  79, 208, 185, 199, 
    201, 179, 124, 159, 105, 254, 
     42,  59, 207, 114, 172, 246, 
    114, 140,  14, 198,  75, 198, 
    129,  49, 195,  52, 196,  38, 
    114,   6, 250,  48,  11,  53, 
    236, 134, 152, 156, 123,  32, 
     46,   9, 247, 194,  62, 136, 
     67, 102, 172, 137,  17,  31, 
    227, 174, 242,  48, 196,  69, 
     98,  28,  12,  35,  80,  62, 
     11,  71, 225,  57, 120,  30, 
    142,  37,  49,  28, 193, 206, 
    209,  10,  89, 225, 162, 254, 
     71, 200,  30,  36, 119,  85, 
    206,  70,  76, 104, 111,  91, 
     44,  22, 139, 197,  98, 177, 
     88,  44,  22, 139, 197,  98, 
    177, 156,  22, 106, 252, 233, 
     39,  74, 181, 118,  30, 211, 
    203, 109, 207,  81, 123, 121, 
    231, 197,  46,  57, 173, 221, 
     42, 158, 211, 134,  76, 214, 
     40, 211,  99,  92, 211, 111, 
    216,  12,  27,  99,  88, 211, 
    148, 175, 149,  54, 218, 213, 
    125, 154, 245,  16,  90,  93, 
     62,  77, 101, 124, 165, 187, 
    125,  87, 247, 250, 172,   7, 
    125, 163, 201, 107, 125, 117, 
     51, 228, 122, 158, 210, 218, 
    115, 117, 206,  99,  61, 224, 
    161,  95, 121,  77,  71, 249, 
     77, 165, 116,  51, 165,   6, 
    154,  45,  53, 212, 252, 226, 
    209, 161, 163,  82, 233,  30, 
     69, 135, 110,  23, 251,  99, 
    168, 179, 217,  44,  93,  65, 
    237, 101, 116,  55, 209, 147, 
    237,  40, 109, 166, 162, 223, 
    111,  70,  36, 229, 212, 209, 
     39, 121, 207, 206, 190, 168, 
    237,  30, 229, 167,  18, 222, 
     70,  31,  36, 106, 197, 245, 
      4, 204,  64,  39, 202, 232, 
     16, 165, 161,  27, 103, 183, 
    182,  62, 174, 220,  56, 248, 
    176, 155, 149, 182, 112,  16, 
    143, 217, 138, 107, 201, 175, 
    106, 248, 135, 150,  20, 199, 
    112, 227,  28, 240, 247, 120, 
    156, 196,  42,  57,  34,  19, 
    101,  89, 129,  36,   5, 193, 
     68, 252, 191, 209, 184, 150, 
    252, 146,  76, 222,  25, 199, 
    205, 248, 125,  25,  74, 164, 
     51, 215, 131, 251,  97, 181, 
     82,  15,  22,  22,  43, 155, 
    147, 211, 197, 187, 147, 133, 
    210, 122, 117,  45, 172,   7, 
    115, 229,  70,  61, 152,  45, 
    215, 194, 165, 198,  66, 113, 
     46, 168, 215, 150, 130, 194, 
    106, 105,  57, 172, 213, 131, 
    153, 202, 122, 181, 188,  22, 
     46,  71, 131, 230,  31, 133, 
    179,  27, 165, 181,  98, 184, 
    217, 216, 168, 133, 119,  86, 
     86,  48, 224, 225, 131,  66, 
     91, 223, 229, 234, 242,  34, 
    253,   2,  87, 177, 105, 139, 
      0,   0,  53,  16,   0,   0, 
    181,   0,   0,   0,  23,   0, 
      1,   0,  16,  77,  23,   0, 
    120,   1, 237, 152, 207,  79, 
     19,  65,  20, 199,  95, 167, 
    227, 176,  91, 134, 165,  64, 
    129, 150, 223,  40,   7,  14, 
     66,  72, 236, 193,  40, 135, 
     21,  48,  30, 136, 193,  88, 
    162,  28,  54,  49,   5, 150, 
    216,   4, 100, 211, 150, 132, 
     83, 173, 218, 163, 241,  47, 
    240, 232,  31, 161,   9,  17, 
      2,  87, 189,  24, 143,  30, 
     60, 250,  95, 232, 247,  45, 
    179, 164, 169, 114, 214, 152, 
    249, 164, 223, 121,  51, 179, 
    111, 102, 222, 252, 232, 229, 
    221,  31, 166, 152,  27,   5, 
    253, 128, 109,  94, 151, 166, 
     91,  41, 162,  43, 220,   0, 
    130,  11,  16, 229, 184,  36, 
    250,  49, 200,  37, 209,  44, 
     23, 240,  99,   7,  15, 230, 
     42, 148,  67, 219, 135, 229, 
    111, 137,  62, 127, 154,  95, 
     34,  42,  46, 173, 162,  62, 
     14, 105, 232, 177, 209,  53, 
    168,  15,  42,  64, 221,  80, 
     39,  89,  40, 137, 131, 151, 
    106, 135, 251,   7, 160, 118, 
     18,  95,  30, 231,  64,  23, 
    148, 185, 248,  51,  69, 136, 
    227, 191,  12, 142, 141, 231, 
     75,  72, 226, 228, 253, 254, 
    107, 240,  25,  37, 247, 196, 
    240, 125, 180, 195, 251, 148, 
     16, 211,  50, 247, 152, 184, 
    124,  53, 109, 246, 225, 189, 
    157,  64, 151, 241,  19,  36, 
    243,  48,  92, 231, 115, 100, 
    210, 144, 162, 181,   5, 149, 
    122, 149,  85, 226,  44, 171, 
    208, 161, 224, 160, 112,  57, 
     74,  65,  93,  16,  46,  71, 
    185,  80,   6, 194, 129,  42, 
     60,  10, 213,   3,  97, 113, 
    213,  11, 225, 192,  21,  30, 
    134, 234, 135, 112, 201,  10, 
    123,  82, 136,  79,  13,  65, 
    120, 175,  42,  15, 225,  98, 
    212,   8,  52,  10, 141,  65, 
    120,  92, 106,   2, 154,  52, 
    123,  76, 115,  36, 104, 115, 
      1,  84, 234, 124, 167,  74, 
     36,  47, 250, 255, 134, 207, 
    160, 253,  63,  16, 159, 137, 
    129, 223,  51, 203,  98, 177, 
     88,  44,  22, 139, 197,  98, 
    177,  88,  44,  22, 139, 229, 
    111,  34, 166,  95, 126, 164, 
    116, 235, 228,  57, 189,  62, 
    118,  92, 117, 150, 119, 223, 
    156,  70, 168,  15, 120, 228, 
    233, 116, 243, 164,  95, 147, 
     30, 246, 132,  71, 110, 235, 
    180,  47,  67, 122,  72,  11, 
     61, 234,  73,  47, 235, 144, 
     30, 204,   8,  61, 162, 165, 
    158, 244, 148, 151, 115, 132, 
     46, 100, 164, 158, 208,  74, 
    231,  29, 169, 199,  51,  74, 
    143,  57,  74, 243, 188,  11, 
    126, 244, 157, 200, 151,  69, 
    182,  41,  95,  58, 130,  26, 
     55, 185,  46, 124, 233,  10, 
    209,  88, 228, 122, 218, 151, 
     25,  33,  27, 196, 117, 248, 
    118, 195, 167,  23, 243,  74, 
    110,  99,  76,  19, 126,  30, 
    230, 118, 184, 141, 113,  61, 
    152, 159, 168, 121, 172, 185, 
     13, 255, 180, 211, 252,  34, 
     11,  90, 102, 185,  13, 255, 
    156, 177, 121,  99, 199, 216, 
     98, 141,  41, 182, 142,  47, 
    103, 216, 186, 190, 156, 101, 
    171, 125, 121, 157, 109, 143, 
     47, 137,  94,  28, 199,  41, 
     58,  17, 255,  46,  40, 112, 
     90, 171, 163,  47, 207,  69, 
     71,  95, 156, 239, 233, 232, 
    139, 235, 242,  60,  47, 150, 
     48,  51, 196,  37,  48, 118, 
      6, 114, 161,  84, 156, 217, 
     35, 234, 130, 164, 201, 170, 
     29, 125, 216, 185, 253, 237, 
    253, 105, 146,  18, 165, 192, 
    140,  89,  52, 118,  10, 194, 
     97, 180, 193, 217, 225, 223, 
    105,  25, 255, 186, 177,  28, 
     43, 231, 171, 188,  36, 163, 
    203,  73,  73, 240, 206, 124, 
    127, 107,  44, 231, 183, 120, 
    241, 206,  56, 142, 204, 247, 
     10, 196, 145,  46, 223,  10, 
     30, 134, 209, 126,  45, 216, 
    216, 220,  63, 156, 187, 179, 
    126, 111, 174,  84, 222, 139, 
    118, 195,  90, 176,  90, 169, 
    215, 130, 149,  74,  53, 220, 
    170, 111, 172, 175,   6, 181, 
    234,  86,  80, 122,  90, 222, 
     14, 171, 181,  96, 121, 127, 
     47, 170, 236, 134, 219, 241, 
    160, 181, 103, 225, 202,  65, 
    121, 119,  61,  60, 172,  31, 
     84, 195, 187,  59,  59,  24, 
    240, 228,  81, 169, 173, 111, 
     62, 218, 222, 164,  95, 228, 
    172, 132,  79,   0,   0,   0, 
     53,  16,   0,   0, 173,   0, 
      0,   0,  23,   0,   1,   0, 
      0, 249,  22,   0, 120,   1, 
    237, 152, 205, 106,  83,  65, 
     20, 199, 207, 157, 123, 123, 
    114, 115,  51, 189,  77, 219, 
    244, 203, 207,  86,  92,  40, 
     82, 233, 194, 133, 232,  70, 
    219, 138,  66,  23,  21,  19, 
    164, 139,  11, 146, 182,  55, 
     52, 144, 154, 144, 180, 208, 
     85, 141,  31, 184,  16, 151, 
    110, 244,  25, 124,   0,   5, 
    105,  75, 251,   2,  34,  46, 
     92, 248,   0, 190, 130,  40, 
    212, 255, 185, 157,  91,  99, 
    176, 184,  84, 100, 126, 228, 
     63, 103, 230, 204, 157, 153, 
     51,  31, 217, 156, 175, 195, 
    148, 112, 254, 219,  70,  73, 
    236, 168,  46,  78,  60, 113, 
    136, 122, 164, 209,  65, 163, 
     32,  37, 209, 139,  33,  41, 
    137, 206,  73, 129, 239,  72, 
     17, 133,  48, 199, 160, 143, 
    208,  53,  72, 250,  82,  85, 
     42,   3, 211, 175,  94, 142, 
     76, 163,  74, 163,  80,  47, 
    180,  96, 116,   6, 202,  66, 
     50,  86, 172, 224,  75, 209, 
    129,  43,   5, 192,  50, 191, 
     32, 241, 153, 144,  14, 241, 
    164,   0, 221, 115,  80,  89, 
    138, 223, 115,   1, 146, 248, 
    143,  66,  98,  19, 210,  57, 
    211,  56,  83, 255, 191, 132, 
     92,  71, 122,  79, 130, 220, 
     71,  39, 178, 207, 244,  60, 
    103, 205,  61, 202,  24, 161, 
    109, 218, 242, 141, 236, 109, 
      7,  58, 138, 125, 144, 158, 
    117,  74, 218, 150, 249, 153, 
    230, 167, 216, 121, 156, 103, 
    181, 151, 103,  56,  24, 157, 
    140,  11,  99, 134,  50,  16, 
     14, 147, 113, 144,  28,  64, 
     57,  72,  67, 120,  24, 140, 
    197, 185,  15, 202,  67, 253, 
    208,   0,  52,   8,  97,  79, 
    140, 248,  24, 111, 149,  71, 
     32,  60,  36,  30, 131,  16, 
     40,  31, 135,  78,  64,  39, 
    161,  83, 208, 105,  19, 139, 
     43, 145, 160,  45,   5,  96, 
    231,  96, 167, 172, 186,  95, 
    210, 255, 137, 156,  65, 250, 
    102, 133, 228,  76, 128, 156, 
      2, 142,  55,  65, 254, 171, 
     22, 139, 197,  98, 177,  88, 
     44,  22, 139, 197,  98, 177, 
     88,  44, 127,  11,  53, 241, 
    104, 139, 220, 246, 206,   3, 
    122, 190, 237,  59, 106, 111, 
    212, 121, 182,  75,  78, 123, 
    183, 129, 118,  46, 164, 176, 
     47, 244, 194,  64, 147,  14, 
    181, 167,   7,  67,  14,  71, 
    194,  66, 152,  13,  72, 247, 
      6, 158,  30, 208, 172, 135, 
    117,  65, 239, 187, 223, 183, 
     36, 227, 225, 251, 164, 181, 
    239, 233, 254, 128, 245,  80, 
     80, 208,  79, 149, 186, 148, 
    247,  89,  23, 252, 130, 214, 
    189, 151,  63,  57, 164,  40, 
    131,  57, 195,  62, 212, 221, 
      0, 139, 123, 155, 142, 226, 
     77, 198, 252, 228, 192, 167, 
     92,  82, 240, 185, 240, 245, 
     96,  13, 229,  30, 248, 218, 
    240, 145, 223, 254, 224, 101, 
    201, 243, 122, 196, 167, 136, 
     51,  98, 137, 252,  44, 172, 
    159, 165,  32,   7, 171,  37, 
    235, 249, 112,  59,  73, 177, 
    161,  15, 191,  67, 198,  36, 
     33, 211, 229,  75, 242,  51, 
     93, 190, 164, 238, 201, 199, 
     63, 121, 159,  76,  72, 244, 
    218, 216, 179, 144, 228,  39, 
     29, 147, 229, 203,  64, 158, 
    201, 128, 189, 123,  91, 185, 
    250, 249, 205, 110,  78, 234, 
    130, 111, 242, 190,  95, 204, 
    216, 113,  72,  67, 127,  98, 
    202, 140,  27,  55,  86,  98, 
    149, 220,  82, 152, 102, 140, 
     37, 129,   8, 110, 155, 254, 
     91, 198,  74,  46,  74,  22, 
    239, 142,  99, 197, 244,  87, 
     33, 137, 116, 230,  74, 116, 
     39, 110, 212,  91, 209, 194, 
     98, 125,  99, 242, 122, 233, 
    230, 100, 177, 188, 218, 168, 
    197, 173, 104, 174, 186, 214, 
    138, 102, 171, 205, 120, 105, 
    109, 161,  52,  23, 181, 154, 
     75,  81, 113, 165, 188,  28, 
     55,  91, 209,  76, 125, 181, 
     81, 173, 197, 203, 201, 160, 
    249, 251, 241, 236, 122, 185, 
     86, 138,  55, 214, 214, 155, 
    241, 141,  74,   5,   3, 238, 
    221,  45, 118, 248,  46,  54, 
    150,  23, 233,   7, 130,  42, 
    110, 108,  88,  72,  83,  72, 
      8,   0,   0,   0, 188, 185, 
    102,  59, 220, 184, 194,  11, 
     88,  80,  68,  80, 104,   0, 
      0,   0,  67,  58,  92,  82, 
    101, 112, 111, 115,  92,  88, 
     98, 111, 120,  45,  65,  84, 
     71,  45,  83,  97, 109, 112, 
    108, 101, 115,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  68, 
    117,  97, 108,  84, 101, 120, 
    116, 117, 114, 101,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  68, 117,  97, 108,  84, 
    101, 120, 116, 117, 114, 101, 
     46, 112, 100,  98
};
