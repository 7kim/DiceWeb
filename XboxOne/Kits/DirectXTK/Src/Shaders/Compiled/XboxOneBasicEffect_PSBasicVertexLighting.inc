#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[58]
// Embedded Data:
//  0x0000003a - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000035 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_output o0.xyzw
dcl_temps 2
mad r0.xyz, v1.xyzx, v0.wwww, v0.xyzx
mad r1.xyz, cb0[13].xyzx, v0.wwww, -r0.xyzx
mad o0.xyz, v1.wwww, r1.xyzx, r0.xyzx
mov o0.w, v0.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[58], bundle is:[160] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneBasicEffect_PSBasicVertexLighting.pdb
// Shader Semantic Hash      : 0xeedcdbeedaa6f3ee
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 0, channelMask 15, param0, paramSlot0, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 1, channelMask 15, param1, paramSlot1, DefaultVal={0,0,0,0}

codeLenInByte        = 152 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 9;
NumSgprs             = 6;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x84, dwords=0x21)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, off, off, off done vm         // 000000000008: F8001801 00000003
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, off, off done vm          // 000000000008: F8001803 00000403
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v2, off, off done vm          // 000000000008: F8001803 00000203
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000000: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v2                       // 000000000004: 5E020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v3, v4                      // 000000000000: 5C000903
  v_cvt_pknorm_u16_f32  v1, v5, v2                      // 000000000004: 5C020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v3, v4                      // 000000000000: 5A000903
  v_cvt_pknorm_i16_f32  v1, v5, v2                      // 000000000004: 5A020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v3, v4                          // 000000000000: 60000903
  v_cvt_pk_u16_u32  v1, v5, v2                          // 000000000004: 60020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v3, v4                          // 000000000000: 62000903
  v_cvt_pk_i16_i32  v1, v5, v2                          // 000000000004: 62020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v3, v4, v5, v2 done vm            // 000000000008: F800180F 02050403
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b32     m0, s2                                  // 000000000000: BEFC0302
  s_load_dwordx4  s[0:3], s[0:1], 0x00                  // 000000000004: C0800100
  v_interp_p1_f32  v2, v0, attr0.w                      // 000000000008: C8080300
  v_interp_p2_f32  v2, v1, attr0.w                      // 00000000000C: C8090301
  v_interp_p1_f32  v3, v0, attr0.x                      // 000000000010: C80C0000
  v_interp_p2_f32  v3, v1, attr0.x                      // 000000000014: C80D0001
  v_interp_p1_f32  v4, v0, attr0.y                      // 000000000018: C8100100
  v_interp_p2_f32  v4, v1, attr0.y                      // 00000000001C: C8110101
  v_interp_p1_f32  v5, v0, attr0.z                      // 000000000020: C8140200
  v_interp_p2_f32  v5, v1, attr0.z                      // 000000000024: C8150201
  v_interp_p1_f32  v6, v0, attr1.x                      // 000000000028: C8180400
  v_interp_p2_f32  v6, v1, attr1.x                      // 00000000002C: C8190401
  v_interp_p1_f32  v7, v0, attr1.y                      // 000000000030: C81C0500
  v_interp_p2_f32  v7, v1, attr1.y                      // 000000000034: C81D0501
  v_interp_p1_f32  v8, v0, attr1.z                      // 000000000038: C8200600
  v_interp_p2_f32  v8, v1, attr1.z                      // 00000000003C: C8210601
  v_mac_f32     v3, v6, v2                              // 000000000040: 3E060506
  v_mac_f32     v4, v7, v2                              // 000000000044: 3E080507
  v_mac_f32     v5, v8, v2                              // 000000000048: 3E0A0508
  s_waitcnt     lgkmcnt(0)                              // 00000000004C: BF8C007F
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x34           // 000000000050: C2800134
  s_waitcnt     lgkmcnt(0)                              // 000000000054: BF8C007F
  v_mad_legacy_f32  v6, s0, v2, -v3                     // 000000000058: D2800006 840E0400
  v_mad_legacy_f32  v7, s1, v2, -v4                     // 000000000060: D2800007 84120401
  v_mad_legacy_f32  v8, s2, v2, -v5                     // 000000000068: D2800008 84160402
  v_interp_p1_f32  v0, v0, attr1.w                      // 000000000070: C8000700
  v_interp_p2_f32  v0, v1, attr1.w                      // 000000000074: C8010701
  v_mac_f32     v3, v0, v6                              // 000000000078: 3E060D00
  v_mac_f32     v4, v0, v7                              // 00000000007C: 3E080F00
  v_mac_f32     v5, v0, v8                              // 000000000080: 3E0A1100
  v_cvt_pkrtz_f16_f32  v0, v3, v4                       // 000000000084: 5E000903
  v_cvt_pkrtz_f16_f32  v1, v5, v2                       // 000000000088: 5E020505
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 00000000008C: F8001C0F 00000100
  s_endpgm                                              // 000000000094: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   9
//  NumSRegs:                   6
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   80
//  CycleSimNWaves:             80
//  Code Size:                  152
//Assembler Counts:
//  num_32bit_ops                     : 30
//  num_64bit_ops                     : 4
//  num_alu                           : 27
//  num_fc                            : 6
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 8
//  num_inst_vop3                     : 6
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 16
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 9
// m_uNumSRegs                       : 6
// m_uSCCodeSize                     : 152
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 80
// m_uCycleSimNWaves                 : 80

// Assembler Counts:
// num_32bit_ops                     : 30
// num_64bit_ops                     : 4
// num_alu                           : 27
// num_fc                            : 6
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 8
// num_inst_vop3                     : 6
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 16
// num_inst_smem                     : 2
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE BasicEffect_PSBasicVertexLighting[] =
{
     68,  88,  66,  67, 214,  96, 
    222,  22, 156,  33,  22,  29, 
     61, 133, 207, 183,  45, 242, 
    195, 107,   1,   0,   0,   0, 
    170,   4,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    124,   0,   0,   0, 176,   0, 
      0,   0,  40,   4,   0,   0, 
     56,   4,   0,   0,  73,  83, 
     71,  78,  64,   0,   0,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0,  56,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  56,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0,  67,  79,  76,  79, 
     82,   0, 171, 171,  79,  83, 
     71,  78,  44,   0,   0,   0, 
      1,   0,   0,   0,   8,   0, 
      0,   0,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,  83,  86,  95,  84, 
     97, 114, 103, 101, 116,   0, 
    171, 171,  83,  72,  69,  88, 
    112,   3,   0,   0,  80,   0, 
      0,   0, 220,   0,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0,  58,   0,   0,   0, 
     80,   0,   0,   0,  53,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     26,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  98,  16, 
      0,   3, 242,  16,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      0,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0, 246,  31,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  11, 114,   0, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,  13,   0,   0,   0, 
    246,  31,  16,   0,   0,   0, 
      0,   0,  70,   2,  16, 128, 
     65,   0,   0,   0,   0,   0, 
      0,   0,  50,   0,   0,   9, 
    114,  32,  16,   0,   0,   0, 
      0,   0, 246,  31,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    162,   0,   0,   0,  23,   0, 
      1,   0,  41, 191,  15,   0, 
    120,   1, 237, 151, 191, 107, 
     20,  65,  20, 199, 223, 236, 
    175, 219,  59, 239,  71, 162, 
     81,  18, 141, 154, 136, 133, 
    133,  17,  33,  22,  98, 177, 
     24,  19, 177, 136,  96, 240, 
    130,  28, 199,  18, 115,  63, 
     38, 201,  98, 146,  91, 110, 
    175,  72, 165,  39,  92, 169, 
     96,  97, 145,  63,  64, 172, 
    172,  45, 189,  96,  53, 160, 
    141,  98, 165,  41, 173, 175, 
    209, 194,  66, 208, 247, 246, 
    102, 116, 189,  36, 221, 130, 
    130, 251, 133, 207, 188, 251, 
    238, 252, 216, 119, 247, 230, 
     96, 166,  91, 128,  80, 229, 
    250, 229, 151,  20, 249, 145, 
    119, 143,  63,  96,  52,  17, 
     38,  35, 105,  59,  71,  45, 
     64,  41,  79,  45, 192,  57, 
    106, 104, 128,   6, 144, 198, 
     96,  33, 219, 200,  85, 132, 
    250,  20, 211, 211, 111, 102, 
      0, 118,  17,   0,   3, 201, 
     32,  11, 146,  83,   8,  61, 
     59, 129, 208, 124,  90, 110, 
     80,  58,  53, 168, 253, 250, 
    108, 132, 230, 145, 134,  16, 
     76,  37, 212, 158, 177, 156, 
    154, 253, 117,   6, 161, 252, 
     15,  18, 229, 166,  68, 235, 
    170, 247, 169, 248,  55,  53, 
    248,  61, 201, 171,  58, 145, 
    168,  30,  81,  81, 233, 212, 
    156, 139, 178, 142, 202, 207, 
     73, 175, 106, 185, 131,  28, 
    164,  31,  40, 170,  91,  84, 
    202,  83,  13,  44, 232, 111, 
     42, 139, 157, 238,  23, 233, 
     63,  83, 244, 183,  32, 104, 
    111, 202, 191,  89,  40, 213, 
     63,  73,  13, 180, 187, 196, 
    147,  81, 248,  70,  78, 121, 
    134, 190, 191, 247, 251,  94, 
     39,  31,  78, 140, 120,  92, 
     92,  79, 195, 146, 105, 106, 
     75, 133, 113, 156, 143, 197, 
     68, 239, 162, 119,  35, 190, 
    140, 190,  28, 241, 203, 232, 
    151,  35, 190, 138, 190, 170, 
    188,  90, 191,  16, 190, 207, 
    212, 168, 214, 248, 240, 254, 
    191,  76, 146,  99,  60,  36, 
     57, 198,  67, 146,  99,  60, 
     36,  57, 198,  67, 146,  99, 
     60,  36,  57, 198,  67, 146, 
     99, 108, 128, 166, 127, 127, 
      5, 172, 189,   3, 186,  45, 
    152, 158,  22,   0,  89, 193, 
     32,  39, 128,  13,   9, 198, 
    134,   5, 104,  35, 130, 105, 
     71,   5,  24, 163, 130,  25, 
     99,   2, 204, 113, 193, 204, 
    147,   2, 172,   9, 193, 172, 
     73,  97, 153, 150, 147,  50, 
    109, 199,  54,  51, 206,   3, 
    120, 212, 189, 196, 218, 175, 
     41,  90, 208, 126,  15,  70, 
    190, 147, 194, 200, 140, 195, 
     29,  27, 163, 102,  28, 235, 
     64,  10,   4,  75,  49,   1, 
     57, 203, 129, 130, 237, 192, 
    112, 198, 193,  51, 228,  31, 
    103,  80, 128, 135, 221,  49, 
    138, 116, 248, 141,  40, 180, 
     70,  56, 224, 151, 158, 202, 
    123, 135,  47, 227,  89, 132, 
    238,  32,  76, 222, 252, 142, 
     35,  70, 120,  35,   1, 232, 
    125, 121, 254, 177, 247, 105, 
    183,  71, 159,  73, 111, 229, 
    156,  23,  50,  78,  32,  89, 
    228, 183, 158,  81, 179,  71, 
     95, 229, 248, 207,  50, 210, 
    249, 156, 142, 214, 121, 117, 
    219, 149, 207,  71, 228, 161, 
     61,  43,  35,  93, 101,  14, 
     33, 131, 121, 156, 151, 253, 
    247,  16, 202, 116, 246, 138, 
    123, 155, 251, 141, 192,  45, 
     85,  27,  91,  83,  51, 139, 
     55, 166, 138, 149,  13, 127, 
    157,   7, 238, 188, 215,  10, 
    220,  57, 175, 201, 107, 173, 
    210, 226, 188,  27,  52, 107, 
    110, 113, 173,  82, 231, 205, 
    192, 157, 109, 108, 248, 222, 
     58, 175, 135, 147, 110, 109, 
    242, 107, 149, 192, 171,  93, 
     95,  89, 193, 161, 119,  23, 
    138, 161, 187, 195, 155,  45, 
    190, 117, 211,  91,  93, 107, 
    121, 155, 171,  23, 252, 122, 
     21, 126,   2,  49,   2, 241, 
     20,   0,  88,  72,  83,  72, 
      8,   0,   0,   0, 238, 243, 
    166, 218, 238, 219, 220, 238, 
     88,  80,  68,  80, 106,   0, 
      0,   0,  67,  58,  92,  82, 
    101, 112, 111, 115,  92,  88, 
     98, 111, 120,  45,  65,  84, 
     71,  45,  83,  97, 109, 112, 
    108, 101, 115,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  66, 
     97, 115, 105,  99,  69, 102, 
    102, 101,  99, 116,  95,  80, 
     83,  66,  97, 115, 105,  99, 
     86, 101, 114, 116, 101, 120, 
     76, 105, 103, 104, 116, 105, 
    110, 103,  46, 112, 100,  98
};
