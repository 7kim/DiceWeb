#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float       
// TEXCOORD                 2   xyz         4     NONE   float       
// TEXCOORD                 3   xyz         5     NONE   float       
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[45]
// Embedded Data:
//  0x0000002d - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000028 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 1
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
mul o0.xyzw, r0.xyzw, v1.xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[45], bundle is:[154] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLUnlit_mainTx.pdb
// Shader Semantic Hash      : 0x2104a8e3ba032c01
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 1, channelMask 15, param0, paramSlot1, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 2, channelMask  3, param1, paramSlot2, DefaultVal={0,0,0,0}

codeLenInByte        = 124 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 2;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER 0, offset 0x8:11 dwords
NumVgprs             = 9;
NumSgprs             = 20;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x68, dwords=0x1A)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, off, off, off done vm         // 000000000008: F8001801 00000001
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v2, off, off done vm          // 000000000008: F8001803 00000201
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v0, off, off done vm          // 000000000008: F8001803 00000001
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 000000000000: 5E020501
  v_cvt_pkrtz_f16_f32  v0, v3, v0                       // 000000000004: 5E000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v1, v2                      // 000000000000: 5C020501
  v_cvt_pknorm_u16_f32  v0, v3, v0                      // 000000000004: 5C000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v1, v2                      // 000000000000: 5A020501
  v_cvt_pknorm_i16_f32  v0, v3, v0                      // 000000000004: 5A000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v1, v2                          // 000000000000: 60020501
  v_cvt_pk_u16_u32  v0, v3, v0                          // 000000000004: 60000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v1, v2                          // 000000000000: 62020501
  v_cvt_pk_i16_i32  v0, v3, v0                          // 000000000004: 62000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v1, v2, v3, v0 done vm            // 000000000008: F800180F 00030201
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[16:17], exec                          // 000000000000: BE90047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx8  s[4:11], s[0:1], 0x00                 // 000000000008: C0C20100
  s_load_dwordx4  s[12:15], s[0:1], 0x08                // 00000000000C: C0860108
  s_mov_b32     m0, s2                                  // 000000000010: BEFC0302
  v_interp_p1_f32  v2, v0, attr1.x                      // 000000000014: C8080400
  v_interp_p1_f32  v3, v0, attr1.y                      // 000000000018: C80C0500
  v_interp_p2_f32  v2, v1, attr1.x                      // 00000000001C: C8090401
  v_interp_p2_f32  v3, v1, attr1.y                      // 000000000020: C80D0501
  s_waitcnt     lgkmcnt(0)                              // 000000000024: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[12:15] dmask:0xf // 000000000028: F0800F00 00610202
  v_interp_p1_f32  v6, v0, attr0.x                      // 000000000030: C8180000
  v_interp_p1_f32  v7, v0, attr0.y                      // 000000000034: C81C0100
  v_interp_p1_f32  v8, v0, attr0.z                      // 000000000038: C8200200
  v_interp_p1_f32  v0, v0, attr0.w                      // 00000000003C: C8000300
  v_interp_p2_f32  v6, v1, attr0.x                      // 000000000040: C8190001
  v_interp_p2_f32  v7, v1, attr0.y                      // 000000000044: C81D0101
  v_interp_p2_f32  v8, v1, attr0.z                      // 000000000048: C8210201
  v_interp_p2_f32  v0, v1, attr0.w                      // 00000000004C: C8010301
  s_waitcnt     vmcnt(0)                                // 000000000050: BF8C0F70
  v_mul_legacy_f32  v1, v2, v6                          // 000000000054: 0E020D02
  v_mul_legacy_f32  v2, v3, v7                          // 000000000058: 0E040F03
  v_mul_legacy_f32  v3, v4, v8                          // 00000000005C: 0E061104
  v_mul_legacy_f32  v0, v5, v0                          // 000000000060: 0E000105
  s_mov_b64     exec, s[16:17]                          // 000000000064: BEFE0410
  v_cvt_pkrtz_f16_f32  v1, v1, v2                       // 000000000068: 5E020501
  v_cvt_pkrtz_f16_f32  v0, v3, v0                       // 00000000006C: 5E000103
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000070: F8001C0F 00000001
  s_endpgm                                              // 000000000078: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   9
//  NumSRegs:                   20
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   79
//  CycleSimNWaves:             79
//  Code Size:                  124
//Assembler Counts:
//  num_32bit_ops                     : 27
//  num_64bit_ops                     : 2
//  num_alu                           : 18
//  num_fc                            : 9
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 1
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 4
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 0
//  num_inst_vop2                     : 6
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 12
//  constant_literal_operands         : 0
//  num_tex                           : 2
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 9
// m_uNumSRegs                       : 20
// m_uSCCodeSize                     : 124
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 79
// m_uCycleSimNWaves                 : 79

// Assembler Counts:
// num_32bit_ops                     : 27
// num_64bit_ops                     : 2
// num_alu                           : 18
// num_fc                            : 9
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 1
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 4
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 0
// num_inst_vop2                     : 6
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 12
// num_inst_smem                     : 2
// constant_literal_operands         : 0
// num_tex                           : 2
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLUnlit_mainTx[] =
{
     68,  88,  66,  67,  85, 225, 
    201, 253,  22, 118,  39,  28, 
    244,  84, 238, 243,  78, 123, 
    129, 190,   1,   0,   0,   0, 
    241,   4,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     32,   1,   0,   0,  84,   1, 
      0,   0, 128,   4,   0,   0, 
    144,   4,   0,   0,  73,  83, 
     71,  78, 228,   0,   0,   0, 
      8,   0,   0,   0,   8,   0, 
      0,   0, 200,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 212,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 218,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 218,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   7,   0, 
      0,   0, 218,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   7,   0, 
      0,   0, 218,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,   7,   0, 
      0,   0, 218,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      6,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   0,   0,   0,   7,   0, 
      0,   0,  83,  86,  95,  80, 
     79,  83,  73,  84,  73,  79, 
     78,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,  36,   3,   0,   0, 
     80,   0,   0,   0, 201,   0, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  45,   0, 
      0,   0,  80,   0,   0,   0, 
     40,   0,   0,   0, 106,   8, 
      0,   1,  90,   0,   0,   3, 
      0,  96,  16,   0,   0,   0, 
      0,   0,  88,  24,   0,   4, 
      0, 112,  16,   0,   0,   0, 
      0,   0,  85,  85,   0,   0, 
     98,  16,   0,   3, 242,  16, 
     16,   0,   1,   0,   0,   0, 
     98,  16,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    104,   0,   0,   2,   1,   0, 
      0,   0,  69,   0,   0, 139, 
    194,   0,   0, 128,  67,  85, 
     21,   0, 242,   0,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     70, 126,  16,   0,   0,   0, 
      0,   0,   0,  96,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   1,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0, 156,   0, 
      0,   0,  23,   0,   1,   0, 
     41, 154,  15,   0, 120,   1, 
    237,  87,  77, 107,  19,  81, 
     20, 189, 111, 102,  18, 210, 
    218, 204, 180, 218,  69, 170, 
     45, 180, 187, 130, 214,  31, 
    224, 202, 208,  64,  23,  21, 
     42,  38,  66, 137,  67, 109, 
    210,  12,  52, 144, 143,  49, 
    201, 162, 139,  18, 227, 198, 
     85,  23,  93, 214, 174,  92, 
    184,  16, 252,   3, 226,  34, 
      9, 174, 158, 160, 160, 255, 
     64, 240,  15, 184, 146,  46, 
    164, 122, 207, 228, 189,  58, 
    141, 118,  55, 160, 224,  28, 
     56, 247, 190,  51, 115, 223, 
    157,  59, 239, 205, 192, 187, 
    199,  14,   5, 200,  61, 250, 
    118,   9, 254, 221, 131,  87, 
    215, 159, 179,  79,  48, 133, 
    242, 192,  81,  26, 150, 232, 
    174,  13,  75, 180,  12, 131, 
      0, 131, 104, 130, 221,  44, 
    115, 159, 121, 155, 137, 123, 
    154,  31, 222,  15, 179, 199, 
    207,  62, 101, 121,  72,  72, 
     49, 201, 220,  80, 188, 198, 
    228, 233, 116, 153, 137,  28, 
     72,   7, 104,  15, 152,  48, 
     12,  11, 102,  12,  73,  24, 
    133,  41,  38, 114,   1, 240, 
    225,  28, 228, 193, 252,  25, 
     11,  76,  60, 251,  34, 160, 
     54, 157,  11,  94, 199, 226, 
    125, 255,  54,  70, 117, 133, 
    237, 175, 125,   2, 176,  31, 
     97,  96, 235, 116, 220, 172, 
    218,  71, 189, 102, 203,  74, 
    227, 253, 240, 110,  67, 230, 
     69, 248, 193, 192, 122, 135, 
    161,  53, 242,  37,   5, 127, 
     84,  41, 246, 198,  21, 162, 
    105, 190, 240, 159,  65, 127, 
    171,  88,  11,  16,  75, 160, 
    126, 179,   0, 250, 254,  85, 
     24, 234,  13, 192, 195,  12, 
    157,  64, 105,  45,  88, 143, 
    246, 106, 164,  77, 104,  36, 
     11, 107,  86,  34,  97, 108, 
    153, 130, 182, 156, 249,  51, 
    237, 178, 118,  67, 186, 200, 
    186,  24, 210, 219, 172, 183, 
     67, 186, 204, 186, 172, 181, 
    206, 239,   4, 207,  51, 131, 
    189, 230, 139, 221, 127, 153, 
    113, 141, 209,  48, 174,  49, 
     26, 198,  53,  70, 195, 184, 
    198, 104,  24, 215,  24,  13, 
    227,  26, 163,  97,  92,  99, 
    100, 164, 174, 117, 216, 239, 
     78, 158, 246,  73, 188,  29, 
    166, 196, 211, 161,  97, 126, 
    239, 147, 149, 146, 148, 152, 
    146, 194, 154, 144,  34, 145, 
    150, 143, 233,  96,  64,  78, 
    239, 171,  97, 148, 120,  70, 
     70, 146, 152, 151, 100,  44, 
     74, 110, 174, 164, 160,  57, 
     41, 196, 130,  20, 198, 146, 
     20, 166, 144, 190, 115,  48, 
     48, 210, 134, 109,  58, 150, 
    109, 205,  36, 237, 132,  32, 
    123, 218,  58, 237, 243,  57, 
    241, 220,  57, 147, 232, 201, 
     96,  14, 131, 224,  76,  58, 
    134, 212,  40,  66,  35,  80, 
    150,  64,  75, 112, 134, 158, 
    234,  55, 118, 149, 207,  48, 
    209, 123,  88, 170, 171,  19, 
     55, 204,  55,  95,  94,  90, 
     75,  24,   3, 175,  85, 220, 
    145, 242, 139, 204, 243,  61, 
    200,  11, 152, 223, 240,  89, 
    197, 127,  84,  30, 103, 113, 
    156, 191, 109, 221, 217, 170, 
    235, 250, 128, 126, 162,  52, 
    106,  69,  67,  60,  94,  71, 
     70, 197,  21, 153, 168, 116, 
    245, 150, 123, 207, 243, 155, 
    109, 119, 179, 220, 220,  91, 
    201,  22, 214,  86, 242, 165, 
    186,  95, 243, 218, 238, 122, 
    181, 211, 118, 115, 213, 150, 
    183, 211, 217,  44, 172, 187, 
    237, 214, 142, 155, 223,  45, 
     85, 188,  86, 219,  93, 109, 
    214, 253, 106, 205, 171,   4, 
    147,  54,  26,  94, 110,  45, 
    127, 231, 126, 163,  86, 237, 
     60, 172, 151, 170, 141, 194, 
    222,  77, 191,  82, 166, 159, 
    216,   1, 224,  80,   0,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0,   1,  44,   3, 186, 
    227, 168,   4,  33,  88,  80, 
     68,  80,  89,   0,   0,   0, 
     67,  58,  92,  82, 101, 112, 
    111, 115,  92,  88,  98, 111, 
    120,  45,  65,  84,  71,  45, 
     83,  97, 109, 112, 108, 101, 
    115,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68,  71,  83, 
     76,  85, 110, 108, 105, 116, 
     95, 109,  97, 105, 110,  84, 
    120,  46, 112, 100,  98
};
