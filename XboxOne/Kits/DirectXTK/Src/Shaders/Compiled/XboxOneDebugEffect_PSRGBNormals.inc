#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float       
// TEXCOORD                 1   xyzw        1     NONE   float       
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[59]
// Embedded Data:
//  0x0000003b - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x00000036 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.w
dcl_output o0.xyzw
dcl_temps 1
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, v3.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[59], bundle is:[142] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_PSRGBNormals.pdb
// Shader Semantic Hash      : 0x979801a2548e5e3a
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 2, channelMask  7, param0, paramSlot2, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 3, channelMask  8, param1, paramSlot3, DefaultVal={0,0,0,0}

codeLenInByte        = 108 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 0;
extUserElementCount  = 0;
NumVgprs             = 6;
NumSgprs             = 5;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000000

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000002
SPIC:NUM_INTERP             = 2
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000010
DB:Z_ORDER                  = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x58, dwords=0x16)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, off, off, off done vm         // 000000000008: F8001801 00000002
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, off, off done vm          // 000000000008: F8001803 00000302
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v0, off, off done vm          // 000000000008: F8001803 00000002
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 000000000000: 5E020702
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 000000000004: 5E000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v1, v2, v3                      // 000000000000: 5C020702
  v_cvt_pknorm_u16_f32  v0, v4, v0                      // 000000000004: 5C000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v1, v2, v3                      // 000000000000: 5A020702
  v_cvt_pknorm_i16_f32  v0, v4, v0                      // 000000000004: 5A000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v1, v2, v3                          // 000000000000: 60020702
  v_cvt_pk_u16_u32  v0, v4, v0                          // 000000000004: 60000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v1, v2, v3                          // 000000000000: 62020702
  v_cvt_pk_i16_i32  v0, v4, v0                          // 000000000004: 62000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000008: F8001C0F 00000001
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v2, v3, v4, v0 done vm            // 000000000008: F800180F 00040302
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b32     m0, s2                                  // 000000000000: BEFC0302
  v_interp_p1_f32  v2, v0, attr0.x                      // 000000000004: C8080000
  v_interp_p2_f32  v2, v1, attr0.x                      // 000000000008: C8090001
  v_interp_p1_f32  v3, v0, attr0.y                      // 00000000000C: C80C0100
  v_interp_p2_f32  v3, v1, attr0.y                      // 000000000010: C80D0101
  v_interp_p1_f32  v4, v0, attr0.z                      // 000000000014: C8100200
  v_interp_p2_f32  v4, v1, attr0.z                      // 000000000018: C8110201
  v_mul_legacy_f32  v5, v4, v4                          // 00000000001C: 0E0A0904
  v_mac_f32     v5, v3, v3                              // 000000000020: 3E0A0703
  v_mac_f32     v5, v2, v2                              // 000000000024: 3E0A0502
  v_rsq_f32     v5, v5                                  // 000000000028: 7E0A5D05
  v_mul_legacy_f32  v2, v2, v5                          // 00000000002C: 0E040B02
  v_mul_legacy_f32  v3, v3, v5                          // 000000000030: 0E060B03
  v_mul_legacy_f32  v4, v4, v5                          // 000000000034: 0E080B04
  v_mad_f32     v2, v2, 0.5, 0.5                        // 000000000038: D2820002 03C1E102
  v_mad_f32     v3, v3, 0.5, 0.5                        // 000000000040: D2820003 03C1E103
  v_mad_f32     v4, v4, 0.5, 0.5                        // 000000000048: D2820004 03C1E104
  v_interp_p1_f32  v0, v0, attr1.w                      // 000000000050: C8000700
  v_interp_p2_f32  v0, v1, attr1.w                      // 000000000054: C8010701
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 000000000058: 5E020702
  v_cvt_pkrtz_f16_f32  v0, v4, v0                       // 00000000005C: 5E000104
  exp           mrt0, v1, v1, v0, v0 done compr vm      // 000000000060: F8001C0F 00000001
  s_endpgm                                              // 000000000068: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   6
//  NumSRegs:                   5
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  108
//Assembler Counts:
//  num_32bit_ops                     : 19
//  num_64bit_ops                     : 4
//  num_alu                           : 20
//  num_fc                            : 2
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 1
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 1
//  num_inst_vop2                     : 8
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 8
//  constant_literal_operands         : 0
//  num_tex                           : 1
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 6
// m_uNumSRegs                       : 5
// m_uSCCodeSize                     : 108
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 19
// num_64bit_ops                     : 4
// num_alu                           : 20
// num_fc                            : 2
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 1
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 1
// num_inst_vop2                     : 8
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 8
// num_inst_smem                     : 0
// constant_literal_operands         : 0
// num_tex                           : 1
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 0
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DebugEffect_PSRGBNormals[] =
{
     68,  88,  66,  67,  58, 232, 
    158, 149, 220, 195,   6, 218, 
     53,  27, 159, 231, 217, 140, 
     52, 192,   1,   0,   0,   0, 
    149,   4,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    180,   0,   0,   0, 232,   0, 
      0,   0,  28,   4,   0,   0, 
     44,   4,   0,   0,  73,  83, 
     71,  78, 120,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0, 104,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,   0, 
      0,   0, 104,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   7,   7, 
      0,   0, 113,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,   8, 
      0,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0,  67, 
     79,  76,  79,  82,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88,  44,   3,   0,   0, 
     80,   0,   0,   0, 203,   0, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  59,   0, 
      0,   0,  80,   0,   0,   0, 
     54,   0,   0,   0, 106,   8, 
      0,   1,  98,  16,   0,   3, 
    114,  16,  16,   0,   2,   0, 
      0,   0,  98,  16,   0,   3, 
    130,  16,  16,   0,   3,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  68,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      0,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  15, 
    114,  32,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0,   0,  63, 
      0,   0,   0,  63,   0,   0, 
      0,  63,   0,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  63,   0,   0,   0,  63, 
      0,   0,   0,  63,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      3,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    144,   0,   0,   0,  23,   0, 
      1,   0,  41,  86,  15,   0, 
    120,   1, 237,  87, 191, 107, 
     20,  65,  24, 253, 102, 118, 
    238,  54, 119, 151, 236,  37, 
     40, 122,  69,  10, 203,  52, 
    177,  18, 132,  20, 193,  51, 
    145,  20,  17, 149, 236,  33, 
     33, 108, 206, 220, 230,  54, 
    122, 176, 231,  29, 183,  17, 
     82,   5,  21, 235, 144,  66, 
     48, 181,  88,  90,  10,  90, 
     25, 237, 182,  56,  27,  43, 
     91, 255,  10, 175,  16, 244, 
    123, 203,  12, 174, 151, 196, 
    106,  65, 193, 125, 240, 230, 
    237, 219, 249, 102, 246, 155, 
     31,  11,  51, 119, 171, 148, 
    224, 237, 183,  97,  27,  90, 
    187,  90, 114, 191, 176,  22, 
    152,  66,  43, 112,  52, 133, 
    146,  72,  57,  40, 137, 230, 
     80,  32,  64,  18,  21,  89, 
     16,  23,  50, 175,  49,  81, 
    103, 200,  45, 235, 159, 134, 
    239, 234,  28,  70,  22,  19, 
    177, 174, 230,  57, 166,  98, 
    158, 103, 162,  30, 221, 141, 
    195, 188,  27, 175, 131, 159, 
     96,  26, 164, 159, 199,  99, 
     41,  25, 217, 233, 184, 200, 
     68,  78, 103,   1, 185,  25, 
    160,  95, 228,   9, 152, 121, 
    249, 155,  56,  49,  78, 134, 
     89,  39,   0, 235, 145, 134, 
     94, 186,  63,   2, 115, 129, 
    177, 125,  96, 158, 133,  31, 
     12, 232, 105, 192, 252,  20, 
    165,  77,  52, 205, 106, 213, 
    120,  67, 241, 139, 255,  12, 
    216, 211,   0, 230,   2, 228, 
    169,  32, 253, 155,  37,  48, 
    245,  23,  80, 208, 227,  99, 
    240, 176,  70,  35,  56, 227, 
      5, 123, 180,  53, 158, 167, 
    114,  36, 241,   3, 165,  61, 
     59, 105, 203, 166,  18, 212, 
    172, 206, 210,  40, 217, 159, 
    182, 244, 216, 123,  41, 191, 
    193, 126,  35, 229, 183, 216, 
    111, 165, 188, 207, 222,  55, 
    222, 244,  95,  77, 190, 167, 
    204,  90, 239, 255, 203, 204, 
    115, 204, 134, 121, 142, 217, 
     48, 207,  49,  27, 230,  57, 
    102, 195,  60, 199, 108, 152, 
    231, 152,  13, 243,  28,  51, 
     35,  73, 235, 251, 123, 190, 
    253, 196, 130,  74,  49, 137, 
    201,  88, 136, 169, 152, 228, 
    116,  44, 228,  76, 172,  74, 
    101, 199, 178, 203, 139, 178, 
     80,  94,  44, 108, 150, 247, 
    101,  69,  57,  86, 165, 232, 
    168, 202, 132,  35, 233, 233, 
    103, 249, 245, 163, 101, 177, 
     90, 172, 138,  85, 177, 146, 
     77, 177, 176,  69, 204, 231, 
    194, 223, 206, 149,  68,  79, 
    142, 175, 232,  11, 196, 172, 
     86,  28, 237,  75,  76, 165, 
    111,  80,  11, 205, 131, 198, 
     75, 113, 244,   2, 207,  64, 
    168, 227, 110, 106, 189, 196, 
    156, 100, 254, 194,  43,  20, 
     39, 240,  92, 199,  63, 211, 
    138, 243,  51, 206, 204, 142, 
    185, 117, 233, 247, 111, 180, 
    190, 214, 138,  59,  96, 133, 
     57, 158, 199,  80, 215, 251, 
     76, 100, 186, 180, 224, 173, 
      5, 253,  94, 228, 173, 251, 
    189, 189, 249, 122,  99, 101, 
    222, 109, 117, 251,  97,  16, 
    121, 171, 157, 221, 200,  91, 
    238,  12, 130, 237, 221, 245, 
    198, 170,  23,  13, 182,  61, 
    247,  65, 171,  29,  12,  34, 
    111, 169, 215, 237, 119, 194, 
    160, 157,  52, 186, 253,  48, 
     88,  14, 252,  71, 247, 111, 
    236, 236, 112, 232, 189,  59, 
    238, 218, 202, 245,  91, 189, 
     65, 183,  21,  70, 151, 251, 
    109, 159, 126,   2, 153,  63, 
    217, 182,  88,  72,  83,  72, 
      8,   0,   0,   0,  58,  94, 
    142,  84, 162,   1, 152, 151, 
     88,  80,  68,  80,  97,   0, 
      0,   0,  67,  58,  92,  82, 
    101, 112, 111, 115,  92,  88, 
     98, 111, 120,  45,  65,  84, 
     71,  45,  83,  97, 109, 112, 
    108, 101, 115,  92,  75, 105, 
    116, 115,  92,  68, 105, 114, 
    101,  99, 116,  88,  84,  75, 
     92, 115, 114,  99,  92,  83, 
    104,  97, 100, 101, 114, 115, 
     92,  67, 111, 109, 112, 105, 
    108, 101, 100,  92,  88,  98, 
    111, 120,  79, 110, 101,  68, 
    101,  98, 117, 103,  69, 102, 
    102, 101,  99, 116,  95,  80, 
     83,  82,  71,  66,  78, 111, 
    114, 109,  97, 108, 115,  46, 
    112, 100,  98
};
