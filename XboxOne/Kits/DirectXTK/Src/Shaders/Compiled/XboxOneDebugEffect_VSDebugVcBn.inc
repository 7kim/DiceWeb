#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[185]
// Embedded Data:
//  0x000000b9 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000b4 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[13], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 2
mov o0.xy, v2.xyxx
dp4 r0.x, v0.xyzw, cb0[2].xyzw
dp4 r0.y, v0.xyzw, cb0[3].xyzw
dp4 r0.z, v0.xyzw, cb0[4].xyzw
mov r0.w, l(1.000000)
mov o1.xyzw, r0.xyzw
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r0.xyzx, cb0[6].xyzx
dp3 r1.y, r0.xyzx, cb0[7].xyzx
dp3 r1.z, r0.xyzx, cb0[8].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul o2.xyz, r0.xxxx, r1.xyzx
mul o3.w, v3.w, cb0[0].w
mov o3.xyz, v3.xyzx
dp4 o4.x, v0.xyzw, cb0[9].xyzw
dp4 o4.y, v0.xyzw, cb0[10].xyzw
dp4 o4.z, v0.xyzw, cb0[11].xyzw
dp4 o4.w, v0.xyzw, cb0[12].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[185], bundle is:[194] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugVcBn.pdb
// Shader Semantic Hash      : 0x4a8def06b7513fc1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 308 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x20           // 00000000000C: C2820120
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x1c          // 000000000010: C284011C
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x18         // 000000000014: C2860118
  s_buffer_load_dwordx8  s[16:23], s[0:3], 0x08         // 000000000018: C2C80108
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x10         // 00000000001C: C28C0110
  s_buffer_load_dwordx16  s[28:43], s[0:3], 0x24        // 000000000020: C30E0124
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_f32     v0, v10, 2.0, -1.0                      // 000000000028: D2820000 03CDE90A
  v_mad_f32     v1, v9, 2.0, -1.0                       // 000000000030: D2820001 03CDE909
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  v_mul_legacy_f32  v2, s6, v0                          // 00000000003C: 0E040006
  v_mad_f32     v3, v8, 2.0, -1.0                       // 000000000040: D2820003 03CDE908
  v_mul_legacy_f32  v8, s10, v0                         // 000000000048: 0E10000A
  v_mac_f32     v2, s5, v1                              // 00000000004C: 3E040205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000050: C2000103
  v_mul_legacy_f32  v0, s14, v0                         // 000000000054: 0E00000E
  v_mac_f32     v8, s9, v1                              // 000000000058: 3E100209
  v_mac_f32     v2, s4, v3                              // 00000000005C: 3E040604
  v_mac_f32     v0, s13, v1                             // 000000000060: 3E00020D
  v_mac_f32     v8, s8, v3                              // 000000000064: 3E100608
  v_mul_legacy_f32  v1, v2, v2                          // 000000000068: 0E020502
  v_mul_legacy_f32  v9, s19, v7                         // 00000000006C: 0E120E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000070: 0E140E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000074: 0E160E1B
  v_mac_f32     v0, s12, v3                             // 000000000078: 3E00060C
  v_mac_f32     v1, v8, v8                              // 00000000007C: 3E021108
  v_mul_legacy_f32  v3, s31, v7                         // 000000000080: 0E060E1F
  v_mul_legacy_f32  v14, s35, v7                        // 000000000084: 0E1C0E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000088: 0E1E0E27
  v_mul_legacy_f32  v7, s43, v7                         // 00000000008C: 0E0E0E2B
  v_mac_f32     v9, s18, v6                             // 000000000090: 3E120C12
  v_mac_f32     v10, s22, v6                            // 000000000094: 3E140C16
  v_mac_f32     v11, s26, v6                            // 000000000098: 3E160C1A
  v_mac_f32     v1, v0, v0                              // 00000000009C: 3E020100
  v_mac_legacy_f32  v3, s30, v6                         // 0000000000A0: 0C060C1E
  v_mac_legacy_f32  v14, s34, v6                        // 0000000000A4: 0C1C0C22
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000A8: 0C1E0C26
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000AC: 0C0E0C2A
  v_mac_f32     v9, s17, v5                             // 0000000000B0: 3E120A11
  v_mac_f32     v10, s21, v5                            // 0000000000B4: 3E140A15
  v_mac_f32     v11, s25, v5                            // 0000000000B8: 3E160A19
  v_rsq_f32     v1, v1                                  // 0000000000BC: 7E025D01
  v_mac_legacy_f32  v3, s29, v5                         // 0000000000C0: 0C060A1D
  v_mac_legacy_f32  v14, s33, v5                        // 0000000000C4: 0C1C0A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000C8: 0C1E0A25
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000CC: 0C0E0A29
  v_mac_f32     v9, s16, v4                             // 0000000000D0: 3E120810
  v_mac_f32     v10, s20, v4                            // 0000000000D4: 3E140814
  v_mac_f32     v11, s24, v4                            // 0000000000D8: 3E160818
  v_mul_legacy_f32  v0, v0, v1                          // 0000000000DC: 0E000300
  v_mul_legacy_f32  v5, v8, v1                          // 0000000000E0: 0E0A0308
  v_mul_legacy_f32  v1, v2, v1                          // 0000000000E4: 0E020302
  s_waitcnt     lgkmcnt(0)                              // 0000000000E8: BF8C007F
  v_mul_legacy_f32  v2, s0, v19                         // 0000000000EC: 0E042600
  v_mac_legacy_f32  v3, s28, v4                         // 0000000000F0: 0C06081C
  v_mac_legacy_f32  v14, s32, v4                        // 0000000000F4: 0C1C0820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000F8: 0C1E0824
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000FC: 0C0E0828
  v_mov_b32     v4, 0                                   // 000000000100: 7E080280
  v_mov_b32     v6, 1.0                                 // 000000000104: 7E0C02F2
  exp           pos0, v3, v14, v15, v7 done             // 000000000108: F80008CF 070F0E03
  exp           param0, v12, v13, v4, v6                // 000000000110: F800020F 06040D0C
  exp           param1, v9, v10, v11, v6                // 000000000118: F800021F 060B0A09
  exp           param2, v0, v5, v1, v6                  // 000000000120: F800022F 06010500
  exp           param3, v16, v17, v18, v2               // 000000000128: F800023F 02121110
  s_endpgm                                              // 000000000130: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   86
//  CycleSimNWaves:             86
//  Code Size:                  308
//Assembler Counts:
//  num_32bit_ops                     : 61
//  num_64bit_ops                     : 8
//  num_alu                           : 50
//  num_fc                            : 14
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 308
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 86
// m_uCycleSimNWaves                 : 86

// Assembler Counts:
// num_32bit_ops                     : 61
// num_64bit_ops                     : 8
// num_alu                           : 50
// num_fc                            : 14
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[381], bundle is:[210] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugVcBn.pdb
// Shader Semantic Hash      : 0x4a8def06b7513fc1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 404 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 20;
NumSgprs             = 54;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x24       // 00000000000C: C3060924
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx8  s[28:35], s[8:11], 0x08        // 000000000018: C2CE0908
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x20        // 00000000001C: C2920920
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[40:43], s[8:11], 0x1c        // 00000000002C: C294091C
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x10        // 00000000003C: C2960910
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x18        // 000000000040: C2980918
  v_mac_legacy_f32  v0, s12, v4                         // 000000000044: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000048: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 00000000004C: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 000000000050: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000054: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000058: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 00000000005C: 0C060C1A
  v_mad_legacy_f32  v10, v10, 2.0, -1.0                 // 000000000060: D280000A 03CDE90A
  v_mac_legacy_f32  v2, s20, v4                         // 000000000068: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 00000000006C: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000070: BF8C007F
  v_mul_legacy_f32  v11, s31, v7                        // 000000000074: 0E160E1F
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 000000000078: D2800009 03CDE909
  v_mul_legacy_f32  v14, s38, v10                       // 000000000080: 0E1C1426
  v_mac_legacy_f32  v3, s24, v4                         // 000000000084: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000088: E0704040 04400000
  v_mac_legacy_f32  v11, s30, v6                        // 000000000090: 0C160C1E
  v_mul_legacy_f32  v0, s35, v7                         // 000000000094: 0E000E23
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000098: D2800008 03CDE908
  v_mul_legacy_f32  v15, s42, v10                       // 0000000000A0: 0E1E142A
  v_mac_legacy_f32  v14, s37, v9                        // 0000000000A4: 0C1C1225
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 0000000000A8: E0704044 04400100
  v_mac_legacy_f32  v11, s29, v5                        // 0000000000B0: 0C160A1D
  v_mac_legacy_f32  v0, s34, v6                         // 0000000000B4: 0C000C22
  v_mul_legacy_f32  v1, s47, v7                         // 0000000000B8: 0E020E2F
  v_mul_legacy_f32  v7, s50, v10                        // 0000000000BC: 0E0E1432
  v_mac_legacy_f32  v15, s41, v9                        // 0000000000C0: 0C1E1229
  v_mac_legacy_f32  v14, s36, v8                        // 0000000000C4: 0C1C1024
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000C8: E0704048 04400200
  v_mac_legacy_f32  v11, s28, v4                        // 0000000000D0: 0C16081C
  v_mac_legacy_f32  v0, s33, v5                         // 0000000000D4: 0C000A21
  v_mac_legacy_f32  v1, s46, v6                         // 0000000000D8: 0C020C2E
  v_mac_legacy_f32  v7, s49, v9                         // 0000000000DC: 0C0E1231
  v_mac_legacy_f32  v15, s40, v8                        // 0000000000E0: 0C1E1028
  v_mul_legacy_f32  v2, v14, v14                        // 0000000000E4: 0E041D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000E8: E070404C 04400300
  v_mac_legacy_f32  v0, s32, v4                         // 0000000000F0: 0C000820
  v_mac_legacy_f32  v1, s45, v5                         // 0000000000F4: 0C020A2D
  v_mac_legacy_f32  v7, s48, v8                         // 0000000000F8: 0C0E1030
  v_mac_legacy_f32  v2, v15, v15                        // 0000000000FC: 0C041F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 000000000100: E0704000 04400C00
  v_mac_legacy_f32  v1, s44, v4                         // 000000000108: 0C02082C
  v_mac_legacy_f32  v2, v7, v7                          // 00000000010C: 0C040F07
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000110: E0704004 04400D00
  v_rsq_f32     v2, v2                                  // 000000000118: 7E045D02
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 00000000011C: E0704010 04400B00
  v_mov_b32     v3, 1.0                                 // 000000000124: 7E0602F2
  v_mul_legacy_f32  v4, v7, v2                          // 000000000128: 0E080507
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 00000000012C: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000134: C2028903
  v_mul_legacy_f32  v0, v15, v2                         // 000000000138: 0E00050F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 00000000013C: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v2                         // 000000000144: 0E02050E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 000000000148: E070401C 04400300
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000150: E0704020 04400400
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000158: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000160: E0704028 04400100
  s_waitcnt     lgkmcnt(0)                              // 000000000168: BF8C007F
  v_mul_legacy_f32  v0, s5, v19                         // 00000000016C: 0E002605
  buffer_store_dword  v16, v0, s[0:3], s4 offset:48 glc slc // 000000000170: E0704030 04401000
  buffer_store_dword  v17, v0, s[0:3], s4 offset:52 glc slc // 000000000178: E0704034 04401100
  buffer_store_dword  v18, v0, s[0:3], s4 offset:56 glc slc // 000000000180: E0704038 04401200
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 000000000188: E070403C 04400000
  s_endpgm                                              // 000000000190: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   20
//  NumSRegs:                   54
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   86
//  CycleSimNWaves:             86
//  Code Size:                  404
//Assembler Counts:
//  num_32bit_ops                     : 61
//  num_64bit_ops                     : 20
//  num_alu                           : 49
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 11
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 20
// m_uNumSRegs                       : 54
// m_uSCCodeSize                     : 404
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 86
// m_uCycleSimNWaves                 : 86

// Assembler Counts:
// num_32bit_ops                     : 61
// num_64bit_ops                     : 20
// num_alu                           : 49
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 2
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 9
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 11
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[593], bundle is:[204] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugVcBn.pdb
// Shader Semantic Hash      : 0x4a8def06b7513fc1
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
;   [3] generic, usageIdx  3, channelMask 15, v[16:19]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 356 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 22;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x24         // 00000000000C: C3020124
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x20         // 000000000010: C28A0120
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x1c         // 000000000014: C28C011C
  s_buffer_load_dwordx8  s[28:35], s[0:3], 0x08         // 000000000018: C2CE0108
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x18         // 00000000001C: C2920118
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x10         // 000000000020: C2940110
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_legacy_f32  v0, v10, 2.0, -1.0                  // 000000000028: D2800000 03CDE90A
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_mul_legacy_f32  v2, s7, v7                          // 000000000034: 0E040E07
  v_mul_legacy_f32  v3, s11, v7                         // 000000000038: 0E060E0B
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 00000000003C: D2800009 03CDE909
  v_mul_legacy_f32  v10, s22, v0                        // 000000000044: 0E140016
  v_mac_legacy_f32  v2, s6, v6                          // 000000000048: 0C040C06
  v_mac_legacy_f32  v3, s10, v6                         // 00000000004C: 0C060C0A
  v_mul_legacy_f32  v11, s15, v7                        // 000000000050: 0E160E0F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000054: 0E1C0E13
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000058: D2800008 03CDE908
  v_mul_legacy_f32  v15, s26, v0                        // 000000000060: 0E1E001A
  v_mac_legacy_f32  v10, s21, v9                        // 000000000064: 0C141215
  v_mac_legacy_f32  v2, s5, v5                          // 000000000068: 0C040A05
  v_mac_legacy_f32  v3, s9, v5                          // 00000000006C: 0C060A09
  v_mac_legacy_f32  v11, s14, v6                        // 000000000070: 0C160C0E
  v_mac_legacy_f32  v14, s18, v6                        // 000000000074: 0C1C0C12
  s_movk_i32    s5, 0x0050                              // 000000000078: B0050050
  s_mov_b32     m0, 0x00010000                          // 00000000007C: BEFC03FF 00010000
  v_mul_legacy_f32  v20, s31, v7                        // 000000000084: 0E280E1F
  v_mul_legacy_f32  v21, s35, v7                        // 000000000088: 0E2A0E23
  v_mul_legacy_f32  v0, s38, v0                         // 00000000008C: 0E000026
  v_mac_legacy_f32  v15, s25, v9                        // 000000000090: 0C1E1219
  v_mac_legacy_f32  v10, s20, v8                        // 000000000094: 0C141014
  v_mac_legacy_f32  v2, s4, v4                          // 000000000098: 0C040804
  v_mac_legacy_f32  v3, s8, v4                          // 00000000009C: 0C060808
  v_mac_legacy_f32  v11, s13, v5                        // 0000000000A0: 0C160A0D
  v_mac_legacy_f32  v14, s17, v5                        // 0000000000A4: 0C1C0A11
  v_mul_lo_i32  v1, v1, s5                              // 0000000000A8: D2D60001 00000B01
  v_mac_legacy_f32  v20, s30, v6                        // 0000000000B0: 0C280C1E
  v_mac_legacy_f32  v21, s34, v6                        // 0000000000B4: 0C2A0C22
  v_mul_legacy_f32  v7, s43, v7                         // 0000000000B8: 0E0E0E2B
  v_mac_legacy_f32  v0, s37, v9                         // 0000000000BC: 0C001225
  v_mac_legacy_f32  v15, s24, v8                        // 0000000000C0: 0C1E1018
  v_mul_legacy_f32  v9, v10, v10                        // 0000000000C4: 0E12150A
  v_mac_legacy_f32  v11, s12, v4                        // 0000000000C8: 0C16080C
  v_mac_legacy_f32  v14, s16, v4                        // 0000000000CC: 0C1C0810
  ds_write2_b32  v1, v2, v3 offset0:16 offset1:17       // 0000000000D0: D8381110 00030201
  v_mac_legacy_f32  v20, s29, v5                        // 0000000000D8: 0C280A1D
  v_mac_legacy_f32  v21, s33, v5                        // 0000000000DC: 0C2A0A21
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000E0: 0C0E0C2A
  v_mac_legacy_f32  v0, s36, v8                         // 0000000000E4: 0C001024
  v_mac_legacy_f32  v9, v15, v15                        // 0000000000E8: 0C121F0F
  ds_write2_b32  v1, v11, v14 offset0:18 offset1:19     // 0000000000EC: D8381312 000E0B01
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 0000000000F4: C2000103
  v_mac_legacy_f32  v20, s28, v4                        // 0000000000F8: 0C28081C
  v_mac_legacy_f32  v21, s32, v4                        // 0000000000FC: 0C2A0820
  v_mac_legacy_f32  v7, s41, v5                         // 000000000100: 0C0E0A29
  v_mac_legacy_f32  v9, v0, v0                          // 000000000104: 0C120100
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000108: D8380100 000D0C01
  v_mac_legacy_f32  v7, s40, v4                         // 000000000110: 0C0E0828
  v_rsq_f32     v2, v9                                  // 000000000114: 7E045D09
  ds_write2_b32  v1, v20, v21 offset0:4 offset1:5       // 000000000118: D8380504 00151401
  v_mov_b32     v3, 1.0                                 // 000000000120: 7E0602F2
  v_mul_legacy_f32  v0, v0, v2                          // 000000000124: 0E000500
  v_mul_legacy_f32  v4, v15, v2                         // 000000000128: 0E08050F
  ds_write2_b32  v1, v7, v3 offset0:6 offset1:7         // 00000000012C: D8380706 00030701
  v_mul_legacy_f32  v2, v10, v2                         // 000000000134: 0E04050A
  ds_write2_b32  v1, v0, v4 offset0:8 offset1:9         // 000000000138: D8380908 00040001
  ds_write_b32  v1, v2 offset:40                        // 000000000140: D8340028 00000201
  s_waitcnt     lgkmcnt(0)                              // 000000000148: BF8C007F
  v_mul_legacy_f32  v0, s0, v19                         // 00000000014C: 0E002600
  ds_write2_b32  v1, v16, v17 offset0:12 offset1:13     // 000000000150: D8380D0C 00111001
  ds_write2_b32  v1, v18, v0 offset0:14 offset1:15      // 000000000158: D8380F0E 00001201
  s_endpgm                                              // 000000000160: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   22
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   93
//  CycleSimNWaves:             93
//  Code Size:                  356
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 13
//  num_alu                           : 50
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 2
//  num_inst_vop2                     : 44
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 22
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 356
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 93
// m_uCycleSimNWaves                 : 93

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 13
// num_alu                           : 50
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 2
// num_inst_vop2                     : 44
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DebugEffect_VSDebugVcBn[] =
{
     68,  88,  66,  67, 243, 147, 
    248, 217,  39, 247,  94,  37, 
     99, 150, 102, 124, 230, 159, 
    225, 152,   1,   0,   0,   0, 
    104,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    200,   0,   0,   0, 108,   1, 
      0,   0, 240,  13,   0,   0, 
      0,  14,   0,   0,  73,  83, 
     71,  78, 140,   0,   0,   0, 
      4,   0,   0,   0,   8,   0, 
      0,   0, 104,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0, 116,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0, 123,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 132,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,  15,  15, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     67,  79,  76,  79,  82,   0, 
    171, 171,  79,  83,  71,  78, 
    156,   0,   0,   0,   5,   0, 
      0,   0,   8,   0,   0,   0, 
    128,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,  12,   0,   0, 
    128,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    128,   0,   0,   0,   2,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   7,   8,   0,   0, 
    137,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
    143,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   4,   0, 
      0,   0,  15,   0,   0,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  67,  79,  76, 
     79,  82,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 124,  12,   0,   0, 
     80,   0,   1,   0,  31,   3, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 185,   0, 
      0,   0,  80,   0,   1,   0, 
    180,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  13,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3, 114,  16, 
     16,   0,   1,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   2,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   3,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 114,  32, 
     16,   0,   2,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   3,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   4,   0,   0,   0, 
      1,   0,   0,   0, 104,   0, 
      0,   2,   2,   0,   0,   0, 
     54,   0,   0,   5,  50,  32, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,  17,   0, 
      0,   8,  34,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     17,   0,   0,   8,  66,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   4,   0, 
      0,   0,  54,   0,   0,   5, 
    130,   0,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  54,   0, 
      0,   5, 242,  32,  16,   0, 
      1,   0,   0,   0,  70,  14, 
     16,   0,   0,   0,   0,   0, 
     50,   0,   0,  15, 114,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,  64,   0,   0, 
      0,  64,   0,   0,   0,  64, 
      0,   0,   0,   0,   2,  64, 
      0,   0,   0,   0, 128, 191, 
      0,   0, 128, 191,   0,   0, 
    128, 191,   0,   0,   0,   0, 
     16,   0,   0,   8,  18,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   6,   0, 
      0,   0,  16,   0,   0,   8, 
     34,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      7,   0,   0,   0,  16,   0, 
      0,   8,  66,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
     16,   0,   0,   7,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  68,   0, 
      0,   5,  18,   0,  16,   0, 
      0,   0,   0,   0,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 114,  32, 
     16,   0,   2,   0,   0,   0, 
      6,   0,  16,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   8, 130,  32,  16,   0, 
      3,   0,   0,   0,  58,  16, 
     16,   0,   3,   0,   0,   0, 
     58, 128,  32,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 114,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  18,  16,   0,   3,   0, 
      0,   0,  17,   0,   0,   8, 
     18,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      9,   0,   0,   0,  17,   0, 
      0,   8,  34,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  10,   0,   0,   0, 
     17,   0,   0,   8,  66,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  11,   0, 
      0,   0,  17,   0,   0,   8, 
    130,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     12,   0,   0,   0,  62,   0, 
      0,   1,  53,  16,   0,   0, 
    196,   0,   0,   0,  23,   0, 
      1,   0,  32,  81,  23,   0, 
    120,   1, 237, 152,  59,  76, 
     20,  65,  24, 199, 103, 103, 
    247, 134, 189, 101, 110, 110, 
     57, 142, 227, 117,  28, 135, 
     34, 226,   3,  68,  99, 101, 
    226, 162,  60, 162, 145, 130, 
     32, 132,  80, 156,  49,  60, 
     14,  33, 225, 113, 114, 104, 
    172, 240,  36,  70,  27,  76, 
    108, 181, 182,  48, 177, 177, 
     48, 177,  19,  60,  26,  10, 
    141, 198, 202, 202, 216,  90, 
    153,  24,  11,  58, 253, 127, 
    199, 174,  94,   0, 107, 141, 
    153,  95, 238,  55, 223, 204, 
    236, 204, 238, 183,  51, 123, 
    205,  12, 213, 178,  18, 159, 
     26, 183,  90,  40, 126, 108, 
    127, 246, 226,  61, 103,  44, 
     68,  13,  96,  81,   1, 114, 
    113,  42,  25, 251,  94,  67, 
     37,  99, 237,  84,  24,  16, 
     99, 233,  82,  39,  60, 141, 
    246,  57,  68, 186,  22, 248, 
    248, 209, 245, 158, 183, 111, 
    110, 246,  12, 161, 126,  28, 
    210, 244,  81, 223, 179, 208, 
    134, 167, 160, 130, 193,  51, 
    203,   9, 250, 232,  81, 229, 
    152, 144, 238,  87,  14, 221, 
    139, 216, 115, 159, 113,  42, 
    246, 167,  31, 250, 175, 182, 
     47, 148,  91,   0, 221, 151, 
    242,  36, 232, 125, 255,  53, 
    104, 141, 130, 125,  34, 104, 
     63, 202, 161, 220, 105, 221, 
    136,  39, 254,  62,   6,  67, 
     62, 251, 109, 154,  78, 239, 
    182,   1, 255, 196,  15,  16, 
    124,  23,   1,  65, 155, 162, 
     96, 131,  93, 194, 184, 159, 
     22, 124, 211,  21, 102, 244, 
    164,  64, 167, 192, 226,   9, 
      1,  43,  32,  54,  74, 132, 
    161,   3,  43, 161, 132,  17, 
    136,   4,  69,  20, 186, 176, 
     10, 198,  96,  53,  68,  82, 
      2, 249, 137,   4, 196, 247, 
     42, 234,  96,  61, 108, 128, 
    141,  48,   9, 155,  96,  10, 
     54,   7,  57, 236,  32, 140, 
    157,  55,  20,  28,  31,  42, 
     16, 102, 176,   2, 255,  55, 
    180,   6, 193, 255, 129, 214, 
    130, 218,   1, 229, 117, 141, 
     70, 163, 209, 104,  52,  26, 
    141,  70, 163, 209, 104,  52, 
    154, 191,   5, 111,  89, 125, 
    197, 204, 194, 198, 109, 182, 
    182, 158,  54,  86, 139,  73, 
    227, 110, 177, 206, 184,  87, 
    180, 141, 173, 162, 107, 172, 
     21,  91,  13, 181, 153, 139, 
    174, 173,  51, 182, 250, 193, 
    249, 242, 214,  52,  16, 195, 
    136,  52,  94,  48,  75, 153, 
    104, 219, 104,  59, 204,  85, 
     33, 110, 121,  24,  80,  84, 
    140, 169,  48, 119,  61,  75, 
     88,  94, 132,  51, 207,  22, 
    174, 199,  67,  92,  85, 171, 
    152, 170,  85, 113, 213, 168, 
     18,  74,  10, 244,  87, 113, 
    175,  89,   9, 117,  80,  37, 
    213,  97, 149,  82, 199, 148, 
     82,  49,  25, 243,  18,  50, 
    238,  53, 200, 132, 199,  12, 
    238, 165, 164, 144,   7, 100, 
     82, 182, 201, 148,  60,  42, 
    149, 172, 114,  98,  94, 141, 
     19, 247, 234, 157, 132, 103, 
     92, 225,  43,  77, 142, 144, 
     45,  78,  82,  30, 114,  82, 
    242, 136, 163, 164, 107, 199, 
    188, 184,  29, 247, 234, 108, 
    204,  55, 153, 178,  77,  71, 
    113, 147,  43, 202, 151, 181, 
     89,  42, 105,  11, 153, 182, 
    147, 178, 213,  78, 201, 118, 
     91, 201,   2, 183,  87, 190, 
    113, 185, 242, 206, 102, 219, 
    166, 138,  86,  68,  57, 219, 
    150,  17,  75,  52,  35, 134, 
    157,  74, 113,   2, 145, 133, 
     12, 209, 141, 232,  86, 197, 
     56,  99, 119, 214,  75,  71, 
    120, 168, 225, 247, 139, 122, 
     58, 254, 218, 213, 231,  82, 
    177, 171, 175,  84, 183, 118, 
    206, 202,   2, 186,  18,  84, 
     50,  38, 253, 216,  10, 195, 
    208, 240,  79,  17,  35, 208, 
    242,  79, 218,  94, 119,  15, 
    189,  20,  95,  31,  92, 162, 
     58,  49, 227, 207, 185, 232, 
    199,  52, 148, 240,  55,   5, 
     42, 246, 240, 208,  31,  95, 
    240,  35, 229,  74, 231,  85, 
     42,  56, 213, 197,  38,  18, 
    207, 253, 235,  79, 253,  72, 
    103,  93, 149, 112, 119,  30, 
     91, 254, 117,  58,   2, 166, 
     76, 123, 207, 100,  46, 103, 
    115, 139, 249, 204, 216, 196, 
    226, 173, 142, 243,  35,  23, 
     58, 134, 199, 231, 115, 115, 
    217, 124, 102,  96, 118,  57, 
    159, 233, 155,  93, 202,  78, 
     46, 143, 141,  12, 100, 242, 
     75, 147, 153, 225, 153, 241, 
    169, 236,  82,  62, 211, 187, 
     56, 159, 155, 157, 203,  78, 
    149,  38,  13,  46, 100, 251, 
    178,  19,  55, 174, 245,  79, 
     79,  99, 232, 213, 209, 225, 
     82, 107, 116, 178, 103, 161, 
     51,  55,  53, 193, 126,   2, 
    224, 245, 131, 181,   0,   0, 
     53,  16,   0,   0, 212,   0, 
      0,   0,  23,   0,   1,   0, 
     16, 197,  23,   0, 120,   1, 
    237, 152, 205, 107,  19,  65, 
     24, 198,  39, 155, 201, 116, 
     55,  78,  39, 219,  52, 141, 
    105,  77, 211,  86, 163,  84, 
    177, 181,  21,  17,  17, 197, 
    181,  31,  40,  42, 136, 182, 
     20,  15,  17, 237,  71, 212, 
    130, 218, 208,  40, 120, 210, 
     42, 130, 136,  31,   7, 169, 
    226,  31, 224,  65, 240,  42, 
    122,  17,  91,  83, 196, 147, 
     34, 158,  60, 120, 240, 234, 
     73,  16, 239, 250,  60, 217, 
    141, 150, 168, 103,  69, 246, 
      7, 207, 188, 243, 206, 199, 
    238, 179,  51, 123, 122,  95, 
    174,  20,  85, 238, 138, 135, 
    195, 140, 239, 187,  31,  61, 
    126, 107,   9,  17,  99,   2, 
    208, 173,  82,  74, 177,  21, 
    226,  84, 154, 173,  16, 121, 
     54,  17,   8,  11,  56, 181, 
     21, 154,  71, 238,  33, 118, 
     67, 156, 103, 204, 190, 186, 
     49, 240, 228, 248, 237, 129, 
      2, 250, 253,  80,  11,  52, 
     22, 104,  39, 196, 189,  28, 
     79,  64, 245,  52,  65,  53, 
     31, 124, 213, 114, 232, 107, 
     35, 180,  28, 135,  13, 224, 
    190,  21, 208,  15, 198, 217, 
    252, 158,  67,  16,  61, 252, 
      9, 122, 227, 243, 106, 212, 
    124, 242, 123, 255,  53, 120, 
     70, 181, 123,  34, 188, 143, 
    229,  24,  72,  66,  68,   6, 
    247,  88,  91,  50,  26, 228, 
    220, 206, 111,  91, 132, 254, 
    196,  55,  80, 123,  14,  97, 
    127,  11,  68, 216,  87, 226, 
     96, 159, 138,  92, 235,  84, 
    214, 146, 171, 162, 137, 126, 
    133,  65, 133, 139,  84,  10, 
    106, 128, 108,   8, 151, 165, 
    226,  16,  46,  74, 105, 168, 
     17, 130,  65, 133,   3,  86, 
     46, 132,  67,  87,  73, 168, 
     25, 130,  41, 133,  31,  71, 
    193, 163, 194, 255, 170,  50, 
     80,  43, 212,   6, 173, 130, 
    178,  80,  59, 148, 131,  58, 
    130, 127,  70, 210,   9, 114, 
     54,  64,  69, 252,  47,  85, 
     22, 255,  28, 196, 104, 148, 
    225, 191, 133, 103, 128,  99, 
    254, 129, 127,  26,  62, 188, 
     99,  42,  36,  36,  36,  36, 
     36,  36,  36,  36,  36,  36, 
     36,  36,  36,  36,  36, 228, 
    111,  98, 117,  93, 121,  46, 
    162,  87,  23,  47, 137, 155, 
     11, 121,  71,  45, 149,  16, 
     19,  70,  24, 219, 121,  83, 
    233, 116, 238,  84, 116, 116, 
    110, 209, 104, 161, 155, 141, 
    101, 178, 206, 124, 165,  49, 
     46, 116,  82,  91, 122, 165, 
    145, 198, 117, 238,  85,  50, 
    206, 253, 138, 182, 133, 110, 
    138,  91,  58, 173, 165,  94, 
    101, 148, 113, 109,  75, 183, 
    196, 165, 110, 211,  74, 199, 
    197, 220, 187, 248, 167, 215, 
    209, 148,  45, 117, 107,  92, 
    105, 190, 167, 195, 164, 141, 
    131, 113,   7, 227, 235,  82, 
     89, 147, 177, 149, 246, 188, 
    210,  71,  33,  60, 153, 195, 
     83, 214, 240, 253, 152, 183, 
     49, 191,  33, 149,  51, 107, 
    147,  89,  61, 196, 249, 136, 
     39, 219, 227, 105, 189,  26, 
    126,  54, 193, 207, 230, 148, 
     49, 235, 147,  57, 157, 119, 
    179, 122,  47, 231,  45,  79, 
    102, 237, 180, 238, 130, 199, 
     94, 120, 236,  79,  26, 221, 
    237, 230, 180, 105, 151, 230, 
      0, 231, 163, 158, 236, 132, 
    215,  30, 120, 237, 115, 141, 
     78, 116,  72,  45,  56, 174, 
     61, 185,  17, 158,  27,  18, 
     82,  75, 230, 141, 158, 180, 
    142, 202, 139,  46, 251,  43, 
     60, 249, 197,  82,  23,  27, 
     98, 182,  73,  49, 135, 199, 
    232, 117, 171, 146, 136,   9, 
    147,  97,  14,  79,  38, 134, 
    179,  97, 159, 207, 103, 148, 
    158, 204,  51,  98, 109,  55, 
     35, 214, 240, 187,  99, 235, 
    132, 233,  99, 238, 122, 114, 
     11,  99, 147,  39, 183,  49, 
     38,  61, 185, 131,  17, 235, 
    133, 184, 188, 192, 218,  45, 
     11, 175, 126,   5, 205, 167, 
    149, 101, 181, 186, 177,  12, 
    155, 186,  49, 151,  77, 221, 
     88, 181,  47, 253, 186,  92, 
    141,   7,  65,  29, 114,  46, 
    136, 172,  35, 179, 174,  27, 
     17, 126, 189, 174,  17, 146, 
     65,  85, 239, 197, 174,  67, 
     79, 213, 231,  91, 251, 216, 
     39,  31, 130,  61, 207, 130, 
    216,   9, 105, 232,  39, 172, 
     78, 255, 138,  12, 106, 224, 
     95, 131, 125, 244, 202, 122, 
    153, 241,  43, 137, 126, 225, 
     20, 228, 131, 117, 217,  32, 
    178, 190, 198,  58, 115, 189, 
    143,  29, 193,  60, 203, 206, 
    116,  58, 184, 189, 112, 184, 
     88, 154,  41,  23, 142,  76, 
    204,  92, 232, 217,  61, 186, 
    167, 103, 100, 252,  76, 233, 
    116, 177,  92, 216,  63, 125, 
    174,  92,  24, 154, 158,  45, 
     78, 158,  59,  50, 186, 191, 
     80, 158, 157,  44, 140, 156, 
     26, 159,  42, 206, 150,  11, 
    131,  51, 103,  74, 211, 167, 
    139,  83, 213,  77,   7, 207, 
     22, 135, 138,  19, 231,  79, 
     14, 159,  56, 129, 165, 199, 
    198,  70, 170, 217, 216, 228, 
    192, 217, 222, 210, 212, 132, 
    248,  14, 229, 214, 156, 226, 
      0,   0,  53,  16,   0,   0, 
    206,   0,   0,   0,  23,   0, 
      1,   0,   0, 129,  23,   0, 
    120,   1, 237, 152, 203, 107, 
     19,  81,  20, 198, 207, 100, 
     38,  55, 147, 201, 201, 205, 
    100, 154, 198, 182, 198, 180, 
    181,  85,  98, 181,  69, 197, 
    133, 136, 248, 104,  43, 130, 
     93, 248, 168,  22,  23,  17, 
    237,  35, 213, 130, 182, 161, 
    169, 208,  85, 173,   5,  17, 
    164, 110, 196, 133, 255, 131, 
    155,  46,   4, 119, 182, 198, 
    173, 138, 136,  72, 151, 110, 
     93,   9, 174,  92,   8, 245, 
     59, 201, 140, 134, 170, 184, 
     84, 100, 126, 228,  59, 231, 
    190, 102, 230, 220, 115, 111, 
     54, 231, 246,  22, 170, 177, 
    212, 117, 225, 169, 248, 245, 
    194, 227,  39, 111,  34,  68, 
     81, 233,  52,  80, 206, 136, 
     37, 234, 206, 138,  37,  42, 
    136,  49,  32, 172, 149, 161, 
     62, 104,   2, 253,  99, 240, 
     50,  23, 232, 213, 203, 165, 
    254, 201, 201,  59, 253, 104, 
     82,  47,  36, 159, 187, 228, 
    235,   8, 148, 132, 246,  67, 
     46,  36, 196, 197,  52,  16, 
    196, 129, 207, 124, 199, 255, 
     44, 237, 129,  26, 177, 197, 
    128, 205, 239, 160,  81,  49, 
    191, 102,   8, 242, 183, 244, 
     75,  36,  54,  33, 120, 103, 
     16, 167, 236, 247,  95,  67, 
    242,  18, 156, 147,  32, 231, 
    209, 136, 134,  76,  72, 120, 
    215,  44, 182, 254, 140, 224, 
    250,  73,  16,  39, 123,  91, 
    131, 126, 199,   6, 176, 164, 
    209,  64, 208,  23, 175, 232, 
    244,  94, 101, 220, 237,  80, 
    145,  23, 174,  50,  83, 251, 
     20,   6,  21,  14,  82,  41, 
     40,   6, 225, 160,  20,  18, 
    170,  28,  40,   1,  49, 132, 
    139, 160,  16, 160,  74,  65, 
     72, 178,  74,  67,  30, 212, 
      4,  97,  79,  10, 241,  42, 
      4, 167, 112, 129,  84,  11, 
    212,  10, 181,  65,  91, 161, 
     28, 180,  13, 202,  67, 237, 
    254, 157, 177,  36,  18, 244, 
    197,   0, 101, 212, 119, 170, 
     34, 245, 155, 164, 204,  32, 
     19, 255,  39, 146, 131, 224, 
    255,  32, 212, 179,  81,  63, 
    239, 224, 138, 156,  17,  19, 
     18,  18,  18,  18,  18,  18, 
     18,  18,  18,  18,  18,  18, 
     18,  18,  18, 242, 151, 136, 
    116,  46,  61,  35, 115, 113, 
    237,  22,  45, 175, 118,  27, 
    145,  23,  29, 198, 189, 106, 
    206,  88, 174, 218, 198, 235, 
    106, 139, 241, 160, 234,  26, 
     15, 171, 229, 212, 242,  42, 
    209, 226,  91, 231, 227,  43, 
     83, 214, 197, 180, 165,  19, 
     90, 233,  56, 198, 226,  24, 
    203,  82,  70,  43, 182, 216, 
     97, 197,  41, 157, 213,  77, 
     58, 167, 109, 204, 217, 152, 
    107, 163, 188, 110, 246,  50, 
     28, 117,  44, 142,  59, 138, 
     53, 103, 217, 227,  28, 159, 
    161, 232, 202, 134, 249, 245, 
    153,  84,  74, 218, 117,  65, 
    119, 233,  30, 189, 147,  72, 
    183, 122, 121, 206, 184,  25, 
    182, 108, 139, 109,  91, 113, 
    210, 201, 114, 218, 201, 177, 
     65, 239, 223,  26,   9, 162, 
     60,  23, 120,  59, 247, 240, 
    110, 173, 245,  14, 143, 184, 
    197, 205, 179, 211, 236, 105, 
    182, 179, 236, 218,  57, 118, 
    211,   7, 215, 141, 136,  73, 
    219, 156,   2, 119,  58,  61, 
     88, 169, 185, 219,  37,  78, 
    181, 123, 236,  53,  97,  46, 
    161, 201,  52, 168, 154, 179, 
     11, 220,  97, 247, 240,  46, 
     71,  51,  25,  30, 132,  57, 
     78,  82, 193, 214,  28, 191, 
    100,  45,  88,  81, 244,  51, 
    205, 244,  57, 162,  22,  40, 
     74,  58,  21, 181, 181, 138, 
     97,  44, 102, 146,  19, 181, 
    180,  29,  71, 155,  44,  42, 
    208,   1, 124, 143,  72, 242, 
     66,  59,  73, 115,  18, 227, 
    110,  26,  15, 192, 123, 146, 
    225, 219, 171, 181,  18,  32, 
    214, 224, 247, 157,  86,  41, 
     16, 109,  26, 171, 213,  60, 
     55, 141, 213, 218, 150,  44, 
    254, 193,  21,  41,  30, 130, 
    195, 190, 239, 134, 164, 110, 
    106, 248,  85,  71, 169, 245, 
     90, 126,  69, 238, 249, 209, 
    179,  79, 213, 167, 251, 167, 
    164,  45,  60, 242, 159, 153, 
    247, 125,   7, 196, 208, 159, 
     88, 243, 215, 175, 248,  94, 
     98, 149,  90, 151, 174,  85, 
    192, 128,  20,  61, 193,   7, 
    127, 126, 221, 247,  82,  27, 
    195, 177, 253,  20, 199,  23, 
    127,  94,  74, 198,  18, 233, 
    192, 161, 226, 185,  82, 121, 
    166,  82, 188,  56,  54,  51, 
    223, 123, 252, 252, 201, 222, 
    225, 209,  27, 229, 235, 165, 
     74, 113, 104, 106, 174,  82, 
     28, 156, 154,  45, 141, 207, 
     93,  60,  63,  84, 172, 204, 
    142,  23, 135, 175, 141,  78, 
    148, 102,  43, 197, 129, 153, 
     27, 229, 169, 235, 165, 137, 
    218,  67, 167, 167,  75, 131, 
    165, 177, 155,  87,  79,  76, 
     78,  98, 233, 229, 145, 225, 
     90, 111, 100, 188, 127, 186, 
    175,  60,  49,  70, 223,   0, 
    245, 205, 138,  65,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    193,  63,  81, 183,   6, 239, 
    141,  74,  88,  80,  68,  80, 
     96,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  68, 101,  98, 117, 103, 
     69, 102, 102, 101,  99, 116, 
     95,  86,  83,  68, 101,  98, 
    117, 103,  86,  99,  66, 110, 
     46, 112, 100,  98
};
