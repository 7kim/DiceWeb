#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float       
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[441]
// Embedded Data:
//  0x000001b9 - Offset To First Precompiled Shader
//  0x00000050 - Original Shader Descriptor
//  0x000001b4 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
mul r0.w, r0.w, v1.w
eq r1.x, r0.w, l(0.000000)
discard_nz r1.x
dp3 r1.x, v3.xyzx, v3.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v3.xyzx
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
dp3_sat r2.x, cb1[9].xyzx, r1.xyzx
mul r2.xyz, r2.xxxx, cb1[1].xyzx
mul r2.xyz, r2.xyzx, v1.xyzx
mad r2.xyz, cb0[0].xyzx, cb1[0].xyzx, r2.xyzx
mad r3.xyz, v5.xyzx, r1.wwww, cb1[9].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
dp3_sat r2.w, r1.xyzx, r3.xyzx
max r3.x, cb0[4].x, l(0.000100)
log r2.w, r2.w
mul r2.w, r2.w, r3.x
exp r2.w, r2.w
mul r2.w, r2.w, cb1[13].x
mul r3.yzw, cb0[2].xxyz, cb1[1].xxyz
dp3_sat r4.x, cb1[10].xyzx, r1.xyzx
mul r4.xyz, r4.xxxx, cb1[2].xyzx
mad r2.xyz, r4.xyzx, v1.xyzx, r2.xyzx
mad r4.xyz, v5.xyzx, r1.wwww, cb1[10].xyzx
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, r4.xyzx
dp3_sat r4.x, r1.xyzx, r4.xyzx
log r4.x, r4.x
mul r4.x, r3.x, r4.x
exp r4.x, r4.x
mul r4.x, r4.x, cb1[14].x
mul r4.yzw, cb0[2].xxyz, cb1[2].xxyz
mul r4.xyz, r4.xxxx, r4.yzwy
mad r3.yzw, r3.yyzw, r2.wwww, r4.xxyz
dp3_sat r2.w, cb1[11].xyzx, r1.xyzx
mul r4.xyz, r2.wwww, cb1[3].xyzx
mad_sat r2.xyz, r4.xyzx, v1.xyzx, r2.xyzx
mad r4.xyz, v5.xyzx, r1.wwww, cb1[11].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
dp3_sat r1.x, r1.xyzx, r4.xyzx
log r1.x, r1.x
mul r1.x, r1.x, r3.x
exp r1.x, r1.x
mul r1.x, r1.x, cb1[15].x
mul r1.yzw, cb0[2].xxyz, cb1[3].xxyz
mad r1.xyz, r1.yzwy, r1.xxxx, r3.yzwy
mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[441], bundle is:[314] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDGSLPhong_mainTxTk.pdb
// Shader Semantic Hash      : 0xb844a8c143c99b9
//
// Shader Data:
; ----------------- PS Data ------------------------
; Input Semantic Mappings
;   [0] generic,  usageIdx 1, channelMask 15, param0, paramSlot1, DefaultVal={0,0,0,0}
;   [1] generic,  usageIdx 2, channelMask  3, param1, paramSlot2, DefaultVal={0,0,0,0}
;   [2] generic,  usageIdx 3, channelMask  7, param2, paramSlot3, DefaultVal={0,0,0,0}
;   [3] generic,  usageIdx 5, channelMask  7, param3, paramSlot5, DefaultVal={0,0,0,0}

codeLenInByte        = 828 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 1;
;  userElements[0]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x0:1]
extUserElementCount  = 4;
;  extUserElements 1[0] = IMM_RESOURCE 0, offset 0x0:7 dwords
;  extUserElements 1[1] = IMM_SAMPLER 0, offset 0x8:11 dwords
;  extUserElements 1[2] = IMM_CONST_BUFFER 0, offset 0xc:15 dwords
;  extUserElements 1[3] = IMM_CONST_BUFFER 1, offset 0x10:19 dwords
NumVgprs             = 27;
NumSgprs             = 44;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000001
; constBufUsage           = 0x00000003

; SPI_SHADER_PGM_RSRC2_PS = 0x00000004
SSPRP:SCRATCH_EN            = 0
SSPRP:USER_SGPR             = 2
SSPRP:TRAP_PRESENT          = 0
SSPRP:WAVE_CNT_EN           = 0
SSPRP:EXTRA_LDS_SIZE        = 0
SSPRP:EXCP_EN               = 0
; SPI_SHADER_Z_FORMAT     = 0x00000000
SPZF:Z_EXPORT_FORMAT        = 0; SPI_SHADER_ZERO
; SPI_PS_IN_CONTROL       = 0x00000004
SPIC:NUM_INTERP             = 4
SPIC:PARAM_GEN              = 0
SPIC:FOG_ADDR               = 0
SPIC:BC_OPTIMIZE_DISABLE    = 0
SPIC:PASS_FOG_THROUGH_PS    = 0
; SPI_PS_INPUT_ADDR       = 0x00000002
SPIA:PERSP_CENTER_ENA       = 1
; DB_SHADER_CONTROL       = 0x00000050
DB:Z_ORDER                  = 1
DB:KILL_ENABLE              = 1
DB:CONSERVATIVE_Z_EXPORT    = 0; EXPORT_ANY_Z
; CB_SHADER_MASK          = 0x0000000F
CB:OUTPUT0_ENABLE           = 15

; export table for mrt0 [patch@(bytes=0x328, dwords=0xCA)]
// Export Patch Code (FMT_ZERO):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           null, off, off, off, off done vm        // 000000000008: F8001890 00000000
end
// Export Patch Code (FMT_32_R):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v15, off, off, off done vm        // 000000000008: F8001801 0000000F
end
// Export Patch Code (FMT_32_GR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v15, v19, off, off done vm        // 000000000008: F8001803 0000130F
end
// Export Patch Code (FMT_32_AR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v15, v5, off, off done vm         // 000000000008: F8001803 0000050F
end
// Export Patch Code (FMT_FP16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pkrtz_f16_f32  v0, v15, v19                     // 000000000000: 5E00270F
  v_cvt_pkrtz_f16_f32  v1, v12, v5                      // 000000000004: 5E020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_u16_f32  v0, v15, v19                    // 000000000000: 5C00270F
  v_cvt_pknorm_u16_f32  v1, v12, v5                     // 000000000004: 5C020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SNORM16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pknorm_i16_f32  v0, v15, v19                    // 000000000000: 5A00270F
  v_cvt_pknorm_i16_f32  v1, v12, v5                     // 000000000004: 5A020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_UINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_u16_u32  v0, v15, v19                        // 000000000000: 6000270F
  v_cvt_pk_u16_u32  v1, v12, v5                         // 000000000004: 60020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_SINT16_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  v_cvt_pk_i16_i32  v0, v15, v19                        // 000000000000: 6200270F
  v_cvt_pk_i16_i32  v1, v12, v5                         // 000000000004: 62020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000008: F8001C0F 00000100
end
// Export Patch Code (FMT_32_ABGR):
shader patch
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_nop         0x0000                                  // 000000000000: BF800000
  s_nop         0x0000                                  // 000000000004: BF800000
  exp           mrt0, v15, v19, v12, v5 done vm         // 000000000008: F800180F 050C130F
end

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[40:41], exec                          // 000000000000: BEA8047E
  s_wqm_b64     exec, exec // wrscc                     // 000000000004: BEFE0A7E
  s_load_dwordx16  s[4:19], s[0:1], 0x00                // 000000000008: C1020100
  s_mov_b32     m0, s2                                  // 00000000000C: BEFC0302
  v_interp_p1_f32  v2, v0, attr1.x                      // 000000000010: C8080400
  v_interp_p1_f32  v3, v0, attr1.y                      // 000000000014: C80C0500
  v_interp_p2_f32  v2, v1, attr1.x                      // 000000000018: C8090401
  v_interp_p2_f32  v3, v1, attr1.y                      // 00000000001C: C80D0501
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  image_sample  v[2:5], v[2:3], s[4:11], s[12:15] dmask:0xf // 000000000024: F0800F00 00610202
  s_load_dwordx4  s[0:3], s[0:1], 0x10                  // 00000000002C: C0800110
  v_interp_p1_f32  v6, v0, attr0.w                      // 000000000030: C8180300
  v_interp_p2_f32  v6, v1, attr0.w                      // 000000000034: C8190301
  s_waitcnt     vmcnt(0)                                // 000000000038: BF8C0F70
  v_mul_legacy_f32  v5, v5, v6                          // 00000000003C: 0E0A0D05
  v_cmp_eq_f32  vcc, 0, v5                              // 000000000040: 7C040A80
  s_andn2_b64   s[40:41], s[40:41], vcc // wrscc        // 000000000044: 8AA86A28
  s_cbranch_scc0  label_00C9                            // 000000000048: BF8400B6
  s_and_b64     exec, exec, s[40:41] // wrscc           // 00000000004C: 87FE287E
  s_wqm_b64     exec, exec // wrscc                     // 000000000050: BEFE0A7E
  v_interp_p1_f32  v6, v0, attr3.z                      // 000000000054: C8180E00
  s_waitcnt     lgkmcnt(0)                              // 000000000058: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x28           // 00000000005C: C2820128
  v_interp_p1_f32  v7, v0, attr3.y                      // 000000000060: C81C0D00
  v_interp_p2_f32  v6, v1, attr3.z                      // 000000000064: C8190E01
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x24          // 000000000068: C2840124
  v_interp_p1_f32  v8, v0, attr3.x                      // 00000000006C: C8200C00
  v_interp_p2_f32  v7, v1, attr3.y                      // 000000000070: C81D0D01
  v_mul_legacy_f32  v9, v6, v6                          // 000000000074: 0E120D06
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x2c         // 000000000078: C286012C
  v_interp_p2_f32  v8, v1, attr3.x                      // 00000000007C: C8210C01
  v_mac_f32     v9, v7, v7                              // 000000000080: 3E120F07
  v_mac_f32     v9, v8, v8                              // 000000000084: 3E121108
  v_interp_p1_f32  v10, v0, attr2.z                     // 000000000088: C8280A00
  v_rsq_f32     v9, v9                                  // 00000000008C: 7E125D09
  v_interp_p1_f32  v11, v0, attr2.y                     // 000000000090: C82C0900
  v_interp_p2_f32  v10, v1, attr2.z                     // 000000000094: C8290A01
  s_waitcnt     lgkmcnt(0)                              // 000000000098: BF8C007F
  v_mad_f32     v12, v6, v9, s6                         // 00000000009C: D282000C 001A1306
  v_interp_p1_f32  v13, v0, attr2.x                     // 0000000000A4: C8340800
  v_interp_p2_f32  v11, v1, attr2.y                     // 0000000000A8: C82D0901
  v_mul_legacy_f32  v14, v10, v10                       // 0000000000AC: 0E1C150A
  v_mad_f32     v15, v6, v9, s10                        // 0000000000B0: D282000F 002A1306
  v_mad_f32     v16, v7, v9, s5                         // 0000000000B8: D2820010 00161307
  v_mul_legacy_f32  v17, v12, v12                       // 0000000000C0: 0E22190C
  v_interp_p2_f32  v13, v1, attr2.x                     // 0000000000C4: C8350801
  v_mac_f32     v14, v11, v11                           // 0000000000C8: 3E1C170B
  v_mad_f32     v18, v7, v9, s9                         // 0000000000CC: D2820012 00261307
  v_mul_legacy_f32  v19, v15, v15                       // 0000000000D4: 0E261F0F
  v_mad_f32     v20, v8, v9, s4                         // 0000000000D8: D2820014 00121308
  v_mac_f32     v17, v16, v16                           // 0000000000E0: 3E222110
  v_mad_f32     v6, v6, v9, s14                         // 0000000000E4: D2820006 003A1306
  v_mac_f32     v14, v13, v13                           // 0000000000EC: 3E1C1B0D
  v_mad_f32     v21, v8, v9, s8                         // 0000000000F0: D2820015 00221308
  v_mac_f32     v19, v18, v18                           // 0000000000F8: 3E262512
  v_mac_f32     v17, v20, v20                           // 0000000000FC: 3E222914
  v_mad_f32     v7, v7, v9, s13                         // 000000000100: D2820007 00361307
  v_mul_legacy_f32  v22, v6, v6                         // 000000000108: 0E2C0D06
  s_buffer_load_dword  s7, s[16:19], 0x10               // 00000000010C: C2039110
  v_rsq_f32     v14, v14                                // 000000000110: 7E1C5D0E
  v_mac_f32     v19, v21, v21                           // 000000000114: 3E262B15
  v_rsq_f32     v17, v17                                // 000000000118: 7E225D11
  v_mad_f32     v8, v8, v9, s12                         // 00000000011C: D2820008 00321308
  v_mac_f32     v22, v7, v7                             // 000000000124: 3E2C0F07
  v_mul_legacy_f32  v9, v10, v14                        // 000000000128: 0E121D0A
  v_rsq_f32     v10, v19                                // 00000000012C: 7E145D13
  v_mul_legacy_f32  v12, v12, v17                       // 000000000130: 0E18230C
  v_mac_f32     v22, v8, v8                             // 000000000134: 3E2C1108
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x04         // 000000000138: C28A0104
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x08         // 00000000013C: C28C0108
  v_mul_legacy_f32  v11, v11, v14                       // 000000000140: 0E161D0B
  v_mul_legacy_f32  v15, v15, v10                       // 000000000144: 0E1E150F
  v_mul_legacy_f32  v16, v16, v17                       // 000000000148: 0E202310
  v_mul_legacy_f32  v12, v9, v12                        // 00000000014C: 0E181909
  v_rsq_f32     v19, v22                                // 000000000150: 7E265D16
  s_buffer_load_dwordx4  s[28:31], s[0:3], 0x00         // 000000000154: C28E0100
  s_buffer_load_dwordx4  s[32:35], s[16:19], 0x08       // 000000000158: C2901108
  s_buffer_load_dword  s11, s[0:3], 0x38                // 00000000015C: C2058138
  v_mul_legacy_f32  v13, v13, v14                       // 000000000160: 0E1A1D0D
  v_mul_legacy_f32  v14, v18, v10                       // 000000000164: 0E1C1512
  v_mul_legacy_f32  v15, v9, v15                        // 000000000168: 0E1E1F09
  v_mul_legacy_f32  v17, v20, v17                       // 00000000016C: 0E222314
  v_mac_f32     v12, v11, v16                           // 000000000170: 3E18210B
  v_mul_legacy_f32  v6, v6, v19                         // 000000000174: 0E0C2706
  s_buffer_load_dwordx4  s[16:19], s[16:19], 0x00       // 000000000178: C2881100
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x0c         // 00000000017C: C292010C
  s_buffer_load_dword  s15, s[0:3], 0x34                // 000000000180: C2078134
  v_mul_legacy_f32  v16, s10, v9                        // 000000000184: 0E20120A
  v_mul_legacy_f32  v10, v21, v10                       // 000000000188: 0E141515
  v_mac_f32     v15, v11, v14                           // 00000000018C: 3E1E1D0B
  v_mov_b32     v14, 0x38d1b717                         // 000000000190: 7E1C02FF 38D1B717
  v_mad_legacy_f32  v12, v13, v17, v12 clamp            // 000000000198: D280080C 0432230D
  v_mul_legacy_f32  v7, v7, v19                         // 0000000001A0: 0E0E2707
  v_mul_legacy_f32  v6, v9, v6                          // 0000000001A4: 0E0C0D09
  s_buffer_load_dword  s0, s[0:3], 0x3c                 // 0000000001A8: C200013C
  v_mac_f32     v16, s9, v11                            // 0000000001AC: 3E201609
  v_mad_legacy_f32  v15, v13, v10, v15 clamp            // 0000000001B0: D280080F 043E150D
  s_waitcnt     lgkmcnt(0)                              // 0000000001B8: BF8C007F
  v_max_legacy_f32  v10, s7, v14                        // 0000000001BC: 1C141C07
  v_log_f32     v12, v12                                // 0000000001C0: 7E184F0C
  v_mul_legacy_f32  v8, v8, v19                         // 0000000001C4: 0E102708
  v_mac_f32     v6, v11, v7                             // 0000000001C8: 3E0C0F0B
  v_mad_legacy_f32  v16, s8, v13, v16 clamp             // 0000000001CC: D2800810 04421A08
  v_interp_p1_f32  v7, v0, attr0.x                      // 0000000001D4: C81C0000
  v_interp_p1_f32  v14, v0, attr0.y                     // 0000000001D8: C8380100
  v_interp_p1_f32  v0, v0, attr0.z                      // 0000000001DC: C8000200
  v_log_f32     v15, v15                                // 0000000001E0: 7E1E4F0F
  v_mul_legacy_f32  v17, s6, v9                         // 0000000001E4: 0E221206
  v_mul_legacy_f32  v12, v10, v12                       // 0000000001E8: 0E18190A
  v_mad_legacy_f32  v6, v13, v8, v6 clamp               // 0000000001EC: D2800806 041A110D
  v_mul_legacy_f32  v8, s20, v16                        // 0000000001F4: 0E102014
  v_mul_legacy_f32  v18, s21, v16                       // 0000000001F8: 0E242015
  v_mul_legacy_f32  v16, s22, v16                       // 0000000001FC: 0E202016
  v_interp_p2_f32  v7, v1, attr0.x                      // 000000000200: C81D0001
  v_interp_p2_f32  v14, v1, attr0.y                     // 000000000204: C8390101
  v_interp_p2_f32  v0, v1, attr0.z                      // 000000000208: C8010201
  v_mul_legacy_f32  v1, v10, v15                        // 00000000020C: 0E021F0A
  v_mac_f32     v17, s5, v11                            // 000000000210: 3E221605
  v_exp_f32     v12, v12                                // 000000000214: 7E184B0C
  v_mov_b32     v15, s24                                // 000000000218: 7E1E0218
  v_mov_b32     v19, s25                                // 00000000021C: 7E260219
  v_mov_b32     v20, s26                                // 000000000220: 7E28021A
  v_mul_legacy_f32  v9, s14, v9                         // 000000000224: 0E12120E
  v_log_f32     v6, v6                                  // 000000000228: 7E0C4F06
  v_mul_legacy_f32  v8, v8, v7                          // 00000000022C: 0E100F08
  v_mul_legacy_f32  v18, v18, v14                       // 000000000230: 0E241D12
  v_mul_legacy_f32  v16, v16, v0                        // 000000000234: 0E200110
  v_mov_b32     v21, s28                                // 000000000238: 7E2A021C
  v_mov_b32     v22, s29                                // 00000000023C: 7E2C021D
  v_mov_b32     v23, s30                                // 000000000240: 7E2E021E
  v_exp_f32     v1, v1                                  // 000000000244: 7E024B01
  v_mov_b32     v24, s32                                // 000000000248: 7E300220
  v_mov_b32     v25, s33                                // 00000000024C: 7E320221
  v_mov_b32     v26, s34                                // 000000000250: 7E340222
  v_mad_legacy_f32  v17, s4, v13, v17 clamp             // 000000000254: D2800811 04461A04
  v_mul_legacy_f32  v12, s11, v12                       // 00000000025C: 0E18180B
  v_mul_legacy_f32  v15, s32, v15                       // 000000000260: 0E1E1E20
  v_mul_legacy_f32  v19, s33, v19                       // 000000000264: 0E262621
  v_mul_legacy_f32  v20, s34, v20                       // 000000000268: 0E282822
  v_mac_f32     v9, s13, v11                            // 00000000026C: 3E12160D
  v_mul_legacy_f32  v6, v10, v6                         // 000000000270: 0E0C0D0A
  v_mac_f32     v8, s16, v21                            // 000000000274: 3E102A10
  v_mac_f32     v18, s17, v22                           // 000000000278: 3E242C11
  v_mac_f32     v16, s18, v23                           // 00000000027C: 3E202E12
  v_mul_legacy_f32  v1, s15, v1                         // 000000000280: 0E02020F
  v_mul_legacy_f32  v10, s20, v24                       // 000000000284: 0E143014
  v_mul_legacy_f32  v11, s21, v25                       // 000000000288: 0E163215
  v_mul_legacy_f32  v21, s22, v26                       // 00000000028C: 0E2A3416
  v_mul_legacy_f32  v22, s24, v17                       // 000000000290: 0E2C2218
  v_mul_legacy_f32  v23, s25, v17                       // 000000000294: 0E2E2219
  v_mul_legacy_f32  v17, s26, v17                       // 000000000298: 0E22221A
  v_mul_legacy_f32  v15, v12, v15                       // 00000000029C: 0E1E1F0C
  v_mul_legacy_f32  v19, v12, v19                       // 0000000002A0: 0E26270C
  v_mul_legacy_f32  v12, v12, v20                       // 0000000002A4: 0E18290C
  v_mad_legacy_f32  v9, s12, v13, v9 clamp              // 0000000002A8: D2800809 04261A0C
  v_exp_f32     v6, v6                                  // 0000000002B0: 7E0C4B06
  v_mov_b32     v13, s36                                // 0000000002B4: 7E1A0224
  v_mov_b32     v20, s37                                // 0000000002B8: 7E280225
  v_mov_b32     v24, s38                                // 0000000002BC: 7E300226
  v_mac_f32     v8, v22, v7                             // 0000000002C0: 3E100F16
  v_mac_f32     v18, v23, v14                           // 0000000002C4: 3E241D17
  v_mac_f32     v16, v17, v0                            // 0000000002C8: 3E200111
  v_mac_f32     v15, v10, v1                            // 0000000002CC: 3E1E030A
  v_mac_f32     v19, v11, v1                            // 0000000002D0: 3E26030B
  v_mac_f32     v12, v21, v1                            // 0000000002D4: 3E180315
  v_mul_legacy_f32  v1, s36, v9                         // 0000000002D8: 0E021224
  v_mul_legacy_f32  v10, s37, v9                        // 0000000002DC: 0E141225
  v_mul_legacy_f32  v9, s38, v9                         // 0000000002E0: 0E121226
  v_mul_legacy_f32  v6, s0, v6                          // 0000000002E4: 0E0C0C00
  v_mul_legacy_f32  v11, s32, v13                       // 0000000002E8: 0E161A20
  v_mul_legacy_f32  v13, s33, v20                       // 0000000002EC: 0E1A2821
  v_mul_legacy_f32  v17, s34, v24                       // 0000000002F0: 0E223022
  v_mad_legacy_f32  v8, v1, v7, v8 clamp                // 0000000002F4: D2800808 04220F01
  v_mad_legacy_f32  v18, v10, v14, v18 clamp            // 0000000002FC: D2800812 044A1D0A
  v_mad_legacy_f32  v16, v9, v0, v16 clamp              // 000000000304: D2800810 04420109
  v_mac_f32     v15, v11, v6                            // 00000000030C: 3E1E0D0B
  v_mac_f32     v19, v13, v6                            // 000000000310: 3E260D0D
  v_mac_f32     v12, v17, v6                            // 000000000314: 3E180D11
  v_mac_f32     v15, v8, v2                             // 000000000318: 3E1E0508
  v_mac_f32     v19, v18, v3                            // 00000000031C: 3E260712
  v_mac_f32     v12, v16, v4                            // 000000000320: 3E180910
label_00C9:
  s_mov_b64     exec, s[40:41]                          // 000000000324: BEFE0428
  v_cvt_pkrtz_f16_f32  v0, v15, v19                     // 000000000328: 5E00270F
  v_cvt_pkrtz_f16_f32  v1, v12, v5                      // 00000000032C: 5E020B0C
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 000000000330: F8001C0F 00000100
  s_endpgm                                              // 000000000338: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   27
//  NumSRegs:                   44
//  NumActiveWaveFrontByVReg:   36
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   194
//  CycleSimNWaves:             194
//  Code Size:                  828
//Assembler Counts:
//  num_32bit_ops                     : 166
//  num_64bit_ops                     : 20
//  num_alu                           : 155
//  num_fc                            : 29
//  num_inst_exp                      : 1
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 1
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 7
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 5
//  num_inst_sop2                     : 2
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 24
//  num_inst_vop2                     : 88
//  num_inst_vop3                     : 21
//  num_inst_vopc                     : 1
//  num_inst_vintrp                   : 24
//  constant_literal_operands         : 0
//  num_tex                           : 2
//  num_vmem_group                    : 1
//  vmem_grouping_started             : 0
//
//Compilation Notes:
//
//  PS has no UAV writes, consider forcing REZ/LATEZ.
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 27
// m_uNumSRegs                       : 44
// m_uSCCodeSize                     : 828
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 36
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 194
// m_uCycleSimNWaves                 : 194

// Assembler Counts:
// num_32bit_ops                     : 166
// num_64bit_ops                     : 20
// num_alu                           : 155
// num_fc                            : 29
// num_inst_exp                      : 1
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 1
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 7
// num_inst_sopc                     : 0
// num_inst_sop1                     : 5
// num_inst_sop2                     : 2
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 24
// num_inst_vop2                     : 88
// num_inst_vop3                     : 21
// num_inst_vopc                     : 1
// num_inst_vintrp                   : 24
// num_inst_smem                     : 15
// constant_literal_operands         : 0
// num_tex                           : 2
// num_vmem_group                    : 1
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 1
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DGSLPhong_mainTxTk[] =
{
     68,  88,  66,  67, 148,  20, 
    249, 139, 165,  55, 114, 110, 
     51, 194, 192, 239, 157, 151, 
      6, 243,   1,   0,   0,   0, 
    163,  13,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
     32,   1,   0,   0,  84,   1, 
      0,   0,  48,  13,   0,   0, 
     64,  13,   0,   0,  73,  83, 
     71,  78, 228,   0,   0,   0, 
      8,   0,   0,   0,   8,   0, 
      0,   0, 200,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0, 212,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  15,  15, 
      0,   0, 218,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0, 218,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      3,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      4,   0,   0,   0,   7,   0, 
      0,   0, 218,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      5,   0,   0,   0,   7,   7, 
      0,   0, 218,   0,   0,   0, 
      4,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      6,   0,   0,   0,  15,   0, 
      0,   0, 218,   0,   0,   0, 
      5,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      7,   0,   0,   0,   7,   0, 
      0,   0,  83,  86,  95,  80, 
     79,  83,  73,  84,  73,  79, 
     78,   0,  67,  79,  76,  79, 
     82,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
     79,  83,  71,  78,  44,   0, 
      0,   0,   1,   0,   0,   0, 
      8,   0,   0,   0,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0,  83,  86, 
     95,  84,  97, 114, 103, 101, 
    116,   0, 171, 171,  83,  72, 
     69,  88, 212,  11,   0,   0, 
     80,   0,   0,   0, 245,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0, 185,   1, 
      0,   0,  80,   0,   0,   0, 
    180,   1,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   5,   0,   0,   0, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   1,   0,   0,   0, 
     21,   0,   0,   0,  90,   0, 
      0,   3,   0,  96,  16,   0, 
      0,   0,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      0,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
    242,  16,  16,   0,   1,   0, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   2,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   3,   0, 
      0,   0,  98,  16,   0,   3, 
    114,  16,  16,   0,   5,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      5,   0,   0,   0,  69,   0, 
      0, 139, 194,   0,   0, 128, 
     67,  85,  21,   0, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  70, 126,  16,   0, 
      0,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     56,   0,   0,   7, 130,   0, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  58,  16,  16,   0, 
      1,   0,   0,   0,  24,   0, 
      0,   7,  18,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
      0,   0,  13,   0,   4,   3, 
     10,   0,  16,   0,   1,   0, 
      0,   0,  16,   0,   0,   7, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  70,  18,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     68,   0,   0,   5,  18,   0, 
     16,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   1,   0, 
      0,   0,   6,   0,  16,   0, 
      1,   0,   0,   0,  70,  18, 
     16,   0,   3,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,  18,  16,   0,   5,   0, 
      0,   0,  70,  18,  16,   0, 
      5,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     16,  32,   0,   8,  18,   0, 
     16,   0,   2,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,   9,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  56,   0,   0,   8, 
    114,   0,  16,   0,   2,   0, 
      0,   0,   6,   0,  16,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7, 114,   0,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   2,   0,   0,   0, 
     70,  18,  16,   0,   1,   0, 
      0,   0,  50,   0,   0,  11, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0,  70,   2,  16,   0, 
      2,   0,   0,   0,  50,   0, 
      0,  10, 114,   0,  16,   0, 
      3,   0,   0,   0,  70,  18, 
     16,   0,   5,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   9,   0, 
      0,   0,  16,   0,   0,   7, 
    130,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     68,   0,   0,   5, 130,   0, 
     16,   0,   2,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    114,   0,  16,   0,   3,   0, 
      0,   0, 246,  15,  16,   0, 
      2,   0,   0,   0,  70,   2, 
     16,   0,   3,   0,   0,   0, 
     16,  32,   0,   7, 130,   0, 
     16,   0,   2,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      3,   0,   0,   0,  52,   0, 
      0,   8,  18,   0,  16,   0, 
      3,   0,   0,   0,  10, 128, 
     32,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   1,  64, 
      0,   0,  23, 183, 209,  56, 
     47,   0,   0,   5, 130,   0, 
     16,   0,   2,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   7, 
    130,   0,  16,   0,   2,   0, 
      0,   0,  58,   0,  16,   0, 
      2,   0,   0,   0,  10,   0, 
     16,   0,   3,   0,   0,   0, 
     25,   0,   0,   5, 130,   0, 
     16,   0,   2,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0,  56,   0,   0,   8, 
    130,   0,  16,   0,   2,   0, 
      0,   0,  58,   0,  16,   0, 
      2,   0,   0,   0,  10, 128, 
     32,   0,   1,   0,   0,   0, 
     13,   0,   0,   0,  56,   0, 
      0,   9, 226,   0,  16,   0, 
      3,   0,   0,   0,   6, 137, 
     32,   0,   0,   0,   0,   0, 
      2,   0,   0,   0,   6, 137, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0,  16,  32, 
      0,   8,  18,   0,  16,   0, 
      4,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
     10,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   4,   0,   0,   0, 
      6,   0,  16,   0,   4,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   2,   0, 
      0,   0,  50,   0,   0,   9, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   4,   0, 
      0,   0,  70,  18,  16,   0, 
      5,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,  10,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   4,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      4,   0,   0,   0,  58,   0, 
     16,   0,   4,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   4,   0,   0,   0, 
    246,  15,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  16,  32, 
      0,   7,  18,   0,  16,   0, 
      4,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  47,   0,   0,   5, 
     18,   0,  16,   0,   4,   0, 
      0,   0,  10,   0,  16,   0, 
      4,   0,   0,   0,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      4,   0,   0,   0,  10,   0, 
     16,   0,   3,   0,   0,   0, 
     10,   0,  16,   0,   4,   0, 
      0,   0,  25,   0,   0,   5, 
     18,   0,  16,   0,   4,   0, 
      0,   0,  10,   0,  16,   0, 
      4,   0,   0,   0,  56,   0, 
      0,   8,  18,   0,  16,   0, 
      4,   0,   0,   0,  10,   0, 
     16,   0,   4,   0,   0,   0, 
     10, 128,  32,   0,   1,   0, 
      0,   0,  14,   0,   0,   0, 
     56,   0,   0,   9, 226,   0, 
     16,   0,   4,   0,   0,   0, 
      6, 137,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      6, 137,  32,   0,   1,   0, 
      0,   0,   2,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   4,   0,   0,   0, 
      6,   0,  16,   0,   4,   0, 
      0,   0, 150,   7,  16,   0, 
      4,   0,   0,   0,  50,   0, 
      0,   9, 226,   0,  16,   0, 
      3,   0,   0,   0,  86,  14, 
     16,   0,   3,   0,   0,   0, 
    246,  15,  16,   0,   2,   0, 
      0,   0,   6,   9,  16,   0, 
      4,   0,   0,   0,  16,  32, 
      0,   8, 130,   0,  16,   0, 
      2,   0,   0,   0,  70, 130, 
     32,   0,   1,   0,   0,   0, 
     11,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   8, 114,   0, 
     16,   0,   4,   0,   0,   0, 
    246,  15,  16,   0,   2,   0, 
      0,   0,  70, 130,  32,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,  50,  32,   0,   9, 
    114,   0,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  50,   0,   0,  10, 
    114,   0,  16,   0,   4,   0, 
      0,   0,  70,  18,  16,   0, 
      5,   0,   0,   0, 246,  15, 
     16,   0,   1,   0,   0,   0, 
     70, 130,  32,   0,   1,   0, 
      0,   0,  11,   0,   0,   0, 
     16,   0,   0,   7, 130,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  68,   0, 
      0,   5, 130,   0,  16,   0, 
      1,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     56,   0,   0,   7, 114,   0, 
     16,   0,   4,   0,   0,   0, 
    246,  15,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      4,   0,   0,   0,  16,  32, 
      0,   7,  18,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   4,   0, 
      0,   0,  47,   0,   0,   5, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   7,  18,   0,  16,   0, 
      1,   0,   0,   0,  10,   0, 
     16,   0,   1,   0,   0,   0, 
     10,   0,  16,   0,   3,   0, 
      0,   0,  25,   0,   0,   5, 
     18,   0,  16,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      1,   0,   0,   0,  56,   0, 
      0,   8,  18,   0,  16,   0, 
      1,   0,   0,   0,  10,   0, 
     16,   0,   1,   0,   0,   0, 
     10, 128,  32,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
     56,   0,   0,   9, 226,   0, 
     16,   0,   1,   0,   0,   0, 
      6, 137,  32,   0,   0,   0, 
      0,   0,   2,   0,   0,   0, 
      6, 137,  32,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
     50,   0,   0,   9, 114,   0, 
     16,   0,   1,   0,   0,   0, 
    150,   7,  16,   0,   1,   0, 
      0,   0,   6,   0,  16,   0, 
      1,   0,   0,   0, 150,   7, 
     16,   0,   3,   0,   0,   0, 
     50,   0,   0,   9, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   2,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     54,   0,   0,   5, 130,  32, 
     16,   0,   0,   0,   0,   0, 
     58,   0,  16,   0,   0,   0, 
      0,   0,  62,   0,   0,   1, 
     53,  16,   0,   0,  60,   1, 
      0,   0,  23,   0,   1,   0, 
     41, 156,  18,   0, 120,   1, 
    237,  88, 207, 111,  27,  69, 
     20, 126, 179,  94, 175, 215, 
    246, 238, 236, 122, 253, 163, 
    107, 215, 118,  55,  27, 119, 
    227,   6,  55, 138, 162,   0, 
    105,  85, 141, 160,  41,  84, 
    106, 144,  82, 209,  28, 170, 
    202,  41,  77,  90, 139,   6, 
    218,  38, 106, 138, 212,   3, 
     90, 210, 170,   2,  84, 133, 
    170, 112,  42, 130,  35, 130, 
    254,   5,  20,  56,  36, 101, 
     79,  43,  78,  37, 226,  15, 
    224, 130, 196, 145,  99, 145, 
     80, 203, 123, 235, 117, 112, 
     11, 189,  89,   2, 161, 124, 
    210, 247, 222, 124, 179, 111, 
    102, 222, 206, 236,  30, 222, 
    124, 110,  65, 132, 223,  63, 
    154, 254, 133, 188, 209, 170, 
    189, 243,  64,   1,  72,  98, 
    155,  33, 201,  19, 238, 232, 
    100,   1, 166, 114, 100,   1, 
     26, 100,  40,  64,   2, 216, 
    141, 174, 133,  60, 148,   0, 
    120,   9,  61,  61, 107, 198, 
     60, 112, 107, 122, 122, 235, 
    171,  87, 166, 177,   9,  19, 
    200,  42,  50, 136, 249,  37, 
    178, 128, 252,  12,  89,  67, 
    210, 116, 132, 158,  39, 164, 
    200,  32,  40,  15,  92, 106, 
     27,  54, 242,  36, 178, 136, 
    164, 120, 210,   6, 146,  64, 
    113, 253, 115,  64, 135, 204, 
     63, 227,  59,  36, 229, 255, 
     44,  80, 110, 189, 185, 200, 
     83, 158,   4, 122, 223, 127, 
     27, 221, 188, 254, 178, 184, 
    253, 219, 231,  68, 160, 243, 
    232,   7,  71, 118, 163,   1, 
    126,  50, 201,   2, 200, 100, 
     16, 191, 198, 186, 119, 150, 
    247, 145, 207, 194,  99,   4, 
    157,  91,  63, 122, 154, 230, 
     83,  24, 158, 132, 138,  94, 
    202,   3, 224, 188,  74,  98, 
     36,  58,  32,  37, 249,  98, 
    247, 163, 248, 159, 163, 183, 
    167, 228, 233,  91,  60, 142, 
    236, 125, 155, 132, 222, 243, 
     31, 200, 192, 218,  38, 241, 
    182,  13,  15,  73, 245,  52, 
     67, 221,  29, 211, 213,   9, 
    210, 184, 157,  79, 104, 252, 
     41, 140,  17,  56, 173, 101, 
    165, 211,  70,  21, 199, 227, 
    225, 162, 110, 163, 110, 247, 
    233,  83, 168,  79, 245, 233, 
     51, 168, 207, 244, 233,  69, 
    212, 139,  61, 221, 155, 223, 
    136, 214, 211, 146, 116, 214, 
    216, 233, 255, 151, 185, 147, 
    227,  96, 184, 147, 227,  96, 
    184, 147, 227,  96, 184, 147, 
    227,  96, 184, 147, 227,  96, 
    184, 147, 227,  96, 184, 147, 
    227, 192,   8, 190, 124, 119, 
    195, 207,  60, 218,   0,  38, 
    125,  47,  37, 254, 216,   0, 
     89,  13,  33, 169, 133,  76, 
     78, 135,  44, 169, 135, 239, 
    193, 250,  38,  24, 107, 191, 
     73, 210,   2, 152, 108, 237, 
     62,  36, 236, 144,  37, 202, 
    225, 138, 177, 190, 153, 212, 
     51, 124,  45,  35, 191, 219, 
    124, 235, 238, 205, 175, 225, 
    198, 166, 223, 124, 244,  65, 
     52,  23, 183, 163, 113,  77, 
    118,  61,   0, 189,  26,  50, 
     94,  14,  27, 236,  70,   0, 
    154,  19,  50, 189,  22,  42, 
    186, 197,  91, 236, 253, 128, 
    105,  67,  97, 202, 176, 132, 
    154, 179,   4, 100, 154,  97, 
    122, 222, 242,  33, 221,  10, 
     89, 102,  95,  52,  94, 131, 
    235,  91,  74, 190, 130, 181, 
    192, 100, 200, 210, 251, 195, 
     76, 177, 202, 141, 168, 111, 
     20, 203, 130, 235,  91, 169, 
    124,   9, 180, 178, 203, 153, 
    250, 124, 152, 221,  85,  21, 
     86, 212, 231, 129, 177, 199, 
    227,   5, 108, 171, 121,  11, 
    204,  33,  87,  40, 216,  86, 
    242,   7,  65, 223,  93,  21, 
    197, 168, 223,   5, 107, 175, 
     39,  10, 251,  92, 145,  66, 
    157, 202, 191,   0, 138, 222, 
    226, 230, 199, 137, 128, 207, 
     87, 253, 226, 115, 158, 200, 
    205, 187, 190,  26, 197,  78, 
     64, 202, 104, 137,  76, 205, 
    226, 249, 249, 130, 175,  13, 
    219,  92, 205, 181, 132, 204, 
    110,   6,  42,  91,  15, 178, 
    181,  18,  55, 138, 117, 110, 
     14,  59,  60,  93, 182, 121, 
    105, 222, 243, 129, 221,  10, 
    212, 220, 237,  96, 234,  90, 
     50, 208, 107,  21, 110,  97, 
    222, 233,  61, 117,  94,  24, 
    118, 121, 118, 200,  22, 202, 
    136, 198,  33, 247,  97, 160, 
    177,  79, 130, 201, 107, 169, 
     32,  99,  57, 188,  88,  44, 
    240, 108, 173,  46,  30,  75, 
     85, 127, 215, 189,  31, 167, 
     52, 117, 109,  75,  31, 158, 
    144,  83,  35, 156, 167, 117, 
    141,  31,  98,  16, 164,  75, 
    142,  48, 168, 191,  40, 100, 
    218, 159,  84, 181,  80, 213, 
    102, 109,  95,  29,  49, 121, 
    214, 208, 132, 137, 207, 212, 
    202,  97,  44,  15, 170,  33, 
    176, 169,  16, 139, 135, 208, 
    152, 173, 251, 138, 229, 242, 
     12, 230, 166, 208, 216,  92, 
     69,  46,  56,  38,  47,  58, 
     13,  94, 114,  28, 206, 160, 
     22,  50, 118,  32, 100,  18, 
     11,  51, 123,  36, 158,  44, 
    185,  66, 155, 177, 125,  91, 
    170, 251, 101, 201, 243,  43, 
     82, 211, 231, 150, 197, 149, 
     89, 205,  87,  13, 147,  91, 
    181,   6,  55, 153, 195, 171, 
    210, 168,  95, 147,  90, 126, 
     93,  26, 243, 217, 140, 228, 
     59, 210, 184,  63,  36,  77, 
    248, 174,  52, 233, 231, 112, 
     29, 185, 242, 170, 156, 181, 
    109, 238, 212, 235, 124, 200, 
    243, 184, 219, 108, 114, 189, 
    100, 137,  12, 190, 139,  57, 
    106, 138,  92, 171,  33, 172, 
     49, 124,  31,  73, 226, 133, 
    241,   2,  47,  78, 148, 120, 
    105, 114, 148, 219, 110, 139, 
    151, 221,  49,  94, 113,  93, 
    174, 225, 158, 105,  35,  30, 
    215, 246, 217,  60, 141, 115, 
    106,  21,  79,  86, 102,  52, 
    191,  33,  85, 252, 189, 152, 
    151, 135, 107, 150,  12,  83, 
    236, 170,  53,  68, 142,  57, 
     34, 147, 168, 139, 108, 194, 
     19, 197, 132,  45,  26, 150, 
    196, 247,  90,   5, 238,  97, 
    238, 160, 105, 220, 169, 148, 
    248,  80, 179, 194, 221, 113, 
    151, 171,  56,  23,  51,  92, 
    217,  66, 159, 169,  29, 147, 
    105, 223, 210, 236, 176, 156, 
    213, 235,  66, 215, 241, 236, 
    117,  91, 168, 201, 186, 176, 
     82, 158,  48, 211, 182, 104, 
    202, 143,  54, 176, 206, 121, 
    162,  78,   2, 184, 182,  89, 
     38,  79,   5, 218, 211,  80, 
    163, 128, 109,  68,  74, 102, 
     84, 210, 110,  35,  26, 134, 
    125,  26, 249,  24,  18,   5, 
     98,  95,  92,  74,  71,  88, 
    139, 239,  75, 142, 199, 126, 
     28, 153,  70,  50, 172, 214, 
     41, 188, 123, 127, 209,  45, 
    212, 233, 142,  67,   6,   5, 
     45, 192, 183, 159,  30,  42, 
    172,  31, 187, 145, 165,  54, 
    225, 155, 120, 252, 157, 216, 
     59, 200, 254, 181,   1, 190, 
     32, 243,  55, 252,  28, 199, 
     63, 136,  61, 229, 134,  31, 
     24, 240, 104,  53,   4,  93, 
     10,  16, 226, 123, 160, 135, 
    113,  28, 189,  43,  45, 254, 
    116,  30, 118,  28, 215,  70, 
     82, 166, 211,   7, 219, 175, 
    119,  86, 150,  87, 219,  39, 
     23, 151, 175, 238, 127, 121, 
    238, 232, 254,  19,  11,  23, 
     87,  46, 116,  86, 219,  51, 
     75,  87,  86, 219,  71, 150, 
     46, 119, 206,  94,  57,  57, 
     55, 211,  94, 189, 124, 182, 
    125, 226, 252, 194, 185, 206, 
    229, 213, 246, 244, 242, 197, 
    149, 165,  11, 157, 115, 209, 
    160, 217,  75, 157,  35,  71, 
     79, 188, 118, 252, 252, 242, 
    165,  55, 223, 184, 184, 176, 
    116, 105, 238, 234, 220, 219, 
     99,  43, 231,  22, 225,  79, 
    223, 148, 108, 123,  88,  72, 
     83,  72,   8,   0,   0,   0, 
    185, 153,  60,  20, 140,  74, 
    132,  11,  88,  80,  68,  80, 
     91,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  68,  71,  83,  76,  80, 
    104, 111, 110, 103,  95, 109, 
     97, 105, 110,  84, 120,  84, 
    107,  46, 112, 100,  98
};
