#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// COLOR                    1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[91]
// Embedded Data:
//  0x0000005b - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x00000056 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
mov o0.xyzw, cb0[0].xyzw
dp4_sat o1.w, v0.xyzw, cb0[3].xyzw
mov o1.xyz, l(0,0,0,0)
mov o2.xy, v1.xyxx
dp4 o3.x, v0.xyzw, cb0[4].xyzw
dp4 o3.y, v0.xyzw, cb0[5].xyzw
dp4 o3.z, v0.xyzw, cb0[6].xyzw
dp4 o3.w, v0.xyzw, cb0[7].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[91], bundle is:[164] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneAlphaTestEffect_VSAlphaTest.pdb
// Shader Semantic Hash      : 0x2d14305ae4b8284c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 172 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 13;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000004
SVOC:VS_EXPORT_COUNT        = 2
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x0c         // 00000000000C: C302010C
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x1c         // 000000000010: C28A011C
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s7, v7                          // 00000000001C: 0E000E07
  v_mul_legacy_f32  v1, s11, v7                         // 000000000020: 0E020E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000024: 0E040E0F
  v_mul_legacy_f32  v3, s19, v7                         // 000000000028: 0E060E13
  v_mul_legacy_f32  v7, s23, v7                         // 00000000002C: 0E0E0E17
  v_mac_f32     v0, s6, v6                              // 000000000030: 3E000C06
  v_mac_legacy_f32  v1, s10, v6                         // 000000000034: 0C020C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000038: 0C040C0E
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v7, s22, v6                         // 000000000040: 0C0E0C16
  v_mac_f32     v0, s5, v5                              // 000000000044: 3E000A05
  v_mac_legacy_f32  v1, s9, v5                          // 000000000048: 0C020A09
  v_mac_legacy_f32  v2, s13, v5                         // 00000000004C: 0C040A0D
  v_mac_legacy_f32  v3, s17, v5                         // 000000000050: 0C060A11
  v_mac_legacy_f32  v7, s21, v5                         // 000000000054: 0C0E0A15
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 000000000058: D2800800 04000904
  v_mac_legacy_f32  v1, s8, v4                          // 000000000060: 0C020808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000064: 0C04080C
  v_mac_legacy_f32  v3, s16, v4                         // 000000000068: 0C060810
  v_mac_legacy_f32  v7, s20, v4                         // 00000000006C: 0C0E0814
  v_mov_b32     v4, s0                                  // 000000000070: 7E080200
  v_mov_b32     v5, s1                                  // 000000000074: 7E0A0201
  v_mov_b32     v6, s2                                  // 000000000078: 7E0C0202
  v_mov_b32     v10, s3                                 // 00000000007C: 7E140203
  v_mov_b32     v11, 0                                  // 000000000080: 7E160280
  v_mov_b32     v12, 1.0                                // 000000000084: 7E1802F2
  exp           pos0, v1, v2, v3, v7 done               // 000000000088: F80008CF 07030201
  exp           param0, v4, v5, v6, v10                 // 000000000090: F800020F 0A060504
  exp           param1, v11, v11, v11, v0               // 000000000098: F800021F 000B0B0B
  exp           param2, v8, v9, v11, v12                // 0000000000A0: F800022F 0C0B0908
  s_endpgm                                              // 0000000000A8: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   13
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   83
//  CycleSimNWaves:             83
//  Code Size:                  172
//Assembler Counts:
//  num_32bit_ops                     : 33
//  num_64bit_ops                     : 5
//  num_alu                           : 26
//  num_fc                            : 8
//  num_inst_exp                      : 4
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 6
//  num_inst_vop2                     : 19
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 4
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 13
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 172
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 83
// m_uCycleSimNWaves                 : 83

// Assembler Counts:
// num_32bit_ops                     : 33
// num_64bit_ops                     : 5
// num_alu                           : 26
// num_fc                            : 8
// num_inst_exp                      : 4
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 6
// num_inst_vop2                     : 19
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 4
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[257], bundle is:[177] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneAlphaTestEffect_VSAlphaTest.pdb
// Shader Semantic Hash      : 0x2d14305ae4b8284c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 256 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 10;
NumSgprs             = 34;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 16
; esGsRingItemSize          = 16

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x0c       // 00000000000C: C306090C
  s_buffer_load_dwordx4  s[28:31], s[8:11], 0x1c        // 000000000010: C28E091C
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000014: BF8C0070
  v_mul_legacy_f32  v0, s19, v7                         // 000000000018: 0E000E13
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 00000000001C: C080030C
  v_mac_legacy_f32  v0, s18, v6                         // 000000000020: 0C000C12
  v_mul_legacy_f32  v1, s23, v7                         // 000000000024: 0E020E17
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x00         // 000000000028: C2840900
  v_mac_legacy_f32  v0, s17, v5                         // 00000000002C: 0C000A11
  v_mac_legacy_f32  v1, s22, v6                         // 000000000030: 0C020C16
  v_mul_legacy_f32  v2, s27, v7                         // 000000000034: 0E040E1B
  v_mac_legacy_f32  v0, s16, v4                         // 000000000038: 0C000810
  v_mac_legacy_f32  v1, s21, v5                         // 00000000003C: 0C020A15
  v_mac_legacy_f32  v2, s26, v6                         // 000000000040: 0C040C1A
  v_mul_legacy_f32  v3, s31, v7                         // 000000000044: 0E060E1F
  v_mac_legacy_f32  v1, s20, v4                         // 000000000048: 0C020814
  v_mac_legacy_f32  v2, s25, v5                         // 00000000004C: 0C040A19
  v_mac_legacy_f32  v3, s30, v6                         // 000000000050: 0C060C1E
  v_mac_legacy_f32  v2, s24, v4                         // 000000000054: 0C040818
  v_mac_legacy_f32  v3, s29, v5                         // 000000000058: 0C060A1D
  v_mac_legacy_f32  v3, s28, v4                         // 00000000005C: 0C06081C
  s_waitcnt     lgkmcnt(0)                              // 000000000060: BF8C007F
  buffer_store_dword  v0, v0, s[0:3], s4 offset:48 glc slc // 000000000064: E0704030 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:52 glc slc // 00000000006C: E0704034 04400100
  v_mov_b32     v0, s8                                  // 000000000074: 7E000208
  buffer_store_dword  v2, v0, s[0:3], s4 offset:56 glc slc // 000000000078: E0704038 04400200
  v_mov_b32     v1, s9                                  // 000000000080: 7E020209
  buffer_store_dword  v3, v0, s[0:3], s4 offset:60 glc slc // 000000000084: E070403C 04400300
  v_mov_b32     v2, s10                                 // 00000000008C: 7E04020A
  buffer_store_dword  v0, v0, s[0:3], s4 glc slc        // 000000000090: E0704000 04400000
  v_mov_b32     v0, s11                                 // 000000000098: 7E00020B
  v_mul_legacy_f32  v3, s15, v7                         // 00000000009C: 0E060E0F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:4 glc slc // 0000000000A0: E0704004 04400100
  v_mov_b32     v1, 0                                   // 0000000000A8: 7E020280
  v_mac_legacy_f32  v3, s14, v6                         // 0000000000AC: 0C060C0E
  buffer_store_dword  v2, v0, s[0:3], s4 offset:8 glc slc // 0000000000B0: E0704008 04400200
  v_mac_legacy_f32  v3, s13, v5                         // 0000000000B8: 0C060A0D
  buffer_store_dword  v0, v0, s[0:3], s4 offset:12 glc slc // 0000000000BC: E070400C 04400000
  v_mad_legacy_f32  v3, v4, s12, v3 clamp               // 0000000000C4: D2800803 040C1904
  buffer_store_dword  v1, v0, s[0:3], s4 offset:16 glc slc // 0000000000CC: E0704010 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:20 glc slc // 0000000000D4: E0704014 04400100
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 0000000000DC: E0704018 04400100
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 0000000000E4: E070401C 04400300
  buffer_store_dword  v8, v0, s[0:3], s4 offset:32 glc slc // 0000000000EC: E0704020 04400800
  buffer_store_dword  v9, v0, s[0:3], s4 offset:36 glc slc // 0000000000F4: E0704024 04400900
  s_endpgm                                              // 0000000000FC: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   10
//  NumSRegs:                   34
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   82
//  CycleSimNWaves:             82
//  Code Size:                  256
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 15
//  num_alu                           : 25
//  num_fc                            : 10
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 14
//  num_inst_sopp                     : 4
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 5
//  num_inst_vop2                     : 19
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 14
//  num_vmem_group                    : 8
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 10
// m_uNumSRegs                       : 34
// m_uSCCodeSize                     : 256
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 82
// m_uCycleSimNWaves                 : 82

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 15
// num_alu                           : 25
// num_fc                            : 10
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 14
// num_inst_sopp                     : 4
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 5
// num_inst_vop2                     : 19
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 5
// constant_literal_operands         : 0
// num_tex                           : 14
// num_vmem_group                    : 8
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[436], bundle is:[169] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneAlphaTestEffect_VSAlphaTest.pdb
// Shader Semantic Hash      : 0x2d14305ae4b8284c
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  3, v[8:9]
; Output Semantic Mappings
;   [0] position,  usageIdx 3, paramIdx 3, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0

codeLenInByte        = 204 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 11;
NumSgprs             = 26;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 16
; lsStride                  = 64

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x0c         // 00000000000C: C302010C
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x1c         // 000000000010: C28A011C
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x00           // 000000000014: C2800100
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000018: BF8C0070
  v_mul_legacy_f32  v0, s11, v7                         // 00000000001C: 0E000E0B
  v_mul_legacy_f32  v2, s15, v7                         // 000000000020: 0E040E0F
  v_mac_legacy_f32  v0, s10, v6                         // 000000000024: 0C000C0A
  v_mac_legacy_f32  v2, s14, v6                         // 000000000028: 0C040C0E
  v_mul_legacy_f32  v3, s19, v7                         // 00000000002C: 0E060E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000030: 0E140E17
  v_mac_legacy_f32  v0, s9, v5                          // 000000000034: 0C000A09
  v_mac_legacy_f32  v2, s13, v5                         // 000000000038: 0C040A0D
  v_mac_legacy_f32  v3, s18, v6                         // 00000000003C: 0C060C12
  v_mac_legacy_f32  v10, s22, v6                        // 000000000040: 0C140C16
  s_mov_b32     m0, 0x00010000                          // 000000000044: BEFC03FF 00010000
  v_mac_legacy_f32  v0, s8, v4                          // 00000000004C: 0C000808
  v_mac_legacy_f32  v2, s12, v4                         // 000000000050: 0C04080C
  v_mac_legacy_f32  v3, s17, v5                         // 000000000054: 0C060A11
  v_mac_legacy_f32  v10, s21, v5                        // 000000000058: 0C140A15
  v_lshlrev_b32  v1, 6, v1                              // 00000000005C: 34020286
  v_mac_legacy_f32  v3, s16, v4                         // 000000000060: 0C060810
  v_mac_legacy_f32  v10, s20, v4                        // 000000000064: 0C140814
  ds_write2_b32  v1, v0, v2 offset0:12 offset1:13       // 000000000068: D8380D0C 00020001
  v_mul_legacy_f32  v0, s7, v7                          // 000000000070: 0E000E07
  ds_write2_b32  v1, v3, v10 offset0:14 offset1:15      // 000000000074: D8380F0E 000A0301
  v_mov_b32     v2, s0                                  // 00000000007C: 7E040200
  v_mov_b32     v3, s1                                  // 000000000080: 7E060201
  v_mac_legacy_f32  v0, s6, v6                          // 000000000084: 0C000C06
  ds_write2_b32  v1, v2, v3 offset1:1                   // 000000000088: D8380100 00030201
  v_mov_b32     v2, s2                                  // 000000000090: 7E040202
  v_mov_b32     v3, s3                                  // 000000000094: 7E060203
  v_mac_legacy_f32  v0, s5, v5                          // 000000000098: 0C000A05
  ds_write2_b32  v1, v2, v3 offset0:2 offset1:3         // 00000000009C: D8380302 00030201
  v_mov_b32     v2, 0                                   // 0000000000A4: 7E040280
  v_mad_legacy_f32  v0, v4, s4, v0 clamp                // 0000000000A8: D2800800 04000904
  ds_write2_b32  v1, v2, v2 offset0:4 offset1:5         // 0000000000B0: D8380504 00020201
  ds_write2_b32  v1, v2, v0 offset0:6 offset1:7         // 0000000000B8: D8380706 00000201
  ds_write2_b32  v1, v8, v9 offset0:8 offset1:9         // 0000000000C0: D8380908 00090801
  s_endpgm                                              // 0000000000C8: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   11
//  NumSRegs:                   26
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   82
//  CycleSimNWaves:             82
//  Code Size:                  204
//Assembler Counts:
//  num_32bit_ops                     : 34
//  num_64bit_ops                     : 8
//  num_alu                           : 26
//  num_fc                            : 9
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 7
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 3
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 5
//  num_inst_vop2                     : 20
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 7
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 11
// m_uNumSRegs                       : 26
// m_uSCCodeSize                     : 204
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 82
// m_uCycleSimNWaves                 : 82

// Assembler Counts:
// num_32bit_ops                     : 34
// num_64bit_ops                     : 8
// num_alu                           : 26
// num_fc                            : 9
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 7
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 3
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 5
// num_inst_vop2                     : 20
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 4
// constant_literal_operands         : 0
// num_tex                           : 7
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE AlphaTestEffect_VSAlphaTest[] =
{
     68,  88,  66,  67, 135, 204, 
    115, 226, 185, 254, 174,  53, 
     62, 191, 111, 154,  19, 115, 
    127,  68,   1,   0,   0,   0, 
     24,  11,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    140,   0,   0,   0,  24,   1, 
      0,   0, 156,  10,   0,   0, 
    172,  10,   0,   0,  73,  83, 
     71,  78,  80,   0,   0,   0, 
      2,   0,   0,   0,   8,   0, 
      0,   0,  56,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  68,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  84,  69,  88,  67, 
     79,  79,  82,  68,   0, 171, 
    171, 171,  79,  83,  71,  78, 
    132,   0,   0,   0,   4,   0, 
      0,   0,   8,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
    104,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,  15,   0,   0,   0, 
    110,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   2,   0, 
      0,   0,   3,  12,   0,   0, 
    119,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   3,   0, 
      0,   0,  15,   0,   0,   0, 
     67,  79,  76,  79,  82,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0,  83,  86,  95, 
     80, 111, 115, 105, 116, 105, 
    111, 110,   0, 171,  83,  72, 
     69,  88, 124,   9,   0,   0, 
     80,   0,   1,   0,  95,   2, 
      0,   0,  53,  16,   0,   0, 
      5,   0,   0,   0,  91,   0, 
      0,   0,  80,   0,   1,   0, 
     86,   0,   0,   0, 106,   8, 
      0,   1,  89,   0,   0,   4, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   8,   0,   0,   0, 
     95,   0,   0,   3, 242,  16, 
     16,   0,   0,   0,   0,   0, 
     95,   0,   0,   3,  50,  16, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   0,   0,   0,   0, 
    101,   0,   0,   3, 242,  32, 
     16,   0,   1,   0,   0,   0, 
    101,   0,   0,   3,  50,  32, 
     16,   0,   2,   0,   0,   0, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   6, 242,  32,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,  32, 
      0,   8, 130,  32,  16,   0, 
      1,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
     54,   0,   0,   8, 114,  32, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
     50,  32,  16,   0,   2,   0, 
      0,   0,  70,  16,  16,   0, 
      1,   0,   0,   0,  17,   0, 
      0,   8,  18,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     17,   0,   0,   8,  34,  32, 
     16,   0,   3,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   5,   0, 
      0,   0,  17,   0,   0,   8, 
     66,  32,  16,   0,   3,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      6,   0,   0,   0,  17,   0, 
      0,   8, 130,  32,  16,   0, 
      3,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   7,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 166,   0,   0,   0, 
     23,   0,   1,   0,  32, 205, 
     22,   0, 120,   1, 237, 152, 
     77, 107,  19,  65,  24, 199, 
    103,  39, 219, 167, 155, 221, 
    233, 164,  47, 233, 155, 214, 
    190, 128,  72,  61,  84, 123, 
    213,  67, 233, 139, 226, 161, 
     66, 193,  20,   9, 178,  32, 
    105, 187, 177, 133, 212,  46, 
     77,  14, 158,  98, 124,  57, 
    137,  95,  64, 193, 187,   7, 
     63,  64,  47, 218,  82, 207, 
     34, 250,   9,   4, 253,   4, 
    158, 114, 211, 255, 179, 217, 
     41,  75, 106, 207,  10, 206, 
    143, 252, 230, 109, 119, 118, 
    158, 204, 204, 233, 249,  52, 
     34,  18,  38, 223, 124,  57, 
    224, 250, 251, 251,   7, 151, 
    203, 142,  16,  61, 220,   1, 
     46,  23,  32,  46, 114,  41, 
     68, 109, 152,  75,  33, 102, 
    185, 192, 123,  66,  10, 209, 
    135, 234,  28, 124,   7,  23, 
     33,  63,  51,  86, 171, 180, 
    252, 250,  85, 176, 124,  13, 
    237,  49, 216,  15,  75, 169, 
     51, 144, 215, 225, 185,  30, 
     52, 107, 101, 201, 113,   1, 
    120, 169,  44,   4, 135,  96, 
     22,  51, 255, 212, 119,  42, 
     92, 252, 153,  75, 144, 227, 
     63,  11, 142, 205, 192, 223, 
    229,  56, 153, 236, 248, 191, 
      2, 239, 145,  57,  39, 134, 
    207,  35, 139, 134, 102,  63, 
     39, 210, 115,  52, 251,  90, 
     78, 251, 230,  44, 143, 224, 
     89, 252,   2, 221, 123, 108, 
    250, 184,  14,  56, 155, 181, 
    121, 114, 158, 245,  19,  58, 
    132,   5,   9,  15,   9,   7, 
     77,  56,  52, 234, 133, 216, 
     68, 202,  67,  31,   6,  80, 
     65,  44,  76,   8, 144,  10, 
     16, 151, 132,   6, 224,  32, 
    196,  33,  19, 254,  19,  33, 
     62, 194,  93, 165,  81, 136, 
    139,  68, 227,  16, 129, 210, 
    121,  56,   1,  47, 192,  73, 
     56, 213, 249, 143, 124,  63, 
     24, 114,  58, 255, 144,  36, 
     71, 246, 255, 192, 123,  96, 
    238,  42, 159,  13, 107, 200, 
    182,  45,  22, 139, 197,  98, 
    177,  88,  44,  22, 139, 197, 
     98, 177,  88, 254,  22, 114, 
    230, 233,   7, 145, 107,  29, 
     61,  22,  47,  15, 149,  35, 
     63,  78,  56,  47, 142, 133, 
    211,  58, 142, 209, 239, 213, 
     66,   7,  90, 234, 130, 118, 
    245, 144,  38,  61, 170, 181, 
     38,  37,  22, 124,  37, 149, 
     86, 174,  26,  84, 164,  70, 
    208, 234, 241, 197,  66, 222, 
    151, 170, 207, 119, 213, 128, 
     79, 106, 216, 215,  74, 120, 
    173, 175, 110,  94, 184, 158, 
     39, 149, 242,  92, 213, 239, 
    145,  42, 122,  24, 151,  94, 
    211, 145, 126,  83,  74, 213, 
    204, 201,  98, 179,  37,  71, 
    154,  63, 229,  88, 243, 179, 
     39, 218, 142, 204, 245,  22, 
    164, 104, 187,  61, 228,  79, 
    161,  14, 130,  64,  92,  69, 
    237, 229,   3,  37, 196, 147, 
    195,  36, 117,  38, 147, 223, 
      9, 227, 156, 118, 234,  26, 
    227, 220, 103, 247,  88, 210, 
    118,  59,  57,  42, 195, 219, 
    228, 131,  66,  60,  79, 235, 
    139,  48,  15, 157,  36, 171, 
    211, 201, 235, 184, 105, 134, 
    235, 246, 236, 193, 143, 123, 
    243, 197,  57, 110,  51, 223, 
    210,  57,  71, 105,  61,  13, 
     17, 100, 134,  22,  23, 167, 
    240, 210,  60, 112,  59, 157, 
    199, 177, 114, 158,  72, 155, 
     76,  48,  39,  15, 193, 108, 
    250, 222, 116,  90, 115,  44, 
      1, 236, 142,  99,  49, 125, 
     30,  65, 142, 116, 229, 122, 
    120,  39, 138, 247, 234,  97, 
    121,  99, 239, 209, 220, 210, 
    250, 173, 185,  82, 101,  55, 
    174,  69, 245, 112, 117, 167, 
     81,  15, 111, 236, 236,  71, 
    155, 141, 242, 250, 106,  88, 
    223, 223,  12,  75, 219, 149, 
    173, 104, 191,  30, 174, 236, 
    237, 198,  59, 181, 104,  43, 
    153, 180, 246,  48,  90, 170, 
    197, 219, 149, 245, 168, 222, 
    184,  89, 173, 226, 245, 251, 
    119,  75,  39,  35,  87, 226, 
    173,  13, 241,  27,  44, 218, 
    100, 233,  53,  16,   0,   0, 
    179,   0,   0,   0,  23,   0, 
      1,   0,  16,  53,  23,   0, 
    120,   1, 237, 152, 207,  79, 
     19,  65,  20, 199,  95, 167, 
    227, 184,  91, 134, 165,  64, 
     41,  45, 148,  31,  26,  98, 
     48,  17,  83,  19,  76, 140, 
    241, 176, 128,  70,  13,  38, 
     36,  64,  12,  49, 155, 104, 
    129,  69,  72,  64,  54, 148, 
     68,  79, 181,  42,   7,  15, 
    198, 120, 245,  63, 240,  79, 
    240, 162,  52, 120, 213, 139, 
    241, 230, 197,  68,  19,  47, 
    254,  15, 250, 125, 203,  44, 
     52,  21, 207,  26,  51, 159, 
    244,  59, 111, 102, 246, 205, 
    204, 155,  31, 189, 188, 243, 
    189,  20, 243, 249, 229, 253, 
    239, 108, 191, 190, 185, 123, 
    122,  33,  69, 116, 140,  27, 
     64, 112,   1, 162,  28, 151, 
     68, 159, 122, 184,  36,  26, 
    229,   2, 126, 236, 144, 129, 
     57,   9, 113, 219, 135, 225, 
    111, 137,  62, 188,  63,  53, 
     73, 116, 102, 242,  58, 234, 
      3,  16, 251, 206,  26, 241, 
    152,  14, 168,   8, 113, 127, 
     43,  30,  36,  33, 134, 151, 
    106, 134, 227, 235, 134, 154, 
     73,  98, 230, 113,  14, 116, 
     64, 133, 139, 163,  57,   7, 
     29, 181, 118,   2, 199, 198, 
    243,  37,  36, 190, 241, 126, 
    255,  49, 248, 140, 146, 123, 
    138, 105,  57,  52, 222,  71, 
    114, 158, 145, 185, 199, 196, 
    165,  97, 218, 188,  63, 222, 
     91,   3, 250,  19,  63,  65, 
     50,  15, 195, 245, 113, 136, 
    225, 247, 162, 104, 166, 172, 
     82,  79, 178,  10,  13, 149, 
    134, 224, 160, 112,  57,  74, 
     65, 199,  33,  92, 142, 114, 
     33,  44, 166, 218,  32,  13, 
    181,  67,   8,  80, 225,  65, 
    168,  44, 212,   9, 117,  65, 
    184, 100, 133,  61,  41, 196, 
    167, 242,  16, 222, 171,  42, 
     64, 184,  24, 213,   7, 245, 
     67,  37,   8, 143,  75,  13, 
     66,  67, 102, 143, 105,  44, 
     12, 176, 100, 140,  74, 237, 
    239,  84,   9, 142, 240, 255, 
    135, 207, 160, 249,  63,  16, 
    159, 137,   1, 199,  27, 203, 
     98, 177,  88,  44,  22, 139, 
    197,  98, 177,  88,  44,  22, 
    139, 229, 111,  34,  78,  60, 
    126,  75, 233, 157, 198,  67, 
    122, 182, 171,  93, 245, 174, 
    228,  62, 223, 139,  80, 239, 
    246, 200, 211, 233, 122, 163, 
     75, 147, 238, 245, 132,  71, 
    238, 206,  94, 103, 134, 116, 
     94,  11, 221, 239,  73,  47, 
    235, 144, 238, 201,   8, 221, 
    167, 165,  30, 242, 148, 151, 
    115, 132,  46, 102, 164,  30, 
    212,  74,  23,  28, 169,   7, 
     50,  74, 151,  28, 165, 121, 
    222, 178,  31, 125,  33, 242, 
    229,  56, 219, 148,  47,  29, 
     65, 181,  11,  92,  23, 190, 
    116, 133, 168,  93, 226, 122, 
    218, 151,  25,  33, 107, 196, 
    117, 248, 182, 193, 167,   3, 
    243,  74, 110,  99,  76,  29, 
    126,  30, 230, 118, 184, 141, 
    113, 237, 152,  95, 115,  29, 
    190, 105, 167, 254,  81,  22, 
    181, 204, 114,  27, 190,  57, 
     99,  11, 198, 150, 216,  98, 
    254,  97, 182, 142,  47,  71, 
    216, 186, 190,  36, 122, 180, 
     27, 167, 227,  68, 252,  59, 
    160, 200,  41, 172, 150, 190, 
      2,  23,  45, 125, 113, 110, 
    167, 165,  47, 174, 203, 253, 
     28,  88,  66,  54, 207,  37, 
    209, 143, 120,  49, 162,  17, 
    200, 133,  82, 180, 159,  59, 
    227, 252, 145,  52,  25, 180, 
     27, 163, 175, 191, 221,  42, 
    231, 198, 184, 206,  92,  51, 
     99,  71, 141,  29, 134,  52, 
    116,   8, 103, 130, 127,  39, 
     50, 254, 119, 140, 229,  88, 
     57,  55, 229,  37, 217,  91, 
     78,  82, 130,  23, 230, 251, 
     83,  99,  57, 150,  54, 168, 
     53, 142,  87, 230, 123,   8, 
    113, 164,  83,  23, 131, 217, 
     48, 218, 172,   6,  11, 139, 
    155,  15, 198,  38, 230, 175, 
    142, 205,  85,  54, 162, 245, 
    176,  26,  76, 175, 109,  87, 
    131, 203, 107,  91, 225, 210, 
    246, 194, 252, 116,  80, 221, 
     90,  10, 230,  86,  43, 203, 
    225,  86,  53, 152, 218, 220, 
    136, 214, 214, 195, 229, 120, 
    208, 204, 189, 112,  98,  61, 
     90, 173, 204, 135, 213, 237, 
     43,  43,  43, 112, 191, 125, 
    115, 238, 160, 231, 108, 180, 
    188,  72, 191,   0, 131,  58, 
    124,  62,   0,   0,  53,  16, 
      0,   0, 171,   0,   0,   0, 
     23,   0,   1,   0,   0, 237, 
     22,   0, 120,   1, 237, 152, 
     59,  79,  20,  81,  20, 199, 
    207,  60,  56, 204,  14, 119, 
     47, 143,  29,  94, 138, 207, 
     88, 160,   9, 134, 194, 194, 
     24,  11,  30,  26,  77,  48, 
     33,   1,  98, 136, 153,  68, 
     23, 152,  21,  18, 144,   9, 
     75,  65, 181, 174, 154,  88, 
     24, 190, 128, 214, 246, 182, 
     54,   2, 193, 198, 194, 202, 
    202, 210,  68,  91, 191, 129, 
    201, 250,  63, 195, 157,  21, 
     55,  18,  74, 141, 185, 191, 
    236, 255,  62, 206, 125, 157, 
    123, 238, 108, 115, 190, 247, 
     81, 198, 155,  90, 173,  33, 
    245, 215, 119,  15,  47, 206, 
     59,  68, 109, 210,  57,  68, 
     26,  73,  73, 180, 221,  43, 
     37, 209, 176,  20, 152,  71, 
     46,  81,   7, 170,  19, 208, 
     71, 104,  12, 146, 177,  92, 
    149, 138, 158, 120, 245, 178, 
     52, 129,  38,  13,  64,  50, 
    119, 198, 232,  60,  20,  64, 
    178, 182,   0,   9, 237,  82, 
     28, 194, 147,   2, 224, 152, 
    223,  16, 255, 140,  75,  77, 
    124,  41,  64, 235,  30,  84, 
    150, 226, 207,  92, 130, 196, 
    167, 163,  16, 223, 132, 124, 
    207, 220, 207, 220, 254,  47, 
     33, 207, 145, 191, 147,  32, 
    239, 113,  24,  13, 229, 241, 
    188, 110, 222,  81, 214,   8, 
     91, 166,  47, 177, 144, 187, 
    237,  65,  71, 209,   0, 121, 
    172, 115, 242, 190, 188,  19, 
    211, 244,  40,  59, 207, 186, 
     24,  29, 198, 129, 140,  65, 
    198, 131,  49,  67,   8,  36, 
    227, 209,  25, 129, 228,  16, 
    194, 129, 172, 160,  34,   4, 
      7, 185,  19, 234, 130, 186, 
    161,  30, 168,   4, 225,  78, 
     12, 255,  24, 223,  42, 247, 
     67, 248, 144, 120,  16, 130, 
    163, 124,  18,  26, 130,  78, 
     65, 167, 161,  51, 198,  23, 
    239, 224, 166,  56,  50, 131, 
    157, 131, 155, 178,  43,  30, 
    254, 255,  72,  12, 228, 191, 
    149, 147, 197,   4,  72,  20, 
     16, 222,  12, 249, 175,  90, 
     44,  22, 139, 197,  98, 177, 
     88,  44,  22, 139, 197,  98, 
    177, 252,  45, 220, 115,  79, 
    119, 200, 171, 239,  61, 166, 
    237,  93, 229, 184, 239, 135, 
    156,  23, 251, 228, 212, 247, 
     83, 244,  59,  52, 233,  78, 
    237, 235,  80, 145, 210, 202, 
     87,  37, 205, 186,  95,  71, 
    186,  16, 146,  42, 134, 190, 
    234,  81, 172, 250,  84, 164, 
     26, 222, 143,  29, 201, 120, 
      4,   1,  41,  21, 248, 170, 
     59, 100, 213,  27,  70, 234, 
    185, 235,  94, 233,  10,  88, 
     69,  65, 164,  84, 241, 234, 
    103, 135,  92, 106, 199, 158, 
    186,  19, 109,  47, 196, 225, 
    126, 205, 113, 185, 198, 216, 
    159,  28, 216,  92, 143,  92, 
    216,  60, 216, 218, 112, 134, 
    235,  29, 216, 234, 176,  81, 
     80, 255, 228,  23, 200, 247, 
    219, 196, 230,  18, 183,  75, 
     77,  20,  20,  80,   7, 146, 
     45, 124, 178, 155, 165, 214, 
     96, 195, 175, 201, 160,  36, 
     98,  90, 108,  89,  94, 166, 
    197, 150, 181, 125, 153, 252, 
    139,  15, 217, 134,  68, 175, 
     77, 125,   1, 146, 147,  28, 
    147, 221, 147, 188, 143, 111, 
     50,  95, 119, 134, 223, 126, 
    187,  55,  26, 141,  72,  59, 
    195, 228, 123, 191, 152, 181, 
    103,  33,   5,  29, 199, 176, 
     89,  55,  96, 106, 241,  85, 
    114,  74,  58, 207,  20,  75, 
    114,  17, 220,  54, 227,  99, 
    166,  22,  95,  36, 167, 216, 
    234, 199,   3,  51, 158,  64, 
    226, 233, 228, 181, 120,  38, 
     73, 215, 171, 241, 252, 194, 
    250, 214, 200, 248, 220, 173, 
    145, 217, 242,  90, 186, 154, 
     84, 227, 169, 149, 205, 106, 
    124,  99, 101,  35,  89, 220, 
    156, 159, 155, 138, 171,  27, 
    139, 241, 236, 114, 121,  41, 
    217, 168, 198, 147, 235, 107, 
    233, 202, 106, 178, 148,  45, 
    154, 126, 148, 140, 175, 166, 
    203, 229, 185, 164, 186, 121, 
    179,  82, 193, 244, 251, 119, 
    103, 155, 150, 203, 233, 210, 
      2, 253,   4,   3, 159, 104, 
    202,   0,   0,   0,  88,  72, 
     83,  72,   8,   0,   0,   0, 
     76,  40, 184, 228,  90,  48, 
     20,  45,  88,  80,  68,  80, 
    100,   0,   0,   0,  67,  58, 
     92,  82, 101, 112, 111, 115, 
     92,  88,  98, 111, 120,  45, 
     65,  84,  71,  45,  83,  97, 
    109, 112, 108, 101, 115,  92, 
     75, 105, 116, 115,  92,  68, 
    105, 114, 101,  99, 116,  88, 
     84,  75,  92, 115, 114,  99, 
     92,  83, 104,  97, 100, 101, 
    114, 115,  92,  67, 111, 109, 
    112, 105, 108, 101, 100,  92, 
     88,  98, 111, 120,  79, 110, 
    101,  65, 108, 112, 104,  97, 
     84, 101, 115, 116,  69, 102, 
    102, 101,  99, 116,  95,  86, 
     83,  65, 108, 112, 104,  97, 
     84, 101, 115, 116,  46, 112, 
    100,  98
};
