#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler for Durango
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
//
vs_5_0
// Opaque Custom Data - XBOX Precompiled Shader Header
// First Precompiled Shader at offset:[183]
// Embedded Data:
//  0x000000b7 - Offset To First Precompiled Shader
//  0x00010050 - Original Shader Descriptor
//  0x000000b2 - Original Shader Size
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[13], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 2
mov o0.xy, v2.xyxx
dp4 r0.x, v0.xyzw, cb0[2].xyzw
dp4 r0.y, v0.xyzw, cb0[3].xyzw
dp4 r0.z, v0.xyzw, cb0[4].xyzw
mov r0.w, l(1.000000)
mov o1.xyzw, r0.xyzw
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r0.xyzx, cb0[6].xyzx
dp3 r1.y, r0.xyzx, cb0[7].xyzx
dp3 r1.z, r0.xyzx, cb0[8].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul o2.xyz, r0.xxxx, r1.xyzx
mov o3.xyz, l(1.000000,1.000000,1.000000,0)
mov o3.w, cb0[0].w
dp4 o4.x, v0.xyzw, cb0[9].xyzw
dp4 o4.y, v0.xyzw, cb0[10].xyzw
dp4 o4.z, v0.xyzw, cb0[11].xyzw
dp4 o4.w, v0.xyzw, cb0[12].xyzw
ret 
// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[183], bundle is:[192] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugBn.pdb
// Shader Semantic Hash      : 0x6db9a9c113fa5444
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [1] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [2] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [3] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 308 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000006
SVOC:VS_EXPORT_COUNT        = 3
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 4

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x20           // 00000000000C: C2820120
  s_buffer_load_dwordx4  s[8:11], s[0:3], 0x1c          // 000000000010: C284011C
  s_buffer_load_dwordx4  s[12:15], s[0:3], 0x18         // 000000000014: C2860118
  s_buffer_load_dwordx8  s[16:23], s[0:3], 0x08         // 000000000018: C2C80108
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x10         // 00000000001C: C28C0110
  s_buffer_load_dwordx16  s[28:43], s[0:3], 0x24        // 000000000020: C30E0124
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_f32     v0, v10, 2.0, -1.0                      // 000000000028: D2820000 03CDE90A
  v_mad_f32     v1, v9, 2.0, -1.0                       // 000000000030: D2820001 03CDE909
  s_waitcnt     lgkmcnt(0)                              // 000000000038: BF8C007F
  v_mul_legacy_f32  v2, s6, v0                          // 00000000003C: 0E040006
  v_mad_f32     v3, v8, 2.0, -1.0                       // 000000000040: D2820003 03CDE908
  v_mul_legacy_f32  v8, s10, v0                         // 000000000048: 0E10000A
  v_mac_f32     v2, s5, v1                              // 00000000004C: 3E040205
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 000000000050: C2000103
  v_mul_legacy_f32  v0, s14, v0                         // 000000000054: 0E00000E
  v_mac_f32     v8, s9, v1                              // 000000000058: 3E100209
  v_mac_f32     v2, s4, v3                              // 00000000005C: 3E040604
  v_mac_f32     v0, s13, v1                             // 000000000060: 3E00020D
  v_mac_f32     v8, s8, v3                              // 000000000064: 3E100608
  v_mul_legacy_f32  v1, v2, v2                          // 000000000068: 0E020502
  v_mul_legacy_f32  v9, s19, v7                         // 00000000006C: 0E120E13
  v_mul_legacy_f32  v10, s23, v7                        // 000000000070: 0E140E17
  v_mul_legacy_f32  v11, s27, v7                        // 000000000074: 0E160E1B
  v_mac_f32     v0, s12, v3                             // 000000000078: 3E00060C
  v_mac_f32     v1, v8, v8                              // 00000000007C: 3E021108
  v_mul_legacy_f32  v3, s31, v7                         // 000000000080: 0E060E1F
  v_mul_legacy_f32  v14, s35, v7                        // 000000000084: 0E1C0E23
  v_mul_legacy_f32  v15, s39, v7                        // 000000000088: 0E1E0E27
  v_mul_legacy_f32  v7, s43, v7                         // 00000000008C: 0E0E0E2B
  v_mac_f32     v9, s18, v6                             // 000000000090: 3E120C12
  v_mac_f32     v10, s22, v6                            // 000000000094: 3E140C16
  v_mac_f32     v11, s26, v6                            // 000000000098: 3E160C1A
  v_mac_f32     v1, v0, v0                              // 00000000009C: 3E020100
  v_mac_legacy_f32  v3, s30, v6                         // 0000000000A0: 0C060C1E
  v_mac_legacy_f32  v14, s34, v6                        // 0000000000A4: 0C1C0C22
  v_mac_legacy_f32  v15, s38, v6                        // 0000000000A8: 0C1E0C26
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000AC: 0C0E0C2A
  v_mac_f32     v9, s17, v5                             // 0000000000B0: 3E120A11
  v_mac_f32     v10, s21, v5                            // 0000000000B4: 3E140A15
  v_mac_f32     v11, s25, v5                            // 0000000000B8: 3E160A19
  v_rsq_f32     v1, v1                                  // 0000000000BC: 7E025D01
  v_mac_legacy_f32  v3, s29, v5                         // 0000000000C0: 0C060A1D
  v_mac_legacy_f32  v14, s33, v5                        // 0000000000C4: 0C1C0A21
  v_mac_legacy_f32  v15, s37, v5                        // 0000000000C8: 0C1E0A25
  v_mac_legacy_f32  v7, s41, v5                         // 0000000000CC: 0C0E0A29
  v_mac_f32     v9, s16, v4                             // 0000000000D0: 3E120810
  v_mac_f32     v10, s20, v4                            // 0000000000D4: 3E140814
  v_mac_f32     v11, s24, v4                            // 0000000000D8: 3E160818
  v_mul_legacy_f32  v0, v0, v1                          // 0000000000DC: 0E000300
  v_mul_legacy_f32  v5, v8, v1                          // 0000000000E0: 0E0A0308
  v_mul_legacy_f32  v1, v2, v1                          // 0000000000E4: 0E020302
  v_mac_legacy_f32  v3, s28, v4                         // 0000000000E8: 0C06081C
  v_mac_legacy_f32  v14, s32, v4                        // 0000000000EC: 0C1C0820
  v_mac_legacy_f32  v15, s36, v4                        // 0000000000F0: 0C1E0824
  v_mac_legacy_f32  v7, s40, v4                         // 0000000000F4: 0C0E0828
  v_mov_b32     v2, 0                                   // 0000000000F8: 7E040280
  v_mov_b32     v4, 1.0                                 // 0000000000FC: 7E0802F2
  s_waitcnt     lgkmcnt(0)                              // 000000000100: BF8C007F
  v_mov_b32     v6, s0                                  // 000000000104: 7E0C0200
  exp           pos0, v3, v14, v15, v7 done             // 000000000108: F80008CF 070F0E03
  exp           param0, v12, v13, v2, v4                // 000000000110: F800020F 04020D0C
  exp           param1, v9, v10, v11, v4                // 000000000118: F800021F 040B0A09
  exp           param2, v0, v5, v1, v4                  // 000000000120: F800022F 04010500
  exp           param3, v4, v4, v4, v6                  // 000000000128: F800023F 06040404
  s_endpgm                                              // 000000000130: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   82
//  CycleSimNWaves:             82
//  Code Size:                  308
//Assembler Counts:
//  num_32bit_ops                     : 61
//  num_64bit_ops                     : 8
//  num_alu                           : 50
//  num_fc                            : 14
//  num_inst_exp                      : 5
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 4
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 5
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 308
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 82
// m_uCycleSimNWaves                 : 82

// Assembler Counts:
// num_32bit_ops                     : 61
// num_64bit_ops                     : 8
// num_alu                           : 50
// num_fc                            : 14
// num_inst_exp                      : 5
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 4
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 5
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[377], bundle is:[207] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (ES)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugBn.pdb
// Shader Semantic Hash      : 0x6db9a9c113fa5444
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 404 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 4;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = PTR_INTERNAL_GLOBAL_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[3]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 16;
NumSgprs             = 54;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; exportVertexSize          = 20
; esGsRingItemSize          = 20

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[8:11], s[2:3], 0x00                 // 000000000004: C0840300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[12:27], s[8:11], 0x24       // 00000000000C: C3060924
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000010: BF8C0070
  v_mul_legacy_f32  v0, s15, v7                         // 000000000014: 0E000E0F
  s_buffer_load_dwordx8  s[28:35], s[8:11], 0x08        // 000000000018: C2CE0908
  s_buffer_load_dwordx4  s[36:39], s[8:11], 0x20        // 00000000001C: C2920920
  s_load_dwordx4  s[0:3], s[2:3], 0x0c                  // 000000000020: C080030C
  v_mac_legacy_f32  v0, s14, v6                         // 000000000024: 0C000C0E
  v_mul_legacy_f32  v1, s19, v7                         // 000000000028: 0E020E13
  s_buffer_load_dwordx4  s[40:43], s[8:11], 0x1c        // 00000000002C: C294091C
  v_mac_legacy_f32  v0, s13, v5                         // 000000000030: 0C000A0D
  v_mac_legacy_f32  v1, s18, v6                         // 000000000034: 0C020C12
  v_mul_legacy_f32  v2, s23, v7                         // 000000000038: 0E040E17
  s_buffer_load_dwordx4  s[44:47], s[8:11], 0x10        // 00000000003C: C2960910
  s_buffer_load_dwordx4  s[48:51], s[8:11], 0x18        // 000000000040: C2980918
  v_mac_legacy_f32  v0, s12, v4                         // 000000000044: 0C00080C
  v_mac_legacy_f32  v1, s17, v5                         // 000000000048: 0C020A11
  v_mac_legacy_f32  v2, s22, v6                         // 00000000004C: 0C040C16
  v_mul_legacy_f32  v3, s27, v7                         // 000000000050: 0E060E1B
  v_mac_legacy_f32  v1, s16, v4                         // 000000000054: 0C020810
  v_mac_legacy_f32  v2, s21, v5                         // 000000000058: 0C040A15
  v_mac_legacy_f32  v3, s26, v6                         // 00000000005C: 0C060C1A
  v_mad_legacy_f32  v10, v10, 2.0, -1.0                 // 000000000060: D280000A 03CDE90A
  v_mac_legacy_f32  v2, s20, v4                         // 000000000068: 0C040814
  v_mac_legacy_f32  v3, s25, v5                         // 00000000006C: 0C060A19
  s_waitcnt     lgkmcnt(0)                              // 000000000070: BF8C007F
  v_mul_legacy_f32  v11, s31, v7                        // 000000000074: 0E160E1F
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 000000000078: D2800009 03CDE909
  v_mul_legacy_f32  v14, s38, v10                       // 000000000080: 0E1C1426
  v_mac_legacy_f32  v3, s24, v4                         // 000000000084: 0C060818
  buffer_store_dword  v0, v0, s[0:3], s4 offset:64 glc slc // 000000000088: E0704040 04400000
  v_mac_legacy_f32  v11, s30, v6                        // 000000000090: 0C160C1E
  v_mul_legacy_f32  v0, s35, v7                         // 000000000094: 0E000E23
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000098: D2800008 03CDE908
  v_mul_legacy_f32  v15, s42, v10                       // 0000000000A0: 0E1E142A
  v_mac_legacy_f32  v14, s37, v9                        // 0000000000A4: 0C1C1225
  buffer_store_dword  v1, v0, s[0:3], s4 offset:68 glc slc // 0000000000A8: E0704044 04400100
  v_mac_legacy_f32  v11, s29, v5                        // 0000000000B0: 0C160A1D
  v_mac_legacy_f32  v0, s34, v6                         // 0000000000B4: 0C000C22
  v_mul_legacy_f32  v1, s47, v7                         // 0000000000B8: 0E020E2F
  v_mul_legacy_f32  v7, s50, v10                        // 0000000000BC: 0E0E1432
  v_mac_legacy_f32  v15, s41, v9                        // 0000000000C0: 0C1E1229
  v_mac_legacy_f32  v14, s36, v8                        // 0000000000C4: 0C1C1024
  buffer_store_dword  v2, v0, s[0:3], s4 offset:72 glc slc // 0000000000C8: E0704048 04400200
  v_mac_legacy_f32  v11, s28, v4                        // 0000000000D0: 0C16081C
  v_mac_legacy_f32  v0, s33, v5                         // 0000000000D4: 0C000A21
  v_mac_legacy_f32  v1, s46, v6                         // 0000000000D8: 0C020C2E
  v_mac_legacy_f32  v7, s49, v9                         // 0000000000DC: 0C0E1231
  v_mac_legacy_f32  v15, s40, v8                        // 0000000000E0: 0C1E1028
  v_mul_legacy_f32  v2, v14, v14                        // 0000000000E4: 0E041D0E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:76 glc slc // 0000000000E8: E070404C 04400300
  v_mac_legacy_f32  v0, s32, v4                         // 0000000000F0: 0C000820
  v_mac_legacy_f32  v1, s45, v5                         // 0000000000F4: 0C020A2D
  v_mac_legacy_f32  v7, s48, v8                         // 0000000000F8: 0C0E1030
  v_mac_legacy_f32  v2, v15, v15                        // 0000000000FC: 0C041F0F
  buffer_store_dword  v12, v0, s[0:3], s4 glc slc       // 000000000100: E0704000 04400C00
  v_mac_legacy_f32  v1, s44, v4                         // 000000000108: 0C02082C
  v_mac_legacy_f32  v2, v7, v7                          // 00000000010C: 0C040F07
  buffer_store_dword  v13, v0, s[0:3], s4 offset:4 glc slc // 000000000110: E0704004 04400D00
  v_rsq_f32     v2, v2                                  // 000000000118: 7E045D02
  buffer_store_dword  v11, v0, s[0:3], s4 offset:16 glc slc // 00000000011C: E0704010 04400B00
  v_mov_b32     v3, 1.0                                 // 000000000124: 7E0602F2
  v_mul_legacy_f32  v4, v7, v2                          // 000000000128: 0E080507
  buffer_store_dword  v0, v0, s[0:3], s4 offset:20 glc slc // 00000000012C: E0704014 04400000
  s_buffer_load_dword  s5, s[8:11], 0x03                // 000000000134: C2028903
  v_mul_legacy_f32  v0, v15, v2                         // 000000000138: 0E00050F
  buffer_store_dword  v1, v0, s[0:3], s4 offset:24 glc slc // 00000000013C: E0704018 04400100
  v_mul_legacy_f32  v1, v14, v2                         // 000000000144: 0E02050E
  buffer_store_dword  v3, v0, s[0:3], s4 offset:28 glc slc // 000000000148: E070401C 04400300
  buffer_store_dword  v4, v0, s[0:3], s4 offset:32 glc slc // 000000000150: E0704020 04400400
  buffer_store_dword  v0, v0, s[0:3], s4 offset:36 glc slc // 000000000158: E0704024 04400000
  buffer_store_dword  v1, v0, s[0:3], s4 offset:40 glc slc // 000000000160: E0704028 04400100
  buffer_store_dword  v3, v0, s[0:3], s4 offset:48 glc slc // 000000000168: E0704030 04400300
  s_waitcnt     lgkmcnt(0)                              // 000000000170: BF8C007F
  v_mov_b32     v0, s5                                  // 000000000174: 7E000205
  buffer_store_dword  v3, v0, s[0:3], s4 offset:52 glc slc // 000000000178: E0704034 04400300
  buffer_store_dword  v3, v0, s[0:3], s4 offset:56 glc slc // 000000000180: E0704038 04400300
  buffer_store_dword  v0, v0, s[0:3], s4 offset:60 glc slc // 000000000188: E070403C 04400000
  s_endpgm                                              // 000000000190: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         36
//  WorkgroupSize:              64
//  NumVRegs:                   16
//  NumSRegs:                   54
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   36
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   85
//  CycleSimNWaves:             85
//  Code Size:                  404
//Assembler Counts:
//  num_32bit_ops                     : 61
//  num_64bit_ops                     : 20
//  num_alu                           : 49
//  num_fc                            : 15
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 0
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 17
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 1
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 0
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 17
//  num_vmem_group                    : 11
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 36
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 16
// m_uNumSRegs                       : 54
// m_uSCCodeSize                     : 404
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 36
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 85
// m_uCycleSimNWaves                 : 85

// Assembler Counts:
// num_32bit_ops                     : 61
// num_64bit_ops                     : 20
// num_alu                           : 49
// num_fc                            : 15
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 0
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 17
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 1
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 0
// num_inst_vop1                     : 3
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 9
// constant_literal_operands         : 0
// num_tex                           : 17
// num_vmem_group                    : 11
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Opaque Custom Data - XBOX Precompiled Shader Object
// Offset:[586], bundle is:[203] DWORDS.
// Disassembled Precompiled Shader Object:
// Shader Type               : (VS)
// Shader Hw Stage           : (LS)
// PDB Filename              : C:\Repos\Xbox-ATG-Samples\Kits\DirectXTK\src\Shaders\Compiled\XboxOneDebugEffect_VSDebugBn.pdb
// Shader Semantic Hash      : 0x6db9a9c113fa5444
//
// Shader Data:
; ----------------- VS Data ------------------------
; Input Semantic Mappings
;   [0] generic, usageIdx  0, channelMask 15, v[4:7]
;   [1] generic, usageIdx  1, channelMask  7, v[8:10]
;   [2] generic, usageIdx  2, channelMask  3, v[12:13]
; Output Semantic Mappings
;   [0] position,  usageIdx 4, paramIdx 4, paramSlot 0
;   [1] generic,  usageIdx 0, paramIdx 0, paramSlot 0
;   [2] generic,  usageIdx 1, paramIdx 1, paramSlot 0
;   [3] generic,  usageIdx 2, paramIdx 2, paramSlot 0
;   [4] generic,  usageIdx 3, paramIdx 3, paramSlot 0

codeLenInByte        = 356 bytes;

; launchModeFlags    = 0x0000000E
srdTableSupport      = TRUE
immediateSupportExt  = TRUE
srdTableSupportExt   = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_VERTEX_BUFFER_TABLE, Element=1 dwords, s[0x2:3]
;  userElements[1]      = PTR_EXTENDED_USER_DATA, ReferencedExtUserElements=1, s[0x2:3]
;  userElements[2]      = SUB_PTR_FETCH_SHADER, s[0x2:3]
extUserElementCount  = 1;
;  extUserElements 1[0] = IMM_CONST_BUFFER 0, offset 0x0:3 dwords
NumVgprs             = 18;
NumSgprs             = 46;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000001

; SPI_SHADER_PGM_RSRC2_VS = 0x00000008
SSPRV:USER_SGPR             = 4
; PA_CL_VS_OUT_CNTL       = 0x00000000
; SPI_VS_OUT_CONFIG       = 0x00000000
SVOC:VS_EXPORT_COUNT        = 0
SVOC:VS_HALF_PACK           = 0
SVOC:VS_EXPORTS_FOG         = 0
SVOC:VS_OUT_FOG_VEC_ADDR    = 0
; SPI_SHADER_POS_FORMAT     = 0x00000004
SSPF:POS0_EXPORT_FORMAT     = 4
SSPF:POS1_EXPORT_FORMAT     = 0
SSPF:POS2_EXPORT_FORMAT     = 0
SSPF:POS3_EXPORT_FORMAT     = 0
VGT_STRMOUT_CONFIG = 0x0
VGT_STRMOUT_CONFIG:RAST_STREAM = 0
VGT_STRMOUT_CONFIG:STREAMOUT_0_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_1_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_2_EN = 0
VGT_STRMOUT_CONFIG:STREAMOUT_3_EN = 0
; vgprCompCnt               = 1
; exportVertexSize          = 20
; lsStride                  = 80

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[2:3], s[2:3]                          // 000000000000: BE822102
  s_load_dwordx4  s[0:3], s[2:3], 0x00                  // 000000000004: C0800300
  s_waitcnt     lgkmcnt(0)                              // 000000000008: BF8C007F
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x24         // 00000000000C: C3020124
  s_buffer_load_dwordx4  s[20:23], s[0:3], 0x20         // 000000000010: C28A0120
  s_buffer_load_dwordx4  s[24:27], s[0:3], 0x1c         // 000000000014: C28C011C
  s_buffer_load_dwordx8  s[28:35], s[0:3], 0x08         // 000000000018: C2CE0108
  s_buffer_load_dwordx4  s[36:39], s[0:3], 0x18         // 00000000001C: C2920118
  s_buffer_load_dwordx4  s[40:43], s[0:3], 0x10         // 000000000020: C2940110
  s_waitcnt     vmcnt(0)                                // 000000000024: BF8C0F70
  v_mad_legacy_f32  v0, v10, 2.0, -1.0                  // 000000000028: D2800000 03CDE90A
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_mul_legacy_f32  v2, s7, v7                          // 000000000034: 0E040E07
  v_mul_legacy_f32  v3, s11, v7                         // 000000000038: 0E060E0B
  v_mad_legacy_f32  v9, v9, 2.0, -1.0                   // 00000000003C: D2800009 03CDE909
  v_mul_legacy_f32  v10, s22, v0                        // 000000000044: 0E140016
  v_mac_legacy_f32  v2, s6, v6                          // 000000000048: 0C040C06
  v_mac_legacy_f32  v3, s10, v6                         // 00000000004C: 0C060C0A
  v_mul_legacy_f32  v11, s15, v7                        // 000000000050: 0E160E0F
  v_mul_legacy_f32  v14, s19, v7                        // 000000000054: 0E1C0E13
  v_mad_legacy_f32  v8, v8, 2.0, -1.0                   // 000000000058: D2800008 03CDE908
  v_mul_legacy_f32  v15, s26, v0                        // 000000000060: 0E1E001A
  v_mac_legacy_f32  v10, s21, v9                        // 000000000064: 0C141215
  v_mac_legacy_f32  v2, s5, v5                          // 000000000068: 0C040A05
  v_mac_legacy_f32  v3, s9, v5                          // 00000000006C: 0C060A09
  v_mac_legacy_f32  v11, s14, v6                        // 000000000070: 0C160C0E
  v_mac_legacy_f32  v14, s18, v6                        // 000000000074: 0C1C0C12
  s_movk_i32    s5, 0x0050                              // 000000000078: B0050050
  s_mov_b32     m0, 0x00010000                          // 00000000007C: BEFC03FF 00010000
  v_mul_legacy_f32  v16, s31, v7                        // 000000000084: 0E200E1F
  v_mul_legacy_f32  v17, s35, v7                        // 000000000088: 0E220E23
  v_mul_legacy_f32  v0, s38, v0                         // 00000000008C: 0E000026
  v_mac_legacy_f32  v15, s25, v9                        // 000000000090: 0C1E1219
  v_mac_legacy_f32  v10, s20, v8                        // 000000000094: 0C141014
  v_mac_legacy_f32  v2, s4, v4                          // 000000000098: 0C040804
  v_mac_legacy_f32  v3, s8, v4                          // 00000000009C: 0C060808
  v_mac_legacy_f32  v11, s13, v5                        // 0000000000A0: 0C160A0D
  v_mac_legacy_f32  v14, s17, v5                        // 0000000000A4: 0C1C0A11
  v_mul_lo_i32  v1, v1, s5                              // 0000000000A8: D2D60001 00000B01
  v_mac_legacy_f32  v16, s30, v6                        // 0000000000B0: 0C200C1E
  v_mac_legacy_f32  v17, s34, v6                        // 0000000000B4: 0C220C22
  v_mul_legacy_f32  v7, s43, v7                         // 0000000000B8: 0E0E0E2B
  v_mac_legacy_f32  v0, s37, v9                         // 0000000000BC: 0C001225
  v_mac_legacy_f32  v15, s24, v8                        // 0000000000C0: 0C1E1018
  v_mul_legacy_f32  v9, v10, v10                        // 0000000000C4: 0E12150A
  v_mac_legacy_f32  v11, s12, v4                        // 0000000000C8: 0C16080C
  v_mac_legacy_f32  v14, s16, v4                        // 0000000000CC: 0C1C0810
  ds_write2_b32  v1, v2, v3 offset0:16 offset1:17       // 0000000000D0: D8381110 00030201
  v_mac_legacy_f32  v16, s29, v5                        // 0000000000D8: 0C200A1D
  v_mac_legacy_f32  v17, s33, v5                        // 0000000000DC: 0C220A21
  v_mac_legacy_f32  v7, s42, v6                         // 0000000000E0: 0C0E0C2A
  v_mac_legacy_f32  v0, s36, v8                         // 0000000000E4: 0C001024
  v_mac_legacy_f32  v9, v15, v15                        // 0000000000E8: 0C121F0F
  ds_write2_b32  v1, v11, v14 offset0:18 offset1:19     // 0000000000EC: D8381312 000E0B01
  s_buffer_load_dword  s0, s[0:3], 0x03                 // 0000000000F4: C2000103
  v_mac_legacy_f32  v16, s28, v4                        // 0000000000F8: 0C20081C
  v_mac_legacy_f32  v17, s32, v4                        // 0000000000FC: 0C220820
  v_mac_legacy_f32  v7, s41, v5                         // 000000000100: 0C0E0A29
  v_mac_legacy_f32  v9, v0, v0                          // 000000000104: 0C120100
  ds_write2_b32  v1, v12, v13 offset1:1                 // 000000000108: D8380100 000D0C01
  v_mac_legacy_f32  v7, s40, v4                         // 000000000110: 0C0E0828
  v_rsq_f32     v2, v9                                  // 000000000114: 7E045D09
  ds_write2_b32  v1, v16, v17 offset0:4 offset1:5       // 000000000118: D8380504 00111001
  v_mov_b32     v3, 1.0                                 // 000000000120: 7E0602F2
  v_mul_legacy_f32  v0, v0, v2                          // 000000000124: 0E000500
  v_mul_legacy_f32  v4, v15, v2                         // 000000000128: 0E08050F
  ds_write2_b32  v1, v7, v3 offset0:6 offset1:7         // 00000000012C: D8380706 00030701
  v_mul_legacy_f32  v2, v10, v2                         // 000000000134: 0E04050A
  ds_write2_b32  v1, v0, v4 offset0:8 offset1:9         // 000000000138: D8380908 00040001
  ds_write_b32  v1, v2 offset:40                        // 000000000140: D8340028 00000201
  ds_write2_b32  v1, v3, v3 offset0:12 offset1:13       // 000000000148: D8380D0C 00030301
  s_waitcnt     lgkmcnt(0)                              // 000000000150: BF8C007F
  v_mov_b32     v0, s0                                  // 000000000154: 7E000200
  ds_write2_b32  v1, v3, v0 offset0:14 offset1:15       // 000000000158: D8380F0E 00000301
  s_endpgm                                              // 000000000160: BF810000
end


// Shader Statistics:
//  NumActiveWaveFront:         40
//  WorkgroupSize:              64
//  NumVRegs:                   18
//  NumSRegs:                   46
//  NumActiveWaveFrontByVReg:   40
//  NumActiveWaveFrontBySReg:   40
//  NumActiveWaveFrontByLDS:    40
//  CycleSim:                   95
//  CycleSimNWaves:             95
//  Code Size:                  356
//Assembler Counts:
//  num_32bit_ops                     : 62
//  num_64bit_ops                     : 13
//  num_alu                           : 50
//  num_fc                            : 16
//  num_inst_exp                      : 0
//  num_inst_ldsgds                   : 9
//  num_inst_mimg                     : 0
//  num_inst_mtbuf                    : 0
//  num_inst_mubuf                    : 0
//  num_inst_sopp                     : 5
//  num_inst_sopc                     : 0
//  num_inst_sop1                     : 2
//  num_inst_sop2                     : 0
//  num_inst_smrd                     : 0
//  num_inst_sopk                     : 1
//  num_inst_vop1                     : 3
//  num_inst_vop2                     : 43
//  num_inst_vop3                     : 0
//  num_inst_vopc                     : 0
//  num_inst_vintrp                   : 0
//  constant_literal_operands         : 0
//  num_tex                           : 9
//  num_vmem_group                    : 0
//  vmem_grouping_started             : 0
// Shader Statistics:
// m_uNumActiveWaveFront             : 40
// m_uVRegLimit                      : 256
// m_uSRegLimit                      : 512
// m_uNumVRegs                       : 18
// m_uNumSRegs                       : 46
// m_uSCCodeSize                     : 356
// m_uWorkgroupSize                  : 64
// m_uNumActiveWaveFrontByVReg       : 40
// m_uNumActiveWaveFrontBySReg       : 40
// m_uNumActiveWaveFrontByLDS        : 40
// m_uCycleSim1Wave                  : 95
// m_uCycleSimNWaves                 : 95

// Assembler Counts:
// num_32bit_ops                     : 62
// num_64bit_ops                     : 13
// num_alu                           : 50
// num_fc                            : 16
// num_inst_exp                      : 0
// num_inst_ldsgds                   : 9
// num_inst_mimg                     : 0
// num_inst_mtbuf                    : 0
// num_inst_mubuf                    : 0
// num_inst_sopp                     : 5
// num_inst_sopc                     : 0
// num_inst_sop1                     : 2
// num_inst_sop2                     : 0
// num_inst_smrd                     : 0
// num_inst_sopk                     : 1
// num_inst_vop1                     : 3
// num_inst_vop2                     : 43
// num_inst_vop3                     : 0
// num_inst_vopc                     : 0
// num_inst_vintrp                   : 0
// num_inst_smem                     : 8
// constant_literal_operands         : 0
// num_tex                           : 9
// num_vmem_group                    : 0
// vmem_grouping_started             : 0
// m_fFullPrecompilePromise          : 0
// m_fIntegerDivideExpansion         : 0
// m_fIntegerModExpansion            : 0
// m_fDoubleDivideExpansion          : 0
// m_fUsesScratch                    : 0
// m_fPerThreadIndirection           : 0
// m_fUsingTableLoads                : 0
// m_fUsingSHmemLoads                : 1
// fSemanticHashFlagOverrideApplied  : 0
// fPSHasNoUAVWrite                  : 0
// m_fRenderTargetsCanBeCompacted    : 0
// version                           : 3
// fCodePatched                      : 0

// Approximately 0 instruction slots used
#endif

const BYTE DebugEffect_VSDebugBn[] =
{
     68,  88,  66,  67, 140,  83, 
    149,  74, 231, 216, 246, 162, 
      8, 112,  94,  75,  34, 130, 
     92,  66,   1,   0,   0,   0, 
     38,  14,   0,   0,   5,   0, 
      0,   0,  52,   0,   0,   0, 
    168,   0,   0,   0,  76,   1, 
      0,   0, 176,  13,   0,   0, 
    192,  13,   0,   0,  73,  83, 
     71,  78, 108,   0,   0,   0, 
      3,   0,   0,   0,   8,   0, 
      0,   0,  80,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,  15, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,   7,   7, 
      0,   0,  99,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   3,   0,   0,   0, 
      2,   0,   0,   0,   3,   3, 
      0,   0,  83,  86,  95,  80, 
    111, 115, 105, 116, 105, 111, 
    110,   0,  78,  79,  82,  77, 
     65,  76,   0,  84,  69,  88, 
     67,  79,  79,  82,  68,   0, 
     79,  83,  71,  78, 156,   0, 
      0,   0,   5,   0,   0,   0, 
      8,   0,   0,   0, 128,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
      3,  12,   0,   0, 128,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 128,   0, 
      0,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      7,   8,   0,   0, 137,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   3,   0,   0,   0, 
     15,   0,   0,   0, 143,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   4,   0,   0,   0, 
     15,   0,   0,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  67,  79,  76,  79,  82, 
      0,  83,  86,  95,  80, 111, 
    115, 105, 116, 105, 111, 110, 
      0, 171,  83,  72,  69,  88, 
     92,  12,   0,   0,  80,   0, 
      1,   0,  23,   3,   0,   0, 
     53,  16,   0,   0,   5,   0, 
      0,   0, 183,   0,   0,   0, 
     80,   0,   1,   0, 178,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     13,   0,   0,   0,  95,   0, 
      0,   3, 242,  16,  16,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   3, 114,  16,  16,   0, 
      1,   0,   0,   0,  95,   0, 
      0,   3,  50,  16,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      0,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3, 114,  32,  16,   0, 
      2,   0,   0,   0, 101,   0, 
      0,   3, 242,  32,  16,   0, 
      3,   0,   0,   0, 103,   0, 
      0,   4, 242,  32,  16,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0, 104,   0,   0,   2, 
      2,   0,   0,   0,  54,   0, 
      0,   5,  50,  32,  16,   0, 
      0,   0,   0,   0,  70,  16, 
     16,   0,   2,   0,   0,   0, 
     17,   0,   0,   8,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,   2,   0, 
      0,   0,  17,   0,   0,   8, 
     34,   0,  16,   0,   0,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,  17,   0, 
      0,   8,  66,   0,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   4,   0,   0,   0, 
     54,   0,   0,   5, 130,   0, 
     16,   0,   0,   0,   0,   0, 
      1,  64,   0,   0,   0,   0, 
    128,  63,  54,   0,   0,   5, 
    242,  32,  16,   0,   1,   0, 
      0,   0,  70,  14,  16,   0, 
      0,   0,   0,   0,  50,   0, 
      0,  15, 114,   0,  16,   0, 
      0,   0,   0,   0,  70,  18, 
     16,   0,   1,   0,   0,   0, 
      2,  64,   0,   0,   0,   0, 
      0,  64,   0,   0,   0,  64, 
      0,   0,   0,  64,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128, 191,   0,   0, 
    128, 191,   0,   0, 128, 191, 
      0,   0,   0,   0,  16,   0, 
      0,   8,  18,   0,  16,   0, 
      1,   0,   0,   0,  70,   2, 
     16,   0,   0,   0,   0,   0, 
     70, 130,  32,   0,   0,   0, 
      0,   0,   6,   0,   0,   0, 
     16,   0,   0,   8,  34,   0, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  70, 130,  32,   0, 
      0,   0,   0,   0,   7,   0, 
      0,   0,  16,   0,   0,   8, 
     66,   0,  16,   0,   1,   0, 
      0,   0,  70,   2,  16,   0, 
      0,   0,   0,   0,  70, 130, 
     32,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  16,   0, 
      0,   7,  18,   0,  16,   0, 
      0,   0,   0,   0,  70,   2, 
     16,   0,   1,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  68,   0,   0,   5, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  56,   0, 
      0,   7, 114,  32,  16,   0, 
      2,   0,   0,   0,   6,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   1,   0, 
      0,   0,  54,   0,   0,   8, 
    114,  32,  16,   0,   3,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0, 128,  63,   0,   0, 
    128,  63,   0,   0, 128,  63, 
      0,   0,   0,   0,  54,   0, 
      0,   6, 130,  32,  16,   0, 
      3,   0,   0,   0,  58, 128, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  17,   0, 
      0,   8,  18,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,   9,   0,   0,   0, 
     17,   0,   0,   8,  34,  32, 
     16,   0,   4,   0,   0,   0, 
     70,  30,  16,   0,   0,   0, 
      0,   0,  70, 142,  32,   0, 
      0,   0,   0,   0,  10,   0, 
      0,   0,  17,   0,   0,   8, 
     66,  32,  16,   0,   4,   0, 
      0,   0,  70,  30,  16,   0, 
      0,   0,   0,   0,  70, 142, 
     32,   0,   0,   0,   0,   0, 
     11,   0,   0,   0,  17,   0, 
      0,   8, 130,  32,  16,   0, 
      4,   0,   0,   0,  70,  30, 
     16,   0,   0,   0,   0,   0, 
     70, 142,  32,   0,   0,   0, 
      0,   0,  12,   0,   0,   0, 
     62,   0,   0,   1,  53,  16, 
      0,   0, 194,   0,   0,   0, 
     23,   0,   1,   0,  32,  79, 
     23,   0, 120,   1, 237, 152, 
     75,  76,  19,  65,  24, 199, 
    103, 103, 183, 195, 118, 153, 
     78,  75,  41, 229,  85,  74, 
     81,  84,  20,  65,  98,  60, 
     25,  93, 181,  64,  52, 225, 
     64,   2,  68,  57, 212,  16, 
     30, 173, 144, 240, 104,  40, 
     38,  94, 172, 133,  24, 189, 
    112, 240, 170, 103,  15, 122, 
    243, 106,  76,   4, 203, 133, 
    139,  49, 241, 226, 213, 171, 
     87, 163,   9, 241, 162, 255, 
    111, 217, 213,   6, 229, 172, 
     49, 243,  75, 127, 243, 237, 
     60, 118, 246, 219, 153, 237, 
    101,  70, 155, 153, 199, 215, 
     11, 217,  15,  20, 191, 188, 
    114,  59, 118,  57,  99,  33, 
    170,   0, 139,  10,  80,  76, 
     80, 137, 254,  38,  42,  25, 
    235, 161, 194, 128,  24,  27, 
     67, 232, 135, 231,  80, 191, 
    140,  72, 125, 129,  79,  30, 
    223, 205,  22,  10, 235, 217, 
     27, 184,  62,  13, 105, 154, 
     49, 223, 139, 208, 134, 103, 
    161, 130, 193,  51, 107,   9, 
    218, 232,  81, 181,  80,  94, 
    189, 176,  22, 154, 139, 248, 
    109, 158, 105,  42, 254, 204, 
     48, 164, 252,  15, 131, 114, 
     11, 160, 121,  41,  79, 130, 
    222, 247,  95, 131, 214,  40, 
    216,  39, 130, 246, 163,  22, 
    202, 221, 132, 196,  83, 127, 
     31, 131,  33,  31, 253, 122, 
    176, 151, 219, 240,  48, 190, 
    131, 224, 187,   8,   8, 234, 
     52, 191,  96, 163,   3, 194, 
    120, 152,  17, 124,  39,  38, 
    208,  32, 208,  41, 176, 120, 
     66, 192,  58, 136, 141,  18, 
     97, 232, 192, 122,  40,  97, 
      4,  34,  65,  17, 133,  72, 
     66,  52, 192,  56, 108, 132, 
    120,  39, 129, 252,  68,  18, 
    226, 123,  21,  45, 176,  21, 
    182, 193, 118, 152, 130,  29, 
     48,  13,  59, 247, 115, 193, 
    163,  60, 132, 177, 255, 134, 
    130, 227,  67,   5, 194, 164, 
     12, 255, 127, 104,  13, 130, 
    255,   3, 173,   5, 213,   3, 
    106, 175,  53,  26, 141,  70, 
    163, 209, 104,  52,  26, 141, 
     70, 163, 209, 104, 254,  22, 
    188, 107, 227,  53,  51,  43, 
    219, 247, 216, 230,  86, 198, 
    216, 168, 166, 140, 251, 213, 
     22, 227,  65, 213,  54, 118, 
    171,  49,  99, 179, 218, 109, 
    168, 157,  98, 116, 115, 139, 
    177, 141, 247, 206, 167, 183, 
    166, 129,  24,  70, 164, 241, 
    130,  89, 202,  68, 221,  70, 
    221,  97,  49,  21, 226, 150, 
    139,   1,  85, 197, 152,  10, 
    243, 152, 107,   9, 203, 141, 
    112, 230, 218,  34, 230, 242, 
     16,  87, 141,  42, 174, 154, 
     85,  66, 181, 171, 164, 146, 
      2, 237,  13, 220, 237,  84, 
     66,  29,  85,  41, 117,  66, 
    165,  85, 175,  82,  42,  46, 
    227, 110,  82,  38, 220,  54, 
    153, 116, 153, 193, 221, 180, 
     20, 242, 136,  76, 201, 227, 
     50,  45,  79,  73,  37,  27, 
    156, 184, 219, 228,  36, 220, 
     86,  39, 233,  26,  55, 121, 
    185, 195,  17, 178, 203,  73, 
    201,  99,  78,  90, 158, 116, 
    148, 140, 217, 113,  55,  97, 
     39, 220,  22,  27, 247, 155, 
     76, 217, 166, 163, 184, 201, 
     85, 202,  22,  50,  99, 167, 
    100, 183, 157, 150,  61, 182, 
    146,  21, 110, 149,  63, 115, 
    187,  76, 239, 193, 184,  44, 
    191, 179, 217, 158, 169, 162, 
    117,  81, 206, 246, 100, 132, 
     91, 157, 136,  97, 167, 222, 
     58, 131, 200,  66, 134, 117, 
      9, 209, 178,  44, 193, 216, 
    250, 150, 119, 132, 199, 189, 
    223,  79,  90, 233, 248, 235, 
     64,  27, 157, 241,  29, 108, 
    243, 174, 173, 253, 179, 178, 
    128, 129,  36, 149, 140,  73, 
     63, 118, 195,  48,  52, 188, 
     83,  62, 198,  34, 208, 242, 
     79, 218, 134,  38, 190,  53, 
    190, 121, 254, 114, 137, 174, 
    137, 121, 255, 158, 107, 126, 
    204,  64,   9, 127,  81, 161, 
    226,  55,  30, 249, 227,  43, 
    126, 164,  92, 233, 188,  74, 
      5, 167, 186, 216,  68, 226, 
    133, 223, 255, 204, 143, 116, 
    214,  85,  15,  15, 230, 177, 
    235, 247,  79,  65, 202, 116, 
    240, 124, 110,  44,  95,  92, 
     41, 229,  38, 103,  86, 238, 
    244,  93, 153, 184, 218,  55, 
     62, 189,  84,  92, 204, 151, 
    114,  35,  11, 107, 165, 220, 
    208, 194, 106, 126, 118, 109, 
    114,  98,  36,  87,  90, 157, 
    205, 141, 207,  79, 207, 229, 
     87,  75, 185, 193, 149, 165, 
    226, 194,  98, 126, 206, 187, 
    105, 116,  57,  63, 148, 159, 
    185, 125, 107, 184,  80, 192, 
    208, 169, 235, 227,  94,  45, 
    187, 220,  95, 156, 155,  97, 
     63,   0, 122, 210, 130, 224, 
     53,  16,   0,   0, 209,   0, 
      0,   0,  23,   0,   1,   0, 
     16, 195,  23,   0, 120,   1, 
    237, 152, 203,  79,  19,  81, 
     20, 198, 111, 167, 183, 151, 
    153, 225, 246, 182, 148,  82, 
     10,  76,  75, 209, 106, 240, 
      1, 130,  33, 198,  24,  52, 
     35, 212, 104, 130,   9,  81, 
    170,  97,  81, 131,  60, 202, 
     35, 225, 209,  80,  76,  92, 
     33,  26,  19,  99, 226,  70, 
     67, 140, 127, 128,  27, 255, 
      1,  19, 163,  17,  44,  11, 
    221, 232, 194, 181,  11, 183, 
    110,  13,  43,  54, 250, 157, 
    233,  12, 146,  42, 107, 141, 
    153,  95, 230, 187, 231,  62, 
    206, 204, 124, 115, 239, 172, 
    206,  86,  51, 115,  16,  59, 
    233,  97, 138, 219, 175, 207, 
    165,  62, 104, 140, 133, 104, 
      0, 208, 117,  40, 197, 169, 
    101, 108,  54,  65,  45,  99, 
     89, 106,   2,  16,  18, 162, 
      8, 167, 160, 117, 140, 109, 
    196,  78, 136, 214,  41,  90, 
    239,  31,  15, 188, 188, 185, 
     62,  48, 131, 126,  47, 212, 
      0,  93, 115, 117,  22, 162, 
    199, 210, 124,   4, 170, 133, 
    114,  61,  31, 244, 170, 189, 
      4, 161,  99, 208,  94,  12, 
    106,   0, 221,  87,  15, 237, 
     50,  78, 205, 159, 185,   2, 
    145, 255, 253, 240,  60, 123, 
    120,  62, 233, 123, 255,  53, 
    104, 143, 188, 115,  34, 232, 
     60, 246, 162,  32,  14,  17, 
    220,  61,  71,  47,  37, 239, 
    142, 189, 179, 220, 132, 246, 
    227,   7, 240, 158,  67,  80, 
    191,  15,  34, 232,  92,   4, 
     27, 238,  17, 129,   7,  25, 
    161, 109,  69,   5,  38,   4, 
     18,   4,  14,  82,   8, 168, 
     14, 210,  33,  28, 150,  48, 
     33,  28, 148, 144,  80,  24, 
    130,  65, 129,  13,  22,  48, 
     33, 176, 233,  34,   6,  53, 
     66, 248,  38, 209,   4, 193, 
    163, 192, 255,  42, 146,  80, 
     11, 212,  10, 181,  65,  22, 
    148, 130, 210,  80, 187, 251, 
    207, 112, 114, 133,  49,  53, 
     64,   4, 170,  95,  42, 180, 
    234,  31,  45, 130, 228, 244, 
    255, 133, 246,   0, 219, 188, 
     75, 117,  55, 170, 208,  47, 
     66, 242, 241, 241, 241, 241, 
    241, 241, 241, 241, 241, 241, 
    241, 241, 241, 241, 241, 249, 
    155, 104,  29, 247, 222, 178, 
    224, 253, 205,  59, 236, 209, 
     70, 214,  16,  91,  37, 196, 
    136,  98,  74,  55,  62,  85, 
     50, 198, 147, 138,  12, 174, 
    109,  42, 201, 100, 163, 210, 
    148, 101, 172,  87, 194,  38, 
    147,  49, 169, 201, 102, 197, 
     85, 212, 120,  90,  73,  26, 
    207,  42,  82, 103, 178, 193, 
    212, 100,  66, 114, 217, 166, 
    132, 138, 234, 154, 108,  50, 
    185, 108, 149,  66, 154, 108, 
    237, 179, 249, 237,  99,  48, 
    174, 115, 217,  98,  10,  73, 
    239, 105,  87,   9, 101,  96, 
    222, 192, 252, 225, 184, 165, 
    146, 186, 144, 182,  93, 250, 
    202, 152, 205, 211, 120, 202, 
     65, 122,  63, 214, 117, 172, 
     31, 141, 167, 213, 161, 152, 
     37, 115, 180,  30, 176, 121, 
    202,  76, 200,   3, 240, 115, 
      2, 126,  78, 198, 149,  58, 
     18,  75, 203, 108, 212, 146, 
    151, 104,  93, 179, 185, 165, 
     39, 100,   7,  60, 118, 195, 
     99, 111,  76, 201, 206, 104, 
     90, 170,  20,  87, 151, 105, 
     61, 104, 243,  12, 188, 118, 
    193, 107,  79,  84, 201,  72, 
     59, 151, 140, 230, 165, 205, 
    143, 195, 115,  93, 132,  75, 
     78, 227, 176, 205, 181,  27, 
    124,  53,  74, 253, 122, 155, 
    127, 215, 196, 106,  93,  72, 
     87, 113,  26, 195,  99, 240, 
    161,  86, 137, 132, 152,  74, 
    210,  24, 158,  84,   8, 123, 
     67, 125, 122,  62,  69, 110, 
    243,  44,  69, 228, 118,  82, 
     68,  78,  15,  69, 172, 211, 
    247, 135,  52, 182, 218, 231, 
    142,  79, 187, 177, 159,  34, 
    242,  25, 187, 187, 209, 228, 
     28, 140, 115, 237, 210,  66, 
    101, 181, 154, 185,  36,  53, 
     53, 115,  84,  87, 172, 157, 
    115, 250, 188,  90, 151, 243, 
    120, 238, 214,  33, 215, 220, 
     72, 117, 100, 170, 235,   6, 
    156, 202,  34,  99,  97, 136, 
    187,  85, 189,  92, 126, 167, 
    241, 221, 139,  87,  11, 212, 
     39, 190, 184, 247, 188, 113, 
     99,   6, 146, 208,  47, 168, 
     58, 253,  59, 220, 173, 129, 
    111, 187, 247, 145,  87, 170, 
    151, 169, 106,  37, 177,  90, 
     56,   5,  89,  55, 207, 114, 
     35, 213, 215, 168, 206,  92, 
    235, 163, 223,  93,  31, 131, 
    200, 233, 224, 153, 194, 213, 
     98, 105, 169,  92,  24, 157, 
     88, 186, 221, 117,  62, 127, 
    177, 107, 100, 124, 161,  52, 
     95,  44,  23, 134, 230,  86, 
    202, 133, 220, 220, 114, 113, 
    114, 101,  52,  63,  84,  40, 
     47,  79,  22,  70, 102, 199, 
    167, 138, 203, 229, 194, 224, 
    210,  66, 105, 110, 190,  56, 
    229, 220,  52, 188,  88, 204, 
     21,  39, 110, 205,  92, 152, 
    158,  70, 234, 216, 245,  17, 
    103,  52, 176, 216,  93, 154, 
    154,  96,  63,   1, 198, 207, 
    156,  91,  53,  16,   0,   0, 
    205,   0,   0,   0,  23,   0, 
      1,   0,   0, 127,  23,   0, 
    120,   1, 237, 152, 203, 107, 
     19,  81,  20, 198, 207, 100, 
     38,  55, 147, 201, 201, 205, 
    100, 154, 198,  86, 211,  52, 
    141,  85, 170, 210,  34, 226, 
     66,  68, 138, 214, 138, 139, 
     46,  20,  91, 196,  69, 164, 
    246, 145, 106, 161, 143, 208, 
     40, 116,  85,  31,  27,  69, 
    187,  18,  23, 254,  11, 238, 
    186,  21, 193, 214, 184, 113, 
    161,  46,  68, 196, 165,  91, 
    183, 226,  66,  69, 208, 239, 
     76, 102, 106, 168, 138,  75, 
     69, 230, 215, 126, 231,  62, 
    103, 238, 153, 115, 110,  54, 
    231, 234,  54, 242, 113,  63, 
    127, 240, 123,  31,  31,  13, 
    118,  61, 139,  17, 197, 101, 
    208,  66,  45,  39, 150, 168, 
     55,  47, 150, 168,  79, 140, 
      1,  97, 175, 135, 102,   0, 
    154, 198, 248,  40,  90,  89, 
     11, 245, 226, 249, 173, 161, 
    153, 153,  59,  67, 232,  82, 
     63, 212,   6, 141,   7,  26, 
    132, 210, 208,   1, 200, 133, 
    132, 164, 152,  22,  66,  63, 
    112, 204,  38, 114, 172,   9, 
    237, 131,  90, 177, 197, 128, 
    173, 239, 160,   9,  49, 191, 
    102,   4,  18, 255, 127, 135, 
    248,  38, 132, 239,  12, 253, 
    148, 239, 253, 215, 144, 184, 
    132, 121,  18,  36,  31, 173, 
    104,  72, 226,  38, 188, 110, 
     23, 219, 124,  70, 112, 131, 
    188, 134, 185, 220, 128, 126, 
    199,  55,  96,  73, 167, 133, 
    112,  44, 239,  87, 116, 106, 
    191,  50, 110, 150,  84, 236, 
    169, 171,  48, 161, 176, 168, 
    144,  72, 165, 160,   4, 132, 
     68,  41,   4,  84,  57,  80, 
     10,  98,   8,  23,  65, 193, 
     65, 149, 129,  16, 100, 149, 
    133, 224, 140, 194, 133,  81, 
    248,  38,   5, 127,  21, 124, 
     84, 184, 165, 170,   3, 234, 
    132, 182,  67,  59, 160,   2, 
    212,   5,  21, 161, 238, 224, 
    206,  88,  77, 143, 112, 164, 
    143,  50, 154,  95, 170,  98, 
    205, 155, 164,  76, 241, 244, 
    255,  69,  98,  16, 254,  30, 
    132, 102,  52, 154, 249,  14, 
    175, 200, 105,  49,  17,  17, 
     17,  17,  17,  17,  17,  17, 
     17,  17,  17,  17,  17,  17, 
     17,  17, 127, 137,  88, 207, 
    141, 199, 100,  94, 219, 184, 
     74, 171, 235, 189,  70, 236, 
    105, 201, 184, 221,  40,  24, 
    171,  13, 219, 120, 217, 232, 
     48, 238,  54,  92, 227,  94, 
    163, 150,  89,  93,  39, 186, 
    246, 202, 121, 255, 194, 148, 
    125,   9, 109, 233, 148,  86, 
     58, 137, 185,  36, 230, 242, 
    148, 211, 138,  45, 118,  88, 
    113,  70, 231, 117, 155,  46, 
    104,  27, 107,  54, 214, 182, 
     83,  81, 183, 123,  57, 142, 
     59,  22,  39,  29, 197, 154, 
    243, 236, 113, 129,  79,  83, 
    124, 237, 155, 249, 245, 177, 
     84,  74, 186, 117,  73, 239, 
    212, 101, 189, 155,  72, 119, 
    122,  69, 206, 185,  57, 182, 
    108, 139, 109,  91, 113, 218, 
    201, 115, 214,  41, 176,  65, 
    111,  94,  25,  41, 162,  34, 
    151, 184, 140, 191, 125,  90, 
    235,  93,  30, 113, 135,  91, 
    100, 167, 221, 211, 108, 231, 
    217, 181,  11, 236, 102,  15, 
    189,  53,  98,  38, 117,  57, 
     37, 238, 113, 202, 188,  23, 
     39, 246, 186, 196, 153, 110, 
    143, 189,  54, 172, 165,  52, 
    153,   6,  53,  10, 118, 137, 
     75, 118, 153, 247,  56, 154, 
    201, 240,  32, 172, 113, 154, 
    250, 108, 205, 201, 243, 214, 
    138,  21, 199, 216, 205, 210, 
    135, 152,  90, 161,  56, 233, 
     76, 220, 214,  42, 129, 185, 
    132,  73,  78, 220, 210, 118, 
     18, 125, 178, 168, 143,  14, 
    226,  60,  34,  78,  99, 108, 
    154,  36, 241, 161,  24, 173, 
    232, 140, 140,  37, 194, 215, 
    215, 253,  18,  32, 246, 224, 
    127, 147,  78,  41,  16, 109, 
    153, 243, 107, 158,  91, 230, 
    252, 190,  37, 155, 127, 112, 
     33, 168,  33,  30,   9, 218, 
     94,  72, 234, 166,  70,  80, 
    117, 148,  90, 175,  21,  84, 
    228, 134, 199, 190, 180,  61, 
    121, 240, 112,  94, 250, 194, 
    253, 224, 153, 229, 160,  45, 
     65,  12, 253, 137, 141,  96, 
    255,  90, 208, 138, 175,  82, 
    235, 210, 126,   5,  12,  72, 
    209,  19, 188,  11, 214, 223, 
      6, 173, 212, 198, 144, 182, 
    159, 252, 248,  20, 172,  75, 
    125,  90,  60,  61, 126, 184, 
    114, 166,  90,  91, 172,  87, 
    206,  77,  46,  46, 247,  31, 
     27,  59, 217,  63,  58,  49, 
     95, 155, 171, 214,  43,  35, 
    179, 151, 235, 149, 225, 217, 
    165, 234, 212, 229, 115,  99, 
     35, 149, 250, 210,  84, 101, 
    244, 210, 196, 116, 117, 169, 
     94,  57, 190,  56,  95, 155, 
    157, 171,  78, 251,  15, 157, 
     90, 168,  14,  87,  39, 175, 
     92,  60,  49,  51, 131, 173, 
    227, 103,  71, 253, 209, 208, 
    194,  64, 109, 122, 146, 190, 
      3, 229,  71, 137, 227,   0, 
     88,  72,  83,  72,   8,   0, 
      0,   0,  68,  84, 250,  19, 
    193, 169, 185, 109,  88,  80, 
     68,  80,  94,   0,   0,   0, 
     67,  58,  92,  82, 101, 112, 
    111, 115,  92,  88,  98, 111, 
    120,  45,  65,  84,  71,  45, 
     83,  97, 109, 112, 108, 101, 
    115,  92,  75, 105, 116, 115, 
     92,  68, 105, 114, 101,  99, 
    116,  88,  84,  75,  92, 115, 
    114,  99,  92,  83, 104,  97, 
    100, 101, 114, 115,  92,  67, 
    111, 109, 112, 105, 108, 101, 
    100,  92,  88,  98, 111, 120, 
     79, 110, 101,  68, 101,  98, 
    117, 103,  69, 102, 102, 101, 
     99, 116,  95,  86,  83,  68, 
    101,  98, 117, 103,  66, 110, 
     46, 112, 100,  98
};
